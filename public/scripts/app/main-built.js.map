{"version":3,"file":"main-built.js","sources":["../libs/lodash/lodash.custom.js","../libs/backbone/backbone-1.1.2.js","../libs/marionette/marionette-2.3.2.js","app.js","../libs/modernizr/modernizr-2.8.3.js","util/modernizr.js","../libs/handlebars/handlebars-v3.0.0.js","../libs/require/text.js","templates/appMain.html!text","templates/game.html!text","templates/boxSection.html!text","templates/diceSection.html!text","templates/playerSection.html!text","templates/boxItem.html!text","templates/player.html!text","templates/die.html!text","modules/templateManager.js","models/player.js","collections/players.js","views/playerView.js","views/playerListView.js","views/playerSectionView.js","models/boxItem.js","collections/boxItems.js","views/boxItemView.js","views/boxItemListView.js","views/boxSectionView.js","models/die.js","collections/dice.js","views/dieView.js","views/diceListView.js","views/diceSectionView.js","views/gameView.js","views/appView.js","modules/main.js","main.js"],"names":["baseCompareAscending","value","other","valIsReflexive","othIsReflexive","baseIndexOf","array","fromIndex","indexOfNaN","index","length","baseIsFunction","baseSortBy","comparer","sort","baseToString","charAtCallback","string","charCodeAt","charsLeftIndex","chars","indexOf","charAt","charsRightIndex","compareAscending","object","criteria","compareMultipleAscending","objCriteria","othCriteria","result","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeStringChar","stringEscapes","fromRight","isObjectLike","isSpace","charCode","replaceHolders","placeholder","resIndex","PLACEHOLDER","sortedUniq","iteratee","seen","computed","trimmedLeftIndex","trimmedRightIndex","unescapeHtmlChar","htmlUnescapes","runInContext","context","lodash","isArray","LazyWrapper","LodashWrapper","hasOwnProperty","call","wrapperClone","baseLodash","chainAll","actions","this","__wrapped__","__actions__","__chain__","__dir__","__dropCount__","__filtered__","__iteratees__","__takeCount__","POSITIVE_INFINITY","__views__","lazyClone","iteratees","views","arrayCopy","lazyReverse","clone","lazyValue","baseWrapperValue","dir","isRight","view","getView","start","end","dropCount","takeCount","nativeMin","iterLength","outer","iterIndex","data","type","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","MapCache","__data__","mapDelete","key","has","mapGet","undefined","mapHas","mapSet","SetCache","values","hash","nativeCreate","set","Set","push","cacheIndexOf","cache","isObject","cachePush","add","source","Array","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","arrayMap","arrayMax","NEGATIVE_INFINITY","arrayMin","arrayReduce","accumulator","initFromArray","arrayReduceRight","arraySome","assignDefaults","objectValue","sourceValue","assignOwnDefaults","baseAssign","customizer","props","keys","baseCopy","baseAt","collection","isArr","isLength","propsLength","parseFloat","isIndex","baseBindAll","methodNames","createWrapper","BIND_FLAG","baseCallback","func","thisArg","argCount","isBindable","bindCallback","identity","baseMatches","baseProperty","baseMatchesProperty","baseClone","isDeep","stackA","stackB","initCloneArray","tag","objToString","isFunc","funcTag","objectTag","argsTag","cloneableTags","initCloneByTag","isHostObject","initCloneObject","baseForOwn","subValue","baseDelay","wait","args","TypeError","FUNC_ERROR_TEXT","setTimeout","apply","baseSlice","baseDifference","getIndexOf","isCommon","createCache","valuesLength","valuesIndex","baseEach","iterable","toObject","baseEachRight","baseForOwnRight","baseEvery","baseFill","baseFilter","baseFind","eachFunc","retKey","baseFlatten","isStrict","isArguments","valIndex","valLength","baseFor","keysFunc","baseForRight","baseForIn","keysIn","baseFunctions","isFunction","baseInvoke","methodName","baseIsEqual","isWhere","valType","othType","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","valWrapped","othWrapped","equalArrays","equalObjects","pop","baseIsMatch","strictCompareFlags","noCustomizer","objValue","srcValue","baseMap","isStrictComparable","baseMerge","isSrcArr","baseMergeDeep","mergeFunc","isPlainObject","toPlainObject","basePullAt","indexes","previous","splice","baseRandom","min","max","floor","nativeRandom","baseReduce","initFromCollection","baseSome","baseUniq","isLarge","seenIndex","baseValues","action","binaryIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","binaryIndexBy","valIsNaN","valIsUndef","isReflexive","setLow","MAX_ARRAY_INDEX","arguments","bufferClone","buffer","bufferSlice","composeArgs","partials","holders","holdersLength","argsIndex","argsLength","nativeMax","leftIndex","leftLength","composeArgsRight","holdersIndex","rightIndex","rightLength","pad","createAggregator","setter","initializer","getCallback","createAssigner","assigner","isIterateeCall","createBindWrapper","wrapper","Ctor","createCtorWrapper","createCompounder","callback","words","deburr","thisBinding","baseCreate","prototype","createExtremum","arrayFunc","isMin","noIteratee","isString","toIterable","extremumBy","createHybridWrapper","bitmask","partialsRight","holdersRight","argPos","ary","arity","isCurry","isCurryRight","argsHolders","newArgPos","newArity","newsHolders","newHoldersRight","newPartials","newPartialsRight","PARTIAL_FLAG","PARTIAL_RIGHT_FLAG","isCurryBound","BIND_KEY_FLAG","isBind","isBindKey","reorder","isAry","ARY_FLAG","CURRY_FLAG","CURRY_BOUND_FLAG","CURRY_RIGHT_FLAG","createPad","strLength","nativeIsFinite","padLength","repeat","ceil","slice","createPartialWrapper","getData","newData","mergeData","baseSetData","setData","arrLength","othLength","arrValue","othValue","othIndex","boolTag","dateTag","errorTag","name","message","numberTag","regexpTag","stringTag","objProps","objLength","othProps","hasCtor","objCtor","constructor","othCtor","exValue","current","target","transforms","size","input","Object","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","ctorByTag","byteOffset","reFlags","exec","lastIndex","support","funcNames","funcDecomp","fnToString","reFuncName","test","reThis","isNative","MAX_SAFE_INTEGER","prereq","srcBitmask","newBitmask","arityFlags","REARG_FLAG","bindFlags","comboFlags","isRearg","isCombo","pickByArray","pickByCallback","oldArray","shimIsPlainObject","ownLast","shimKeys","allowIndexes","nonEnumStrings","nonEnumArgs","unindexedChars","split","chunk","guard","compact","difference","drop","n","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","first","flatten","flattenDeep","initial","intersection","caches","last","lastIndexOf","pull","pullAt","remove","rest","sortedIndex","sortedLastIndex","take","takeRight","takeRightWhile","takeWhile","union","uniq","isSorted","unzip","getLength","without","xor","concat","zip","zipObject","chain","tap","interceptor","thru","wrapperChain","wrapperCommit","wrapperPlant","parent","wrapperReverse","reverse","wrapperToString","wrapperValue","at","every","filter","find","findLast","findWhere","forEach","forEachRight","includes","invoke","map","pluck","reduce","reduceRight","reject","sample","shuffle","rand","some","sortBy","sortByAll","where","after","temp","before","bind","bindAll","functions","bindKey","curry","curryRight","debounce","options","cancel","timeoutId","clearTimeout","maxTimeoutId","trailingCall","delayed","remaining","now","stamp","isCalled","lastCalled","maxDelayed","trailing","maxWait","debounced","leading","leadingCall","defer","delay","flow","funcs","flowRight","memoize","resolver","memoized","get","Cache","negate","once","partial","partialRight","rearg","spread","throttle","debounceOptions","wrap","cloneDeep","isBoolean","isDate","isElement","nodeType","nodeTag","isEmpty","isEqual","isError","isMatch","isNaN","isNumber","reNative","reHostCtor","isNull","isRegExp","typedArrayTags","isUndefined","toArray","create","properties","defaults","assign","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","invert","multiValue","proto","objectProto","isProto","skipIndexes","skipErrorProps","enumErrorProps","errorProto","Error","skipProto","enumPrototypes","nonEnumShadows","stringProto","nonEnums","nonEnumProps","shadowProps","nonEnum","mapValues","omit","String","pairs","pick","defaultValue","transform","valuesIn","inRange","random","floating","noMin","noMax","capitalize","toUpperCase","replace","reLatin1","endsWith","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChars","reRegExpChars","padLeft","padRight","parseInt","radix","nativeParseInt","startsWith","template","otherOptions","settings","templateSettings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","RegExp","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","match","escapeValue","interpolateValue","esTemplateValue","evaluateValue","offset","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","Function","trim","trimLeft","trimRight","trunc","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","separator","search","newEnd","substring","global","unescape","reHasEscapedHtml","reEscapedHtml","pattern","reWords","e","matches","constant","matchesProperty","mixin","isObj","noConflict","_","oldDash","noop","property","propertyOf","range","step","times","MAX_ARRAY_LENGTH","uniqueId","prefix","id","idCounter","root","contextProps","Date","Math","Number","arrayProto","document","window","toString","ArrayBuffer","getPrototypeOf","propertyIsEnumerable","Uint8Array","WeakMap","Float64Array","nativeIsArray","isFinite","nativeKeys","nativeNow","nativeNumIsFinite","pow","FLOAT64_BYTES_PER_ELEMENT","BYTES_PER_ELEMENT","metaMap","Float32Array","Int8Array","Int16Array","Int32Array","Uint8ClampedArray","Uint16Array","Uint32Array","toLocaleString","valueOf","x","0","y","WinRTError","spliceObjects","dom","createDocumentFragment","reEscape","reEvaluate","byteLength","floatLength","count","HOT_SPAN","HOT_COUNT","countBy","groupBy","indexBy","partition","getTime","objProto","merge","camelCase","word","toLowerCase","kebabCase","whitespace","reHexPrefix","snakeCase","startCase","backflow","collect","compose","each","eachRight","extend","methods","select","tail","unique","all","any","contains","detect","foldl","foldr","head","include","inject","VERSION","isFilter","isWhile","LAZY_WHILE_FLAG","filtered","countName","whileName","takeName","dropName","operationName","createCallback","done","lodashFunc","retUnwrapped","isHybrid","isLazy","onlyLazy","otherArgs","chainName","fixObjects","commit","plant","run","toJSON","mapTag","setTag","weakMapTag","upper","lower","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","<",">","\"","'","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","\\","\n","\r"," "," ","freeExports","exports","freeModule","module","freeGlobal","self","moduleExports","define","amd","factory","$","Backbone","require","jQuery","Zepto","ender","previousBackbone","emulateHTTP","emulateJSON","Events","on","eventsApi","_events","events","ctx","off","_callback","retain","ev","names","i","l","j","k","trigger","allEvents","triggerEvents","stopListening","obj","listeningTo","_listeningTo","_listenId","eventSplitter","a1","a2","a3","listenMethods","listenTo","listenToOnce","implementation","method","unbind","Model","attributes","attrs","cid","parse","changed","initialize","validationError","idAttribute","sync","attr","val","unset","changes","silent","changing","prev","_validate","_changing","_previousAttributes","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","fetch","model","success","resp","wrapError","save","xhr","validate","serverAttrs","isNew","patch","destroy","url","base","urlError","encodeURIComponent","isValid","error","modelMethods","unshift","Collection","models","comparator","_reset","reset","setOptions","addOptions","singular","_byId","_removeReference","existing","targetModel","sortable","sortAttr","toAdd","toRemove","modelMap","order","_prepareModel","_addReference","orderedModels","previousModels","shift","_onModelEvent","event","attributeMethods","iterator","View","viewOptions","_ensureElement","delegateEvents","delegateEventSplitter","tagName","selector","$el","render","setElement","element","delegate","undelegateEvents","el","eventName","className","methodMap","params","dataType","contentType","JSON","stringify","_method","beforeSend","setRequestHeader","processData","noXhrPatch","ActiveXObject","ajax","XMLHttpRequest","dispatchEvent","update","delete","read","Router","routes","_bindRoutes","optionalParam","namedParam","splatParam","route","_routeToRegExp","router","history","fragment","_extractParameters","execute","navigate","optional","param","decodeURIComponent","History","handlers","location","routeStripper","rootStripper","isExplorer","trailingSlash","pathStripper","started","interval","atRoot","pathname","getHash","href","getFragment","forcePushState","_hasPushState","_wantsHashChange","decodeURI","hashChange","_wantsPushState","pushState","docMode","documentMode","oldIE","navigator","userAgent","frame","iframe","hide","appendTo","contentWindow","checkUrl","_checkUrlInterval","setInterval","loc","replaceState","title","loadUrl","stop","clearInterval","handler","_updateHash","open","close","protoProps","staticProps","child","Surrogate","__super__","Marionette","Mn","previousChildViewContainer","ChildViewContainer","Container","_views","_indexByModel","_indexByCustom","_updateLength","customIndex","viewCid","findByModel","findByModelCid","modelCid","findByCid","findByCustom","findByIndex","previousWreqr","Wreqr","Handlers","_wreqrHandlers","setHandlers","setHandler","config","hasHandler","getHandler","removeHandler","removeAllHandlers","CommandStorage","_commands","getCommands","commandName","commands","command","instances","addCommand","clearCommands","Commands","storageType","_initializeStorage","_executeCommands","storage","StorageType","RequestResponse","request","EventAggregator","EA","Channel","channelName","vent","reqres","connectEvents","_connect","connectCommands","connectRequests","fn","radio","Radio","_channels","_proxyMethods","channel","_getChannel","system","messageSystems","proxyMethod","messageSystem","previousMarionette","Deferred","isNodeAttached","documentElement","getOption","optionName","proxyGetOption","_getValue","normalizeMethods","normalizedHash","normalizeUIString","uiString","ui","r","normalizeUIKeys","memo","normalizedKey","normalizeUIValues","actAsCollection","listProperty","list","deprecate","next","_cache","_warn","console","warn","log","_triggerMethod","getEventName","splitter","noEventArg","triggerMethod","triggerMethodOn","fnc","MonitorDOMRefresh","handleShow","_isShown","triggerDOMRefresh","handleRender","_isRendered","show","bindFromStrings","entity","evt","bindToFunction","unbindFromStrings","unbindToFunction","iterateEvents","bindings","functionCallback","stringCallback","bindEntityEvents","unbindEntityEvents","proxyBindEntityEvents","proxyUnbindEntityEvents","errorProps","urlRoot","captureStackTrace","Callbacks","_deferred","_callbacks","contextOverride","promise","cb","then","resolve","callbacks","Controller","Region","getEl","_ensureViewIsIntact","showOptions","isDifferentView","currentView","preventDestroy","forceShow","isChangingView","_shouldDestroyView","_shouldShowView","_parent","empty","attachedRegion","displayedViews","triggerBeforeAttach","triggerAttach","_displayedViews","_triggerAttach","attachHtml","isDestroyed","parentEl","contents","detach","appendChild","_destroyView","attachView","hasView","buildRegion","regionConfig","DefaultRegionClass","_buildRegionFromSelector","regionClass","_buildRegionFromObject","_buildRegionFromRegionClass","RegionClass","RegionManager","_regions","addRegions","regionDefinitions","regions","definition","addRegion","region","_store","getRegions","removeRegion","_remove","removeRegions","emptyRegions","_setLength","TemplateCache","templateId","templateCaches","cachedTemplate","load","compiledTemplate","loadTemplate","compileTemplate","html","rawTemplate","Renderer","templateFunc","_behaviors","Behaviors","onShowCalled","getTemplate","serializeModel","mixinTemplateHelpers","templateHelpers","uiBindings","configureTriggers","triggers","_buildViewTrigger","_delegateDOMEvents","behavior","eventsArg","combinedEvents","behaviorEvents","behaviorTriggers","unbindUIElements","bindUIElements","_bindUIElements","_uiBindings","_unbindUIElements","triggerDef","hasOptions","preventDefault","stopPropagation","ret","behaviors","_getImmediateChildren","_getNestedViews","children","ItemView","serializeData","items","serializeCollection","_renderTemplate","attachElContent","CollectionView","childViewEventPrefix","initOptions","_initialEvents","_initChildViewStorage","initRenderBuffer","elBuffer","_bufferedChildren","startBuffering","isBuffering","endBuffering","_triggerBeforeShowBufferedChildren","attachBuffer","_triggerShowBufferedChildren","_triggerMethodOnChild","childView","_onCollectionAdd","_onCollectionRemove","_sortViews","destroyEmptyView","ChildView","getChildView","addChild","removeChildView","checkEmpty","_renderChildren","resortView","orderChanged","item","_index","_emptyViewIndex","destroyChildren","showEmptyView","showCollection","EmptyView","getEmptyView","_showingEmptyView","addEmptyView","emptyViewOptions","buildChildView","proxyChildEvents","renderChildView","childViewOptions","_updateIndices","_addChildView","increment","laterView","ChildViewClass","collectionView","append","_insertBefore","_insertAfter","findPosition","childViews","rootEvent","childEvents","CompositeView","isRendered","resetChildViewContainer","compositeView","$container","getChildViewContainer","containerView","$childViewContainer","container","childViewContainer","substr","LayoutView","_firstRender","_initializeRegions","_reInitializeRegions","regionManager","_buildRegions","getRegion","_initRegionManager","regionOptions","getRegionManager","Behavior","proxyViewProperties","parseBehaviors","BehaviorTriggersBuilder","_view","_viewUI","_triggers","triggerBuilder","buildBehaviorTriggers","_behaviorsEvents","viewUI","b","behaviorUI","behaviour","join","eventKey","behaviorsLookup","getBehaviorClass","behaviorClass","BehaviorClass","nestedBehaviors","_buildTriggerHandlersForBehavior","triggersHash","_setHandlerForBehavior","triggerKey","triggerName","AppRouter","appRoutes","controller","_getController","processAppRoutes","_processOnRoute","appRoute","_addAppRoute","routeName","routeArgs","onRoute","routePath","routeNames","Application","_initCallbacks","submodules","_initChannel","addInitializer","_regionManager","moduleNames","moduleDefinition","ModuleClass","Module","getClass","optionRegions","moduleName","app","_setupInitializersAndFinalizers","startWithParent","_initializerCallbacks","addFinalizer","_finalizerCallbacks","_isInitialized","mod","addDefinition","customArgs","_runModuleDefinition","moduleDefinitions","parentModule","_getModule","_addModuleDefinition","def","moduleClass","_getDefine","_getStartWithParent","_addStartWithParent","swp","startWithParentIsConfigured","App","mainRegion","Modernizr","setCss","str","mStyle","cssText","setCssAll","str1","str2","prefixes","is","testProps","prefixed","prop","testDOMProps","elem","testPropsAll","ucProp","cssomPrefixes","webforms","len","inputElem","createElement","HTMLDataListElement","bool","inputElemType","defaultView","setAttribute","smile","style","WebkitAppearance","docElement","getComputedStyle","offsetHeight","removeChild","checkValidity","inputs","featureName","hasOwnProp","version","enableClasses","modElem","omPrefixes","domPrefixes","ns","svg","tests","classes","injectElementWithStyles","rule","nodes","testnames","node","docOverflow","div","body","fakeBody","innerHTML","background","overflow","parentNode","testMediaQuery","mq","matchMedia","msMatchMedia","currentStyle","isEventSupported","TAGNAMES","isSupported","removeAttribute","change","submit","abort","_hasOwnProperty","that","bound","F","getContext","fillText","WebGLRenderingContext","DocumentTouch","offsetTop","postMessage","openDatabase","backgroundColor","textShadow","opacity","str3","backgroundImage","offsetLeft","getElementById","sheet","styleSheet","cssRules","canPlayType","Boolean","ogg","h264","webm","mp3","wav","m4a","localStorage","setItem","removeItem","sessionStorage","Worker","applicationCache","createElementNS","createSVGRect","firstChild","namespaceURI","feature","addTest","addStyleSheet","ownerDocument","p","getElementsByTagName","insertBefore","lastChild","getElements","elements","html5","getExpandoData","expandoData","expando","expanID","nodeName","supportsUnknownElements","cloneNode","saveClones","createElem","canHaveChildren","reSkip","tagUrn","frag","elems","shivMethods","createFrag","shivDocument","shivCSS","supportsHtml5Styles","hasCSS","a","childNodes","_version","_prefixes","_domPrefixes","_cssomPrefixes","hasEvent","testProp","testAllProps","testStyles","Handlebars","__module3__","escapeChar","escapeExpression","toHTML","possible","badChars","blockParams","ids","path","appendContextPath","contextPath","__exports__","__module4__","Exception","line","column","tmp","idx","lineNumber","__module2__","__dependency1__","__dependency2__","HandlebarsEnvironment","helpers","registerDefaultHelpers","instance","registerHelper","inverse","createFrame","Utils","execIteration","priorKey","conditional","includeZero","level","field","COMPILER_REVISION","REVISION_CHANGES",1,2,3,4,5,6,"objectType","logger","unregisterHelper","registerPartial","unregisterPartial","DEBUG","INFO","WARN","ERROR","__module5__","SafeString","__module6__","__dependency3__","checkRevision","compilerInfo","compilerRevision","currentRevision","runtimeVersions","compilerVersions","templateSpec","env","main","VM","compiler","invokePartialWrapper","resolvePartial","invokePartial","compile","compilerOptions","indent","lines","strict","lookup","depths","lambda","programs","program","declaredBlockParams","programWrapper","depth","common","_setup","useData","initData","useBlockParams","useDepths","isTop","usePartial","_child","prog","__module1__","__dependency4__","__dependency5__","runtime","hb","spec","$Handlebars","__module7__","AST","Program","statements","strip","locInfo","MustacheStatement","escaped","BlockStatement","openStrip","inverseStrip","closeStrip","PartialStatement","ContentStatement","original","CommentStatement","comment","SubExpression","PathExpression","parts","StringLiteral","NumberLiteral","number","BooleanLiteral","Hash","HashPair","helperExpression","scopedId","simpleId","__module9__","handlebars","Parser","yy","parser","trace","symbols_","EOF","program_repetition0","statement","mustache","block","rawBlock","content","COMMENT","CONTENT","openRawBlock","END_RAW_BLOCK","OPEN_RAW_BLOCK","helperName","openRawBlock_repetition0","openRawBlock_option0","CLOSE_RAW_BLOCK","openBlock","block_option0","closeBlock","openInverse","block_option1","OPEN_BLOCK","openBlock_repetition0","openBlock_option0","openBlock_option1","CLOSE","OPEN_INVERSE","openInverse_repetition0","openInverse_option0","openInverse_option1","openInverseChain","OPEN_INVERSE_CHAIN","openInverseChain_repetition0","openInverseChain_option0","openInverseChain_option1","inverseAndProgram","INVERSE","inverseChain","inverseChain_option0","OPEN_ENDBLOCK","OPEN","mustache_repetition0","mustache_option0","OPEN_UNESCAPED","mustache_repetition1","mustache_option1","CLOSE_UNESCAPED","OPEN_PARTIAL","partialName","partial_repetition0","partial_option0","sexpr","OPEN_SEXPR","sexpr_repetition0","sexpr_option0","CLOSE_SEXPR","hash_repetition_plus0","hashSegment","ID","EQUALS","OPEN_BLOCK_PARAMS","blockParams_repetition_plus0","CLOSE_BLOCK_PARAMS","dataName","STRING","NUMBER","BOOLEAN","DATA","pathSegments","SEP","$accept","$end","terminals_",13,14,16,17,21,27,31,32,37,42,45,46,49,52,53,59,62,66,67,69,71,74,75,76,77,79,"productions_","performAction","yytext","yyleng","yylineno","yystate","$$","$0","_$","stripComment","stripFlags","prepareRawBlock","prepareBlock","chained","prepareMustache","preparePath","part","table",7,8,9,10,11,12,15,22,25,18,72,73,78,54,58,47,50,23,36,41,43,26,55,28,33,19,48,57,63,64,65,51,24,56,60,29,34,20,44,38,61,30,68,35,39,70,40,"defaultActions",80,90,97,98,103,105,108,109,121,122,"parseError","lex","token","lexer","stack","vstack","lstack","recovering","setInput","yylloc","yyloc","ranges","symbol","preErrorSymbol","state","newState","expected","yyval","errStr","showPosition","text","first_line","last_line","first_column","last_column","_input","_more","_less","matched","conditionStack","ch","unput","oldLines","more","less","pastInput","past","upcomingInput","pre","c","tempMatch","rules","_currentRules","flex","begin","condition","popState","conditions","topState","yy_","$avoiding_name_collisions","YY_START","mu","inclusive","emu","com","raw","INITIAL","__module11__","Visitor","parents","mutating","acceptKey","accept","acceptRequired","acceptArray","PartialExpression","pair","__module10__","WhitespaceControl","isPrevWhitespace","isRoot","sibling","isNextWhitespace","omitRight","multiple","rightStripped","omitLeft","leftStripped","isRootSeen","_isPrevWhitespace","_isNextWhitespace","openStandalone","closeStandalone","inlineStandalone","firstInverse","lastInverse","__module12__","SourceLocation","dig","depthString","escapeFlag","errorNode","inverted","__module8__","srcName","Helpers","__module13__","Compiler","precompile","compat","ast","environment","JavaScriptCompiler","compileInput","compiled","argEquals","transformLiteralToPath","literal","equals","opcodes","opcode","otherOpcode","guid","sourceNode","stringParams","trackIds","knownHelpers","helperMissing","blockHelperMissing","if","unless","with","compileProgram","isSimple","classifySexpr","helperSexpr","simpleSexpr","ambiguousSexpr","isDynamic","setupFullMustacheParams","preventIndent","noEscape","isBlock","knownHelpersOnly","falsy","addDepth","scoped","blockParamId","blockParamIndex","pushParam","isBlockParam","isHelper","isEligible","pushParams","blockParamChild","omitEmpty","__module15__","castChunk","codeGen","CodeGen","srcFile","SourceMap","SourceNode","err","chunks","src","prepend","toStringWithSourceMap","code","iter","currentLocation","functionCall","generateList","quotedString","objectLiteral","entries","generateArray","__module14__","Literal","strictLookup","requireTerminal","popStack","nameLookup","aliasable","isValidJavaScriptVariableName","depthedLookup","revision","versions","appendToBuffer","explicit","initializeBuffer","asObject","isChild","environments","preamble","stackSlot","stackVars","aliases","registers","hashes","compileStack","inlineStack","compileChildren","firstLoc","pushSource","createFunctionContext","file","destName","lastContext","varDeclarations","locals","aliasCount","alias","referenceCount","mergeSource","appendFirst","sourceSeen","bufferStart","bufferEnd","appendOnly","forceBuffer","blockValue","contextName","setupHelperArgs","blockName","ambiguousBlockValue","flushInline","topStack","lastHelper","appendContent","pendingContent","pendingLocation","isInline","replaceStack","local","appendEscaped","pushContext","pushStackLiteral","lookupOnContext","resolvePath","lookupBlockParam","lookupData","assumeObjects","resolvePossibleLambda","pushStringParam","pushString","emptyHash","pushHash","types","contexts","popHash","pushLiteral","pushProgram","programExpression","invokeHelper","paramSize","nonHelper","helper","setupHelper","simple","callParams","invokeKnownHelper","invokeAmbiguous","helperCall","useRegister","paramsInit","setupParams","assignToHash","pushId","matchExistingProgram","programParams","expr","createdStack","usedLiteral","top","incrStack","topStackName","entry","wrapped","inline","blockHelper","foundHelper","hashIds","hashTypes","hashContexts","reservedWords","compilerWords","RESERVED_WORDS","__module0__","_create","fs","Cc","Ci","xpcIsWindows","progIds","xmlRegExp","bodyRegExp","hasLocation","defaultProtocol","protocol","defaultHostName","hostname","defaultPort","port","buildMap","masterConfig","jsEscape","createXhr","progId","parseName","modName","ext","isRelative","xdRegExp","useXhr","uProtocol","uHostName","uPort","finishLoad","onLoad","isBuild","req","inlineText","parsed","nonStripName","toUrl","write","pluginName","asModule","writeFile","extPart","fileName","textWrite","process","nodeRequire","errback","readFileSync","headers","header","onXhr","onreadystatechange","status","readyState","responseText","onXhrComplete","send","Packages","java","stringBuffer","encoding","io","File","lineSeparator","lang","System","getProperty","BufferedReader","InputStreamReader","FileInputStream","StringBuffer","readLine","Components","interfaces","utils","inStream","convertStream","fileObj","readData","FileUtils","createInstance","nsIFileInputStream","init","nsIConverterInputStream","available","DEFAULT_REPLACEMENT_CHARACTER","readString","hbs","tmplAppMain","tmplGame","tmplBoxSection","tmplDiceSection","tmplPlayerSection","tmplBoxItem","tmplPlayer","tmplDie","TemplateManagerModule","TemplateManager","MyApp","templates","appMain","game","boxSection","boxItem","diceSection","die","playerSection","player","tpl","PlayerModel","score","active","Players","onPlayerDone","onForceEnd","activePlayerModel","getActivePlayer","brokeBox","winners","nextPlayer","getNextPlayer","previousPlayer","leadersByScore","getLeadersByScore","leaders","lowestScore","BoxItemView","templateManager","modelEvents","onChange","updatePlayerView","onRender","toggleClass","PlayerView","PlayerListView","PlayerSectionView","scoreboardRegion","playerListData","playersCollection","playerListView","onBeforeShow","onBeforeDestroy","BoxItemModel","selected","mode","statics","getValues","addAll","arr","sum","getNumberData","numbers","total","filterNumbersThatSum","results","me","listRecurse","numList","numLen","num","partialCopy","BoxItems","scoreToMatch","diceRolled","onDiceRolled","onNumberModeChanged","onTurnEnd","updateNumberState","selectedNumbers","getSelectedNumbers","validNumbers","filterChoosableNumbers","remainingNumbers","getRemainingNumbers","pendingNumbers","getPendingNumbers","pendingTotal","matchDiff","remainingTotal","isMatched","commitSelections","getUnselectedNumbers","toMatch","BoxItem","click","onToggleNumber","toggleMode","modeVal","BoxItemListView","BoxSectionView","boxListRegion","click [data-view-action=\"endTurn\"]","blockTurn","boxItemsData","boxItemsCollection","boxItemListView","turnCount","unblockTurn","onEndTurn","endTurn","canChangeTurn","getTurnBtn","$turnBtnEl","addClass","removeClass","DieModel","rolled","roll","DiceList","limit","dataLength","getTotal","modelValues","hasRolled","DieView","DiceListView","diceVals","DiceItems","DiceSectionView","diceListRegion","click [data-view-action=\"throwSingle\"]","click [data-view-action=\"throwBoth\"]","diceItemData","diceItemsCollection","diceListView","displaySum","blockView","unblockView","bigNumbers","blockSingle","unblockSingle","onRollSingle","onRollBoth","GameView","boxRegion","diceRegion","playerRegion","click [data-game-view-action=\"gameEnd\"]","players","onGameOver","onGameChange","createGameControls","destroyGameControls","messageList","alert","resetGameControls","AppView","gameRegion","click [data-app-view-action=\"newGame\"]","winnersNamed","endGame","onNewGame","gameSection","confirm","startGame","MainModule","Main","appView","baseUrl","paths","backbone","jquery","marionette","modernizr","underscore","shim","deps","Mzr"],"mappings":"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","sourcesContent":["/**\n * @license\n * lodash 3.3.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash moduleId=\"underscore\"`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.3.0';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      REARG_FLAG = 128,\n      ARY_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 0,\n      LAZY_MAP_FLAG = 1,\n      LAZY_WHILE_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /**\n   * Used to match ES template delimiters.\n   * See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-template-literal-lexical-components)\n   * for more details.\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect named functions. */\n  var reFuncName = /^\\s*function[ \\n\\r\\t]+\\w/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /**\n   * Used to match `RegExp` special characters.\n   * See this [article on `RegExp` characters](http://www.regular-expressions.info/characters.html#special)\n   * for more details.\n   */\n  var reRegExpChars = /[.*+?^${}()|[\\]\\/\\\\]/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to detect functions containing a `this` reference. */\n  var reThis = /\\bthis\\b/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '{2,}(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to detect and test for whitespace. */\n  var whitespace = (\n    // Basic whitespace characters.\n    ' \\t\\x0b\\f\\xa0\\ufeff' +\n\n    // Line terminators.\n    '\\n\\r\\u2028\\u2029' +\n\n    // Unicode category \"Zs\" space separators.\n    '\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000'\n  );\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'document',\n    'isFinite', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    'window', 'WinRTError'\n  ];\n\n  /** Used to fix the JScript `[[DontEnum]]` bug. */\n  var shadowProps = [\n    'constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable',\n    'toLocaleString', 'toString', 'valueOf'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used as an internal `_.debounce` options object by `_.throttle`. */\n  var debounceOptions = {\n    'leading': false,\n    'maxWait': 0,\n    'trailing': false\n  };\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it is the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = (objectTypes[typeof window] && window !== (this && this.window)) ? window : this;\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;\n  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare to `other`.\n   * @param {*} other The value to compare to `value`.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsReflexive = value === value,\n          othIsReflexive = other === other;\n\n      if (value > other || !valIsReflexive || (typeof value == 'undefined' && othIsReflexive)) {\n        return 1;\n      }\n      if (value < other || !othIsReflexive || (typeof other == 'undefined' && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = (fromIndex || 0) - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` and `_.sortByAll` which uses `comparer`\n   * to define the sort order of `array` and replaces criteria objects with their\n   * corresponding values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * Converts `value` to a string if it is not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    if (typeof value == 'string') {\n      return value;\n    }\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.max` and `_.min` as the default callback for string values.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the code unit of the first character of the string.\n   */\n  function charAtCallback(string) {\n    return string.charCodeAt(0);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare to `other`.\n   * @param {Object} other The object to compare to `object`.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByAll` to compare multiple properties of each element\n   * in a collection and stable sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare to `other`.\n   * @param {Object} other The object to compare to `object`.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultipleAscending(object, other) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        return result;\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled\n   * string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   * If `fromRight` is provided elements of `array` are iterated from right to left.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} [fromIndex] The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromRight ? (fromIndex || length) : ((fromIndex || 0) - 1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is a host object in IE < 9.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n   */\n  var isHostObject = (function() {\n    try {\n      Object({ 'toString': 0 } + '');\n    } catch(e) {\n      return function() { return false; };\n    }\n    return function(value) {\n      // IE < 9 presents many host objects as `Object` objects that can coerce\n      // to strings despite having improperly defined `toString` methods.\n      return typeof value.toString != 'function' && typeof (value + '') == 'string';\n    };\n  }());\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return (value && typeof value == 'object') || false;\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'add': function(a, b) { return a + b; } });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'sub': function(a, b) { return a - b; } });\n   *\n   * _.isFunction(_.add);\n   * // => true\n   * _.isFunction(_.sub);\n   * // => false\n   *\n   * lodash.isFunction(lodash.add);\n   * // => false\n   * lodash.isFunction(lodash.sub);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        errorProto = Error.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n\n    /** Used to detect DOM support. */\n    var document = (document = context.window) && document.document;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to the length of n-tuples for `_.unzip`. */\n    var getLength = baseProperty('length');\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the `toStringTag` of values.\n     * See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n     * for more details.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = context._;\n\n    /** Used to detect if a method is native. */\n    var reNative = RegExp('^' +\n      escapeRegExp(objToString)\n      .replace(/toString|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = isNative(ArrayBuffer = context.ArrayBuffer) && ArrayBuffer,\n        bufferSlice = isNative(bufferSlice = ArrayBuffer && new ArrayBuffer(0).slice) && bufferSlice,\n        ceil = Math.ceil,\n        clearTimeout = context.clearTimeout,\n        floor = Math.floor,\n        getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,\n        push = arrayProto.push,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        Set = isNative(Set = context.Set) && Set,\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = isNative(Uint8Array = context.Uint8Array) && Uint8Array,\n        WeakMap = isNative(WeakMap = context.WeakMap) && WeakMap;\n\n    /** Used to clone array buffers. */\n    var Float64Array = (function() {\n      // Safari 5 errors when using an array buffer to initialize a typed array\n      // where the array buffer's `byteLength` is not a multiple of the typed\n      // array's `BYTES_PER_ELEMENT`.\n      try {\n        var func = isNative(func = context.Float64Array) && func,\n            result = new func(new ArrayBuffer(10), 0, 1) && func;\n      } catch(e) {}\n      return result;\n    }());\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,\n        nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,\n        nativeIsFinite = context.isFinite,\n        nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys,\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = isNative(nativeNow = Date.now) && nativeNow,\n        nativeNumIsFinite = isNative(nativeNumIsFinite = Number.isFinite) && nativeNumIsFinite,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = Math.pow(2, 32) - 1,\n        MAX_ARRAY_INDEX =  MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /** Used as the size, in bytes, of each `Float64Array` element. */\n    var FLOAT64_BYTES_PER_ELEMENT = Float64Array ? Float64Array.BYTES_PER_ELEMENT : 0;\n\n    /**\n     * Used as the maximum length of an array-like value.\n     * See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n     * for more details.\n     */\n    var MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup a type array constructors by `toStringTag`. */\n    var ctorByTag = {};\n    ctorByTag[float32Tag] = context.Float32Array;\n    ctorByTag[float64Tag] = context.Float64Array;\n    ctorByTag[int8Tag] = context.Int8Array;\n    ctorByTag[int16Tag] = context.Int16Array;\n    ctorByTag[int32Tag] = context.Int32Array;\n    ctorByTag[uint8Tag] = context.Uint8Array;\n    ctorByTag[uint8ClampedTag] = context.Uint8ClampedArray;\n    ctorByTag[uint16Tag] = context.Uint16Array;\n    ctorByTag[uint32Tag] = context.Uint32Array;\n\n    /** Used to avoid iterating over non-enumerable properties in IE < 9. */\n    var nonEnumProps = {};\n    nonEnumProps[arrayTag] = nonEnumProps[dateTag] = nonEnumProps[numberTag] = { 'constructor': true, 'toLocaleString': true, 'toString': true, 'valueOf': true };\n    nonEnumProps[boolTag] = nonEnumProps[stringTag] = { 'constructor': true, 'toString': true, 'valueOf': true };\n    nonEnumProps[errorTag] = nonEnumProps[funcTag] = nonEnumProps[regexpTag] = { 'constructor': true, 'toString': true };\n    nonEnumProps[objectTag] = { 'constructor': true };\n\n    arrayEach(shadowProps, function(key) {\n      for (var tag in nonEnumProps) {\n        if (hasOwnProperty.call(nonEnumProps, tag)) {\n          var props = nonEnumProps[tag];\n          props[key] = hasOwnProperty.call(props, key);\n        }\n      }\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that return a boolean or single value will\n     * automatically end the chain returning the unwrapped value. Explicit chaining\n     * may be enabled using `_.chain`. The execution of chained methods is lazy,\n     * that is, execution is deferred until `_#value` is implicitly or explicitly\n     * called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization that merges iteratees to avoid creating intermediate\n     * arrays and reduce the number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers also have the following `Array` methods:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,\n     * and `unshift`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defer`, `delay`,\n     * `difference`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `fill`,\n     * `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`, `forEach`,\n     * `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `functions`,\n     * `groupBy`, `indexBy`, `initial`, `intersection`, `invert`, `invoke`, `keys`,\n     * `keysIn`, `map`, `mapValues`, `matches`, `matchesProperty`, `memoize`, `merge`,\n     * `mixin`, `negate`, `noop`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `reverse`,\n     * `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`, `splice`, `spread`,\n     * `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `tap`, `throttle`,\n     * `thru`, `times`, `toArray`, `toPlainObject`, `transform`, `union`, `uniq`,\n     * `unshift`, `unzip`, `values`, `valuesIn`, `where`, `without`, `wrap`, `xor`,\n     * `zip`, and `zipObject`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `attempt`, `camelCase`, `capitalize`, `clone`, `cloneDeep`, `deburr`,\n     * `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`,\n     * `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`, `has`,\n     * `identity`, `includes`, `indexOf`, `isArguments`, `isArray`, `isBoolean`,\n     * `isDate`, `isElement`, `isEmpty`, `isEqual`, `isError`, `isFinite`,\n     * `isFunction`, `isMatch`, `isNative`, `isNaN`, `isNull`, `isNumber`,\n     * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`,\n     * `isTypedArray`, `join`, `kebabCase`, `last`, `lastIndexOf`, `max`, `min`,\n     * `noConflict`, `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`,\n     * `random`, `reduce`, `reduceRight`, `repeat`, `result`, `runInContext`,\n     * `shift`, `size`, `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`,\n     * `startCase`, `startsWith`, `template`, `trim`, `trimLeft`, `trimRight`,\n     * `trunc`, `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(sum, n) {\n     *   return sum + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    (function(x) {\n      var Ctor = function() { this.x = 1; },\n          object = { '0': 1, 'length': 1 },\n          props = [];\n\n      Ctor.prototype = { 'valueOf': 1, 'y': 1 };\n      for (var key in new Ctor) { props.push(key); }\n\n      /**\n       * Detect if the `toStringTag` of `arguments` objects is resolvable\n       * (all but Firefox < 4, IE < 9).\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      support.argsTag = objToString.call(arguments) == argsTag;\n\n      /**\n       * Detect if `name` or `message` properties of `Error.prototype` are\n       * enumerable by default (IE < 9, Safari < 5.1).\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      support.enumErrorProps = propertyIsEnumerable.call(errorProto, 'message') ||\n        propertyIsEnumerable.call(errorProto, 'name');\n\n      /**\n       * Detect if `prototype` properties are enumerable by default.\n       *\n       * Firefox < 3.6, Opera > 9.50 - Opera < 11.60, and Safari < 5.1\n       * (if the prototype or a property on the prototype has been set)\n       * incorrectly set the `[[Enumerable]]` value of a function's `prototype`\n       * property to `true`.\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      support.enumPrototypes = propertyIsEnumerable.call(Ctor, 'prototype');\n\n      /**\n       * Detect if functions can be decompiled by `Function#toString`\n       * (all but Firefox OS certified apps, older Opera mobile browsers, and\n       * the PlayStation 3; forced `false` for Windows 8 apps).\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      support.funcDecomp = !isNative(context.WinRTError) && reThis.test(runInContext);\n\n      /**\n       * Detect if `Function#name` is supported (all but IE).\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      support.funcNames = typeof Function.name == 'string';\n\n      /**\n       * Detect if the `toStringTag` of DOM nodes is resolvable (all but IE < 9).\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      support.nodeTag = objToString.call(document) != objectTag;\n\n      /**\n       * Detect if string indexes are non-enumerable\n       * (IE < 9, RingoJS, Rhino, Narwhal).\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      support.nonEnumStrings = !propertyIsEnumerable.call('x', 0);\n\n      /**\n       * Detect if properties shadowing those on `Object.prototype` are\n       * non-enumerable.\n       *\n       * In IE < 9 an object's own properties, shadowing non-enumerable ones,\n       * are made non-enumerable as well (a.k.a the JScript `[[DontEnum]]` bug).\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      support.nonEnumShadows = !/valueOf/.test(props);\n\n      /**\n       * Detect if own properties are iterated after inherited properties (IE < 9).\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      support.ownLast = props[0] != 'x';\n\n      /**\n       * Detect if `Array#shift` and `Array#splice` augment array-like objects\n       * correctly.\n       *\n       * Firefox < 10, compatibility modes of IE 8, and IE < 9 have buggy Array `shift()`\n       * and `splice()` functions that fail to remove the last element, `value[0]`,\n       * of array-like objects even though the `length` property is set to `0`.\n       * The `shift()` method is buggy in compatibility modes of IE 8, while `splice()`\n       * is buggy regardless of mode in IE < 9.\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      support.spliceObjects = (splice.call(object, 0, 1), !object[0]);\n\n      /**\n       * Detect lack of support for accessing string characters by index.\n       *\n       * IE < 8 can't access characters by index. IE 8 can only access characters\n       * by index on string literals, not string objects.\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      support.unindexedChars = ('x'[0] + Object('x')[0]) != 'xx';\n\n      /**\n       * Detect if the DOM is supported.\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      try {\n        support.dom = document.createDocumentFragment().nodeType === 11;\n      } catch(e) {\n        support.dom = false;\n      }\n\n      /**\n       * Detect if `arguments` object indexes are non-enumerable.\n       *\n       * In Firefox < 4, IE < 9, PhantomJS, and Safari < 5.1 `arguments` object\n       * indexes are non-enumerable. Chrome < 25 and Node.js < 0.11.0 treat\n       * `arguments` object indexes as non-enumerable and fail `hasOwnProperty`\n       * checks for indexes that exceed their function's formal parameters with\n       * associated values of `0`.\n       *\n       * @memberOf _.support\n       * @type boolean\n       */\n      try {\n        support.nonEnumArgs = !propertyIsEnumerable.call(arguments, 1);\n      } catch(e) {\n        support.nonEnumArgs = true;\n      }\n    }(0, 0));\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = null;\n      this.__dir__ = 1;\n      this.__dropCount__ = 0;\n      this.__filtered__ = false;\n      this.__iteratees__ = null;\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = null;\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var actions = this.__actions__,\n          iteratees = this.__iteratees__,\n          views = this.__views__,\n          result = new LazyWrapper(this.__wrapped__);\n\n      result.__actions__ = actions ? arrayCopy(actions) : null;\n      result.__dir__ = this.__dir__;\n      result.__dropCount__ = this.__dropCount__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = iteratees ? arrayCopy(iteratees) : null;\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = views ? arrayCopy(views) : null;\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value();\n      if (!isArray(array)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var dir = this.__dir__,\n          isRight = dir < 0,\n          view = getView(0, array.length, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          dropCount = this.__dropCount__,\n          takeCount = nativeMin(length, this.__takeCount__),\n          index = isRight ? end : start - 1,\n          iteratees = this.__iteratees__,\n          iterLength = iteratees ? iteratees.length : 0,\n          resIndex = 0,\n          result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              computed = iteratee(value, index, array),\n              type = data.type;\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        if (dropCount) {\n          dropCount--;\n        } else {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Adds `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.max` for arrays without support for iteratees.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     */\n    function arrayMax(array) {\n      var index = -1,\n          length = array.length,\n          result = NEGATIVE_INFINITY;\n\n      while (++index < length) {\n        var value = array[index];\n        if (value > result) {\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.min` for arrays without support for iteratees.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     */\n    function arrayMin(array) {\n      var index = -1,\n          length = array.length,\n          result = POSITIVE_INFINITY;\n\n      while (++index < length) {\n        var value = array[index];\n        if (value < result) {\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return typeof objectValue == 'undefined' ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This method is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (typeof objectValue == 'undefined' || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize assigning values.\n     * @returns {Object} Returns the destination object.\n     */\n    function baseAssign(object, source, customizer) {\n      var props = keys(source);\n      if (!customizer) {\n        return baseCopy(source, object, props);\n      }\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? result !== value : value === value) ||\n            (typeof value == 'undefined' && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.at` without support for strings and individual\n     * key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} [props] The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          length = collection.length,\n          isArr = isLength(length),\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          key = parseFloat(key);\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Array} props The property names to copy.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, object, props) {\n      if (!props) {\n        props = object;\n        object = {};\n      }\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.bindAll` without support for individual\n     * method name arguments.\n     *\n     * @private\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {string[]} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     */\n    function baseBindAll(object, methodNames) {\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return (typeof thisArg != 'undefined' && isBindable(func))\n          ? bindCallback(func, thisArg, argCount)\n          : func;\n      }\n      if (func == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n      return typeof thisArg == 'undefined'\n        ? baseProperty(func + '')\n        : baseMatchesProperty(func + '', thisArg);\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (typeof result != 'undefined') {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          if (isHostObject(value)) {\n            return object ? value : {};\n          }\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseCopy(value, result, keys(value));\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function Object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          Object.prototype = prototype;\n          var result = new Object;\n          Object.prototype = null;\n        }\n        return result || context.Object();\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The `arguments` object to slice and provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args, fromIndex) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, baseSlice(args, fromIndex)); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = isCommon && values.length >= 200 && createCache(values),\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    function baseEach(collection, iteratee) {\n      var length = collection ? collection.length : 0;\n      if (!isLength(length)) {\n        return baseForOwn(collection, iteratee);\n      }\n      var index = -1,\n          iterable = toObject(collection);\n\n      while (++index < length) {\n        if (iteratee(iterable[index], index, iterable) === false) {\n          break;\n        }\n      }\n      return collection;\n    }\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    function baseEachRight(collection, iteratee) {\n      var length = collection ? collection.length : 0;\n      if (!isLength(length)) {\n        return baseForOwnRight(collection, iteratee);\n      }\n      var iterable = toObject(collection);\n      while (length--) {\n        if (iteratee(iterable[length], length, iterable) === false) {\n          break;\n        }\n      }\n      return collection;\n    }\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (typeof end == 'undefined' || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : end >>> 0;\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays and `arguments` objects.\n     * @param {number} [fromIndex=0] The index to start from.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict, fromIndex) {\n      var index = (fromIndex || 0) - 1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n\n        if (isObjectLike(value) && isLength(value.length) && (isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            value = baseFlatten(value, isDeep, isStrict);\n          }\n          var valIndex = -1,\n              valLength = value.length;\n\n          result.length += valLength;\n          while (++valIndex < valLength) {\n            result[++resIndex] = value[valIndex];\n          }\n        } else if (!isStrict) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iterator functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    function baseFor(object, iteratee, keysFunc) {\n      var index = -1,\n          iterable = toObject(object),\n          props = keysFunc(object),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        if (iteratee(iterable[key], key, iterable) === false) {\n          break;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForRight(object, iteratee, keysFunc) {\n      var iterable = toObject(object),\n          props = keysFunc(object),\n          length = props.length;\n\n      while (length--) {\n        var key = props[length];\n        if (iteratee(iterable[key], key, iterable) === false) {\n          break;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invoke` which requires additional arguments\n     * to be provided as an array of arguments rather than individually.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|string} methodName The name of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {Array} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     */\n    function baseInvoke(collection, methodName, args) {\n      var index = -1,\n          isFunc = typeof methodName == 'function',\n          length = collection ? collection.length : 0,\n          result = isLength(length) ? Array(length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? methodName : (value != null && value[methodName]);\n        result[++index] = func ? func.apply(value, args) : undefined;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isWhere] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isWhere, stackA, stackB) {\n      // Exit early for identical values.\n      if (value === other) {\n        // Treat `+0` vs. `-0` as not equal.\n        return value !== 0 || (1 / value == 1 / other);\n      }\n      var valType = typeof value,\n          othType = typeof other;\n\n      // Exit early for unlike primitive values.\n      if ((valType != 'function' && valType != 'object' && othType != 'function' && othType != 'object') ||\n          value == null || other == null) {\n        // Return `false` unless both values are `NaN`.\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isWhere, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isWhere] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isWhere, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag && !isHostObject(object),\n          othIsObj = othTag == objectTag && !isHostObject(other),\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      var valWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n          othWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n      if (valWrapped || othWrapped) {\n        return equalFunc(valWrapped ? object.value() : object, othWrapped ? other.value() : other, customizer, isWhere, stackA, stackB);\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isWhere, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands or `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The source property names to match.\n     * @param {Array} values The source values to match.\n     * @param {Array} strictCompareFlags Strict comparison flags for source values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, props, values, strictCompareFlags, customizer) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      var index = -1,\n          noCustomizer = !customizer;\n\n      while (++index < length) {\n        if ((noCustomizer && strictCompareFlags[index])\n              ? values[index] !== object[props[index]]\n              : !hasOwnProperty.call(object, props[index])\n            ) {\n          return false;\n        }\n      }\n      index = -1;\n      while (++index < length) {\n        var key = props[index];\n        if (noCustomizer && strictCompareFlags[index]) {\n          var result = hasOwnProperty.call(object, key);\n        } else {\n          var objValue = object[key],\n              srcValue = values[index];\n\n          result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (typeof result == 'undefined') {\n            result = baseIsEqual(srcValue, objValue, customizer, true);\n          }\n        }\n        if (!result) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * or `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var result = [];\n      baseEach(collection, function(value, key, collection) {\n        result.push(iteratee(value, key, collection));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var props = keys(source),\n          length = props.length;\n\n      if (length == 1) {\n        var key = props[0],\n            value = source[key];\n\n        if (isStrictComparable(value)) {\n          return function(object) {\n            return object != null && object[key] === value && hasOwnProperty.call(object, key);\n          };\n        }\n      }\n      var values = Array(length),\n          strictCompareFlags = Array(length);\n\n      while (length--) {\n        value = source[props[length]];\n        values[length] = value;\n        strictCompareFlags[length] = isStrictComparable(value);\n      }\n      return function(object) {\n        return baseIsMatch(object, props, values, strictCompareFlags);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which does not coerce `key`\n     * to a string.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} value The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(key, value) {\n      if (isStrictComparable(value)) {\n        return function(object) {\n          return object != null && object[key] === value;\n        };\n      }\n      return function(object) {\n        return object != null && baseIsEqual(value, object[key], null, true);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merging properties.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns the destination object.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n      var isSrcArr = isLength(source.length) && (isArray(source) || isTypedArray(source));\n      (isSrcArr ? arrayEach : baseForOwn)(source, function(srcValue, key, source) {\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          return baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        var value = object[key],\n            result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n            isCommon = typeof result == 'undefined';\n\n        if (isCommon) {\n          result = srcValue;\n        }\n        if ((isSrcArr || typeof result != 'undefined') &&\n            (isCommon || (result === result ? result !== value : value === value))) {\n          object[key] = result;\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merging properties.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = typeof result == 'undefined';\n\n      if (isCommon) {\n        result = srcValue;\n        if (isLength(srcValue.length) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : (value ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? result !== value : value === value) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` which does not coerce `key` to a string.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     */\n    function basePullAt(array, indexes) {\n      var length = indexes.length,\n          result = baseAt(array, indexes);\n\n      indexes.sort(baseCompareAscending);\n      while (length--) {\n        var index = parseFloat(indexes[length]);\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + floor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands or `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (typeof end == 'undefined' || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end - start) >>> 0;\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * or `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= 200,\n          seen = isLarge && createCache(),\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * returned by `keysFunc`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved unwrapped value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var args = [result],\n            action = actions[index];\n\n        push.apply(args, action.args);\n        result = action.func.apply(action.thisArg, args);\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest, instead\n     *  of the lowest, index at which a value should be inserted into `array`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (retHighest ? (computed <= value) : (computed < value)) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest, instead\n     *  of the lowest, index at which a value should be inserted into `array`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsUndef = typeof value == 'undefined';\n\n      while (low < high) {\n        var mid = floor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || typeof computed != 'undefined');\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (typeof thisArg == 'undefined') {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      return bufferSlice.call(buffer, 0);\n    }\n    if (!bufferSlice) {\n      // PhantomJS has `ArrayBuffer` and `Uint8Array` but not `Float64Array`.\n      bufferClone = !(ArrayBuffer && Uint8Array) ? constant(null) : function(buffer) {\n        var byteLength = buffer.byteLength,\n            floatLength = Float64Array ? floor(byteLength / FLOAT64_BYTES_PER_ELEMENT) : 0,\n            offset = floatLength * FLOAT64_BYTES_PER_ELEMENT,\n            result = new ArrayBuffer(byteLength);\n\n        if (floatLength) {\n          var view = new Float64Array(result, 0, floatLength);\n          view.set(new Float64Array(buffer, 0, floatLength));\n        }\n        if (byteLength != offset) {\n          view = new Uint8Array(result, offset);\n          view.set(new Uint8Array(buffer, offset));\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(argsLength + leftLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var pad = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[pad + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[pad + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a function that aggregates a collection, creating an accumulator\n     * object composed from the results of running each element in the collection\n     * through an iteratee.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that assigns properties of source object(s) to a given\n     * destination object.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return function() {\n        var length = arguments.length,\n            object = arguments[0];\n\n        if (length < 2 || object == null) {\n          return object;\n        }\n        if (length > 3 && isIterateeCall(arguments[1], arguments[2], arguments[3])) {\n          length = 2;\n        }\n        // Juggle arguments.\n        if (length > 3 && typeof arguments[length - 2] == 'function') {\n          var customizer = bindCallback(arguments[--length - 1], arguments[length--], 5);\n        } else if (length > 2 && typeof arguments[length - 1] == 'function') {\n          customizer = arguments[--length];\n        }\n        var index = 0;\n        while (++index < length) {\n          var source = arguments[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        return (this instanceof wrapper ? Ctor : func).apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    var createCache = !(nativeCreate && Set) ? constant(null) : function(values) {\n      return new SetCache(values);\n    };\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, arguments);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that gets the extremum value of a collection.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to get the extremum value from an array.\n     * @param {boolean} [isMin] Specify returning the minimum, instead of the maximum,\n     *  extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(arrayFunc, isMin) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = null;\n        }\n        var func = getCallback(),\n            noIteratee = iteratee == null;\n\n        if (!(func === baseCallback && noIteratee)) {\n          noIteratee = false;\n          iteratee = func(iteratee, thisArg, 3);\n        }\n        if (noIteratee) {\n          var isArr = isArray(collection);\n          if (!isArr && isString(collection)) {\n            iteratee = charAtCallback;\n          } else {\n            return arrayFunc(isArr ? collection : toIterable(collection));\n          }\n        }\n        return extremumBy(collection, iteratee, isMin);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG;\n\n      var Ctor = !isBindKey && createCtorWrapper(func),\n          key = func;\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : null,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : null,\n                newHoldersRight = isCurry ? null : argsHolders,\n                newPartials = isCurry ? args : null,\n                newPartialsRight = isCurry ? null : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var result = createHybridWrapper(func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity);\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this;\n        if (isBindKey) {\n          func = thisBinding[key];\n        }\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        return (this instanceof wrapper ? (Ctor || createCtorWrapper(func)) : func).apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the pad required for `string` based on the given padding length.\n     * The `chars` string may be truncated if the number of padding characters\n     * exceeds the padding length.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPad(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, ceil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(argsLength + leftLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return (this instanceof wrapper ? Ctor : func).apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = null;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = null;\n      }\n      var data = !isBindKey && getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data && data !== true) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isWhere] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isWhere, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length,\n          result = true;\n\n      if (arrLength != othLength && !(isWhere && othLength > arrLength)) {\n        return false;\n      }\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (result && ++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        result = undefined;\n        if (customizer) {\n          result = isWhere\n            ? customizer(othValue, arrValue, index)\n            : customizer(arrValue, othValue, index);\n        }\n        if (typeof result == 'undefined') {\n          // Recursively compare arrays (susceptible to call stack limits).\n          if (isWhere) {\n            var othIndex = othLength;\n            while (othIndex--) {\n              othValue = other[othIndex];\n              result = (arrValue && arrValue === othValue) || equalFunc(arrValue, othValue, customizer, isWhere, stackA, stackB);\n              if (result) {\n                break;\n              }\n            }\n          } else {\n            result = (arrValue && arrValue === othValue) || equalFunc(arrValue, othValue, customizer, isWhere, stackA, stackB);\n          }\n        }\n      }\n      return !!result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} value The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            // But, treat `-0` vs. `+0` as not equal.\n            : (object == 0 ? ((1 / object) == (1 / other)) : object == +other);\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isWhere] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isWhere, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isWhere) {\n        return false;\n      }\n      var hasCtor,\n          index = -1;\n\n      while (++index < objLength) {\n        var key = objProps[index],\n            result = hasOwnProperty.call(other, key);\n\n        if (result) {\n          var objValue = object[key],\n              othValue = other[key];\n\n          result = undefined;\n          if (customizer) {\n            result = isWhere\n              ? customizer(othValue, objValue, key)\n              : customizer(objValue, othValue, key);\n          }\n          if (typeof result == 'undefined') {\n            // Recursively compare objects (susceptible to call stack limits).\n            result = (objValue && objValue === othValue) || equalFunc(objValue, othValue, customizer, isWhere, stackA, stackB);\n          }\n        }\n        if (!result) {\n          return false;\n        }\n        hasCtor || (hasCtor = key == 'constructor');\n      }\n      if (!hasCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor && ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments; (value, index, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [isMin] Specify returning the minimum, instead of the\n     *  maximum, extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function extremumBy(collection, iteratee, isMin) {\n      var exValue = isMin ? POSITIVE_INFINITY : NEGATIVE_INFINITY,\n          computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = iteratee(value, index, collection);\n        if ((isMin ? current < computed : current > computed) || (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} [transforms] The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms ? transforms.length : 0;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          // Safari 5 mobile incorrectly has `Object` as the constructor of typed arrays.\n          if (Ctor instanceof Ctor) {\n            Ctor = ctorByTag[tag];\n          }\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Checks if `func` is eligible for `this` binding.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is eligible, else `false`.\n     */\n    function isBindable(func) {\n      var support = lodash.support,\n          result = !(support.funcNames ? func.name : support.funcDecomp);\n\n      if (!result) {\n        var source = fnToString.call(func);\n        if (!support.funcNames) {\n          result = !reFuncName.test(source);\n        }\n        if (!result) {\n          // Check if `func` references the `this` keyword and store the result.\n          result = reThis.test(source) || isNative(func);\n          baseSetData(func, result);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = +value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number') {\n        var length = object.length,\n            prereq = isLength(length) && isIndex(index, length);\n      } else {\n        prereq = type == 'string' && index in object;\n      }\n      var other = object[index];\n      return prereq && (value === value ? value === other : other !== other);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on ES `ToLength`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength)\n     * for more details.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && (value === 0 ? ((1 / value) > 0) : !isObject(value));\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask;\n\n      var arityFlags = ARY_FLAG | REARG_FLAG,\n          bindFlags = BIND_FLAG | BIND_KEY_FLAG,\n          comboFlags = arityFlags | bindFlags | CURRY_BOUND_FLAG | CURRY_RIGHT_FLAG;\n\n      var isAry = bitmask & ARY_FLAG && !(srcBitmask & ARY_FLAG),\n          isRearg = bitmask & REARG_FLAG && !(srcBitmask & REARG_FLAG),\n          argPos = (isRearg ? data : source)[7],\n          ary = (isAry ? data : source)[8];\n\n      var isCommon = !(bitmask >= REARG_FLAG && srcBitmask > bindFlags) &&\n        !(bitmask > bindFlags && srcBitmask >= REARG_FLAG);\n\n      var isCombo = (newBitmask >= arityFlags && newBitmask <= comboFlags) &&\n        (bitmask < REARG_FLAG || ((isRearg || isAry) && argPos.length <= ary));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * A specialized version of `_.pick` that picks `object` properties specified\n     * by the `props` array.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` that picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `_.isPlainObject` which checks if `value`\n     * is an object created by the `Object` constructor or has a `[[Prototype]]`\n     * of `null`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     */\n    function shimIsPlainObject(value) {\n      var Ctor,\n          support = lodash.support;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isHostObject(value)) ||\n          (!hasOwnProperty.call(value, 'constructor') &&\n            (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor))) ||\n          (!support.argsTag && isArguments(value))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      if (support.ownLast) {\n        baseForIn(value, function(subValue, key, object) {\n          result = hasOwnProperty.call(object, key);\n          return false;\n        });\n        return result !== false;\n      }\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return typeof result == 'undefined' || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length,\n          support = lodash.support;\n\n      var allowIndexes = length && isLength(length) &&\n        (isArray(object) || (support.nonEnumStrings && isString(object)) ||\n          (support.nonEnumArgs && isArguments(object)));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it is not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isLength(value.length)) {\n        return values(value);\n      }\n      if (lodash.support.unindexedChars && isString(value)) {\n        return value.split('');\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it is not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      if (lodash.support.unindexedChars && isString(value)) {\n        var index = -1,\n            length = value.length,\n            result = Object(value);\n\n        while (++index < length) {\n          result[index] = value.charAt(index);\n        }\n        return result;\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper\n        ? wrapper.clone()\n        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(+size || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(ceil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array excluding all values of the provided arrays using\n     * `SameValueZero` for equality comparisons.\n     *\n     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n     * e.g. `===`, except that `NaN` matches `NaN`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n    function difference() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var value = arguments[index];\n        if (isArray(value) || isArguments(value)) {\n          break;\n        }\n      }\n      return baseDifference(value, baseFlatten(arguments, false, true, ++index));\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': pebbles, 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      predicate = getCallback(predicate, thisArg, 3);\n      while (length-- && predicate(array[length], length, array)) {}\n      return baseSlice(array, 0, length + 1);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var index = -1;\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length && predicate(array[index], index, array)) {}\n      return baseSlice(array, index);\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for, instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, thisArg) {\n      var index = -1,\n          length = array ? array.length : 0;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, thisArg) {\n      var length = array ? array.length : 0;\n      predicate = getCallback(predicate, thisArg, 3);\n      while (length--) {\n        if (predicate(array[length], length, array)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]];\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4];\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4];\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using `SameValueZero` for equality comparisons. If `fromIndex` is negative,\n     * it is used as the offset from the end of `array`. If `array` is sorted\n     * providing `true` for `fromIndex` performs a faster binary search.\n     *\n     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n     * e.g. `===`, except that `NaN` matches `NaN`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 2\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value),\n            other = array[index];\n\n        return (value === value ? value === other : other !== other) ? index : -1;\n      }\n      return baseIndexOf(array, value, fromIndex);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values in all provided arrays using `SameValueZero`\n     * for equality comparisons.\n     *\n     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n     * e.g. `===`, except that `NaN` matches `NaN`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n    function intersection() {\n      var args = [],\n          argsIndex = -1,\n          argsLength = arguments.length,\n          caches = [],\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf;\n\n      while (++argsIndex < argsLength) {\n        var value = arguments[argsIndex];\n        if (isArray(value) || isArguments(value)) {\n          args.push(value);\n          caches.push(isCommon && value.length >= 120 && createCache(argsIndex && value));\n        }\n      }\n      argsLength = args.length;\n      var array = args[0],\n          index = -1,\n          length = array ? array.length : 0,\n          result = [],\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value)) < 0) {\n          argsIndex = argsLength;\n          while (--argsIndex) {\n            var cache = caches[argsIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(args[argsIndex], value)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        return (value === value ? value === other : other !== other) ? index : -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using `SameValueZero` for equality\n     * comparisons.\n     *\n     * **Notes:**\n     *  - Unlike `_.without`, this method mutates `array`.\n     *  - `SameValueZero` comparisons are like strict equality comparisons, e.g. `===`,\n     *    except that `NaN` matches `NaN`. See the [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     *    for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var array = arguments[0];\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = arguments.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = arguments[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    function pullAt(array) {\n      return basePullAt(array || [], baseFlatten(arguments, false, false, 1));\n    }\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var index = -1,\n          length = array ? array.length : 0,\n          result = [];\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          splice.call(array, index--, 1);\n          length--;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This function is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    function sortedIndex(array, value, iteratee, thisArg) {\n      var func = getCallback(iteratee);\n      return (func === baseCallback && iteratee == null)\n        ? binaryIndex(array, value)\n        : binaryIndexBy(array, value, func(iteratee, thisArg, 1));\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value, iteratee, thisArg) {\n      var func = getCallback(iteratee);\n      return (func === baseCallback && iteratee == null)\n        ? binaryIndex(array, value, true)\n        : binaryIndexBy(array, value, func(iteratee, thisArg, 1), true);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      predicate = getCallback(predicate, thisArg, 3);\n      while (length-- && predicate(array[length], length, array)) {}\n      return baseSlice(array, length + 1);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeWhile(array, predicate, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var index = -1;\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length && predicate(array[index], index, array)) {}\n      return baseSlice(array, 0, index);\n    }\n\n    /**\n     * Creates an array of unique values, in order, of the provided arrays using\n     * `SameValueZero` for equality comparisons.\n     *\n     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n     * e.g. `===`, except that `NaN` matches `NaN`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n    function union() {\n      return baseUniq(baseFlatten(arguments, false, true));\n    }\n\n    /**\n     * Creates a duplicate-value-free version of an array using `SameValueZero`\n     * for equality comparisons. Providing `true` for `isSorted` performs a faster\n     * search algorithm for sorted arrays. If an iteratee function is provided it\n     * is invoked for each value in the array to generate the criterion by which\n     * uniqueness is computed. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments; (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n     * e.g. `===`, except that `NaN` matches `NaN`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([1, 2, 1]);\n     * // => [1, 2]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? null : isSorted;\n        isSorted = false;\n      }\n      var func = getCallback();\n      if (!(func === baseCallback && iteratee == null)) {\n        iteratee = func(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() == baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-`_.zip`\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      var index = -1,\n          length = (array && array.length && arrayMax(arrayMap(array, getLength))) >>> 0,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array excluding all provided values using `SameValueZero` for\n     * equality comparisons.\n     *\n     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n     * e.g. `===`, except that `NaN` matches `NaN`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    function without(array) {\n      return baseDifference(array, baseSlice(arguments, 1));\n    }\n\n    /**\n     * Creates an array that is the symmetric difference of the provided arrays.\n     * See [Wikipedia](https://en.wikipedia.org/wiki/Symmetric_difference) for\n     * more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArray(array) || isArguments(array)) {\n          var result = result\n            ? baseDifference(result, array).concat(baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    function zip() {\n      var length = arguments.length,\n          array = Array(length);\n\n      while (length--) {\n        array[length] = arguments[length];\n      }\n      return unzip(array);\n    }\n\n    /**\n     * Creates an object composed from arrays of property names and values. Provide\n     * either a single two dimensional array, e.g. `[[key1, value1], [key2, value2]]`\n     * or two arrays, one of property names and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .last()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => [3]\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapper = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapper = wrapper.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapper.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapper = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapper = wrapper.plant(other);\n     *\n     * otherWrapper.value();\n     * // => [9, 16]\n     *\n     * wrapper.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        if (this.__actions__.length) {\n          value = new LazyWrapper(this);\n        }\n        return new LodashWrapper(value.reverse(), this.__chain__);\n      }\n      return this.thru(function(value) {\n        return value.reverse();\n      });\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['fred', 'barney', 'pebbles'], 0, 2);\n     * // => ['fred', 'pebbles']\n     */\n    function at(collection) {\n      var length = collection ? collection.length : 0;\n      if (isLength(length)) {\n        collection = toIterable(collection);\n      }\n      return baseAt(collection, baseFlatten(arguments, false, false, 1));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (typeof predicate != 'function' || typeof thisArg != 'undefined') {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n    function find(collection, predicate, thisArg) {\n      if (isArray(collection)) {\n        var index = findIndex(collection, predicate, thisArg);\n        return index > -1 ? collection[index] : undefined;\n      }\n      predicate = getCallback(predicate, thisArg, 3);\n      return baseFind(collection, predicate, baseEach);\n    }\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    function findLast(collection, predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 3);\n      return baseFind(collection, predicate, baseEachRight);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection). Iterator functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a `length` property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    function forEach(collection, iteratee, thisArg) {\n      return (typeof iteratee == 'function' && typeof thisArg == 'undefined' && isArray(collection))\n        ? arrayEach(collection, iteratee)\n        : baseEach(collection, bindCallback(iteratee, thisArg, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).join(',');\n     * // => logs each value from right to left and returns the array\n     */\n    function forEachRight(collection, iteratee, thisArg) {\n      return (typeof iteratee == 'function' && typeof thisArg == 'undefined' && isArray(collection))\n        ? arrayEachRight(collection, iteratee)\n        : baseEachRight(collection, bindCallback(iteratee, thisArg, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection` using `SameValueZero` for equality\n     * comparisons. If `fromIndex` is negative, it is used as the offset from\n     * the end of `collection`.\n     *\n     * **Note:** `SameValueZero` comparisons are like strict equality comparisons,\n     * e.g. `===`, except that `NaN` matches `NaN`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex) {\n      var length = collection ? collection.length : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (!length) {\n        return false;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      } else {\n        fromIndex = 0;\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex < length && collection.indexOf(target, fromIndex) > -1)\n        : (getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method named by `methodName` on each element in `collection`,\n     * returning an array of the results of each invoked method. Any additional\n     * arguments are provided to each invoked method. If `methodName` is a function\n     * it is invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|string} methodName The name of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    function invoke(collection, methodName) {\n      return baseInvoke(collection, methodName, baseSlice(arguments, 2));\n    }\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as interatees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`, `drop`,\n     * `dropRight`, `fill`, `flatten`, `invert`, `max`, `min`, `parseInt`, `slice`,\n     * `sortBy`, `take`, `takeRight`, `template`, `trim`, `trimLeft`, `trimRight`,\n     * `trunc`, `random`, `range`, `sample`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     *  create a `_.property` or `_.matches` style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments; (value, index, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 };\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 };\n     */\n    var max = createExtremum(arrayMax);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments; (value, index, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 };\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 };\n     */\n    var min = createExtremum(arrayMin, true);\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1, 3], [2]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the value of `key` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {string} key The key of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, key) {\n      return map(collection, baseProperty(key));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg`and invoked with four arguments;\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as interatees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `merge`, and `sortAllBy`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator, thisArg) {\n      var func = isArray(collection) ? arrayReduce : baseReduce;\n      return func(collection, getCallback(iteratee, thisArg, 4), accumulator, arguments.length < 3, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator, thisArg) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce;\n      return func(collection, getCallback(iteratee, thisArg, 4), accumulator, arguments.length < 3, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var result = shuffle(collection);\n      result.length = nativeMin(n < 0 ? 0 : (+n || 0), result.length);\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the Fisher-Yates\n     * shuffle. See [Wikipedia](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      collection = toIterable(collection);\n\n      var index = -1,\n          length = collection.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var rand = baseRandom(0, index);\n        if (index != rand) {\n          result[index] = result[rand];\n        }\n        result[rand] = collection[index];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the size of `collection` by returning `collection.length` for\n     * array-like values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? collection.length : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments; (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (typeof predicate != 'function' || typeof thisArg != 'undefined') {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments;\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity] The function\n     *  invoked per iteration. If a property name or an object is provided it is\n     *  used to create a `_.property` or `_.matches` style callback respectively.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      var index = -1,\n          length = collection ? collection.length : 0,\n          result = isLength(length) ? Array(length) : [];\n\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = null;\n      }\n      iteratee = getCallback(iteratee, thisArg, 3);\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = { 'criteria': iteratee(value, key, collection), 'index': index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it sorts by property names\n     * instead of an iteratee function.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(string|string[])} props The property names to sort by,\n     *  specified as individual property names or arrays of property names.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 26 },\n     *   { 'user': 'fred',   'age': 30 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 26], ['barney', 36], ['fred', 30], ['fred', 40]]\n     */\n    function sortByAll(collection) {\n      var args = arguments;\n      if (args.length > 3 && isIterateeCall(args[1], args[2], args[3])) {\n        args = [collection, args[1]];\n      }\n      var index = -1,\n          length = collection ? collection.length : 0,\n          props = baseFlatten(args, false, false, 1),\n          result = isLength(length) ? Array(length) : [];\n\n      baseEach(collection, function(value) {\n        var length = props.length,\n            criteria = Array(length);\n\n        while (length--) {\n          criteria[length] = value == null ? undefined : value[props[length]];\n        }\n        result[++index] = { 'criteria': criteria, 'index': index, 'value': value };\n      });\n      return baseSortBy(result, compareMultipleAscending);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = null;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, null, null, null, null, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        } else {\n          func = null;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the `length`\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [args] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    function bind(func, thisArg) {\n      var bitmask = BIND_FLAG;\n      if (arguments.length > 2) {\n        var partials = baseSlice(arguments, 2),\n            holders = replaceHolders(partials, bind.placeholder);\n\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    }\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the `length` property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    function bindAll(object) {\n      return baseBindAll(object,\n        arguments.length > 1\n          ? baseFlatten(arguments, false, false, 1)\n          : functions(object)\n      );\n    }\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [args] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    function bindKey(object, key) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (arguments.length > 2) {\n        var partials = baseSlice(arguments, 2),\n            holders = replaceHolders(partials, bindKey.placeholder);\n\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    }\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the `length` property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      if (guard && isIterateeCall(func, arity, guard)) {\n        arity = null;\n      }\n      var result = createWrapper(func, CURRY_FLAG, null, null, null, null, null, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the `length` property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      if (guard && isIterateeCall(func, arity, guard)) {\n        arity = null;\n      }\n      var result = createWrapper(func, CURRY_RIGHT_FLAG, null, null, null, null, null, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a function that delays invoking `func` until after `wait` milliseconds\n     * have elapsed since the last time it was invoked. The created function comes\n     * with a `cancel` method to cancel delayed invocations. Provide an options\n     * object to indicate that `func` should be invoked on the leading and/or\n     * trailing edge of the `wait` timeout. Subsequent calls to the debounced\n     * function return the result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} wait The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : wait;\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          if (maxTimeoutId) {\n            clearTimeout(maxTimeoutId);\n          }\n          var isCalled = trailingCall;\n          maxTimeoutId = timeoutId = trailingCall = undefined;\n          if (isCalled) {\n            lastCalled = now();\n            result = func.apply(thisArg, args);\n            if (!timeoutId && !maxTimeoutId) {\n              args = thisArg = null;\n            }\n          }\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (trailing || (maxWait !== wait)) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = null;\n          }\n        }\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = null;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    function defer(func) {\n      return baseDelay(func, 1, arguments, 1);\n    }\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    function delay(func, wait) {\n      return baseDelay(func, wait, arguments, 2);\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function add(x, y) {\n     *   return x + y;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    function flow() {\n      var funcs = arguments,\n          length = funcs.length;\n\n      if (!length) {\n        return function() { return arguments[0]; };\n      }\n      if (!arrayEvery(funcs, baseIsFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var index = 0,\n            result = funcs[index].apply(this, arguments);\n\n        while (++index < length) {\n          result = funcs[index].call(this, result);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function add(x, y) {\n     *   return x + y;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    function flowRight() {\n      var funcs = arguments,\n          fromIndex = funcs.length - 1;\n\n      if (fromIndex < 0) {\n        return function() { return arguments[0]; };\n      }\n      if (!arrayEvery(funcs, baseIsFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var index = fromIndex,\n            result = funcs[index].apply(this, arguments);\n\n        while (index--) {\n          result = funcs[index].call(this, result);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the ES `Map` method interface\n     * of `get`, `has`, and `set`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-properties-of-the-map-prototype-object)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var cache = memoized.cache,\n            key = resolver ? resolver.apply(this, arguments) : arguments[0];\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, arguments);\n        cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(func, 2);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the `length` property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [args] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    function partial(func) {\n      var partials = baseSlice(arguments, 1),\n          holders = replaceHolders(partials, partial.placeholder);\n\n      return createWrapper(func, PARTIAL_FLAG, null, partials, holders);\n    }\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the `length` property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [args] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    function partialRight(func) {\n      var partials = baseSlice(arguments, 1),\n          holders = replaceHolders(partials, partialRight.placeholder);\n\n      return createWrapper(func, PARTIAL_RIGHT_FLAG, null, partials, holders);\n    }\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    function rearg(func) {\n      var indexes = baseFlatten(arguments, false, false, 1);\n      return createWrapper(func, REARG_FLAG, null, null, null, indexes);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and the array of arguments provided to the created\n     * function much like [Function#apply](http://es5.github.io/#x15.3.4.3).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {*} Returns the new function.\n     * @example\n     *\n     * var spread = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * spread(['Fred', 'hello']);\n     * // => 'Fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function(array) {\n        return func.apply(this, array);\n      };\n    }\n\n    /**\n     * Creates a function that only invokes `func` at most once per every `wait`\n     * milliseconds. The created function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the throttled function return the result of the last\n     * `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} wait The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      debounceOptions.leading = leading;\n      debounceOptions.maxWait = +wait;\n      debounceOptions.trailing = trailing;\n      return debounce(func, wait, debounceOptions);\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, null, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the structured clone algorithm.\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps. See the [HTML5 specification](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      }\n      else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 1);\n      return baseClone(value, isDeep, customizer);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the structured clone algorithm.\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps. See the [HTML5 specification](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 1);\n      return baseClone(value, true, customizer);\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      var length = isObjectLike(value) ? value.length : undefined;\n      return (isLength(length) && objToString.call(value) == argsTag) || false;\n    }\n    // Fallback for environments without a `toStringTag` for `arguments` objects.\n    if (!support.argsTag) {\n      isArguments = function(value) {\n        var length = isObjectLike(value) ? value.length : undefined;\n        return (isLength(length) && hasOwnProperty.call(value, 'callee') &&\n          !propertyIsEnumerable.call(value, 'callee')) || false;\n      };\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return (isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag) || false;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return (value === true || value === false || isObjectLike(value) && objToString.call(value) == boolTag) || false;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return (isObjectLike(value) && objToString.call(value) == dateTag) || false;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return (value && value.nodeType === 1 && isObjectLike(value) &&\n        (lodash.support.nodeTag ? objToString.call(value).indexOf('Element') > -1 : isHostObject(value))) || false;\n    }\n    // Fallback for environments without DOM support.\n    if (!support.dom) {\n      isElement = function(value) {\n        return (value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value)) || false;\n      };\n    }\n\n    /**\n     * Checks if a value is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      var length = value.length;\n      if (isLength(length) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments; (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 3);\n      if (!customizer && isStrictComparable(value) && isStrictComparable(other)) {\n        return value === other;\n      }\n      var result = customizer ? customizer(value, other) : undefined;\n      return typeof result == 'undefined' ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return (isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag) || false;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on ES `Number.isFinite`. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isfinite)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    var isFinite = nativeNumIsFinite || function(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    };\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    var isFunction = !(baseIsFunction(/x/) || (Uint8Array && !baseIsFunction(Uint8Array))) ? baseIsFunction : function(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return objToString.call(value) == funcTag;\n    };\n\n    /**\n     * Checks if `value` is the language type of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * **Note:** See the [ES5 spec](https://es5.github.io/#x8) for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return type == 'function' || (value && type == 'object') || false;\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments; (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      var props = keys(source),\n          length = props.length;\n\n      customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 3);\n      if (!customizer && length == 1) {\n        var key = props[0],\n            value = source[key];\n\n        if (isStrictComparable(value)) {\n          return object != null && value === object[key] && hasOwnProperty.call(object, key);\n        }\n      }\n      var values = Array(length),\n          strictCompareFlags = Array(length);\n\n      while (length--) {\n        value = values[length] = source[props[length]];\n        strictCompareFlags[length] = isStrictComparable(value);\n      }\n      return baseIsMatch(object, props, values, strictCompareFlags, customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as native `isNaN` which returns `true`\n     * for `undefined` and other non-numeric values. See the [ES5 spec](https://es5.github.io/#x15.1.2.4)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (objToString.call(value) == funcTag) {\n        return reNative.test(fnToString.call(value));\n      }\n      return (isObjectLike(value) &&\n        (isHostObject(value) ? reNative : reHostCtor).test(value)) || false;\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag) || false;\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {\n      if (!(value && objToString.call(value) == objectTag) || (!lodash.support.argsTag && isArguments(value))) {\n        return false;\n      }\n      var valueOf = value.valueOf,\n          objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\n\n      return objProto\n        ? (value == objProto || getPrototypeOf(value) == objProto)\n        : shimIsPlainObject(value);\n    };\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return (isObject(value) && objToString.call(value) == regexpTag) || false;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag) || false;\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return (isObjectLike(value) && isLength(value.length) && typedArrayTags[objToString.call(value)]) || false;\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return typeof value == 'undefined';\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? value.length : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return (lodash.support.unindexedChars && isString(value))\n        ? value.split('')\n        : arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments;\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return typeof value == 'undefined' ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(baseAssign);\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = null;\n      }\n      return properties ? baseCopy(properties, result, keys(properties)) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional defaults of the same property are ignored.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    function defaults(object) {\n      if (object == null) {\n        return object;\n      }\n      var args = arrayCopy(arguments);\n      args.push(assignDefaults);\n      return assign.apply(undefined, args);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it returns the key of the\n     * first element `predicate` returns truthy for, instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 3);\n      return baseFind(object, predicate, baseForOwn, true);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 3);\n      return baseFind(object, predicate, baseForOwnRight, true);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments; (value, key, object). Iterator functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    function forIn(object, iteratee, thisArg) {\n      if (typeof iteratee != 'function' || typeof thisArg != 'undefined') {\n        iteratee = bindCallback(iteratee, thisArg, 3);\n      }\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    function forInRight(object, iteratee, thisArg) {\n      iteratee = bindCallback(iteratee, thisArg, 3);\n      return baseForRight(object, iteratee, keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments; (value, key, object). Iterator functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n    function forOwn(object, iteratee, thisArg) {\n      if (typeof iteratee != 'function' || typeof thisArg != 'undefined') {\n        iteratee = bindCallback(iteratee, thisArg, 3);\n      }\n      return baseForOwn(object, iteratee);\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n    function forOwnRight(object, iteratee, thisArg) {\n      iteratee = bindCallback(iteratee, thisArg, 3);\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Checks if `key` exists as a direct property of `object` instead of an\n     * inherited property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 3 };\n     *\n     * _.has(object, 'b');\n     * // => true\n     */\n    function has(object, key) {\n      return object ? hasOwnProperty.call(object, key) : false;\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = null;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      if (object) {\n        var Ctor = object.constructor,\n            length = object.length;\n      }\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n         (typeof object == 'function' ? lodash.support.enumPrototypes : (length && isLength(length)))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length,\n          support = lodash.support;\n\n      length = (length && isLength(length) &&\n        (isArray(object) || (support.nonEnumStrings && isString(object)) ||\n          (support.nonEnumArgs && isArguments(object))) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          proto = (isFunction(Ctor) && Ctor.prototype) || objectProto,\n          isProto = proto === object,\n          result = Array(length),\n          skipIndexes = length > 0,\n          skipErrorProps = support.enumErrorProps && (object === errorProto || object instanceof Error),\n          skipProto = support.enumPrototypes && isFunction(object);\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      // lodash skips the `constructor` property when it infers it is iterating\n      // over a `prototype` object because IE < 9 can't set the `[[Enumerable]]`\n      // attribute of an existing property and the `constructor` property of a\n      // prototype defaults to non-enumerable.\n      for (var key in object) {\n        if (!(skipProto && key == 'prototype') &&\n            !(skipErrorProps && (key == 'message' || key == 'name')) &&\n            !(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      if (support.nonEnumShadows && object !== objectProto) {\n        var tag = object === stringProto ? stringTag : object === errorProto ? errorTag : objToString.call(object),\n            nonEnums = nonEnumProps[tag] || nonEnumProps[objectTag];\n\n        if (tag == objectTag) {\n          proto = objectProto;\n        }\n        length = shadowProps.length;\n        while (length--) {\n          key = shadowProps[length];\n          var nonEnum = nonEnums[key];\n          if (!(isProto && nonEnum) &&\n              (nonEnum ? hasOwnProperty.call(object, key) : object[key] !== proto[key])) {\n            result.push(key);\n          }\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee, thisArg) {\n      var result = {};\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        result[key] = iteratee(value, key, object);\n      });\n      return result;\n    }\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments; (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize merging properties.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     * Property names may be specified as individual arguments or as arrays of\n     * property names. If `predicate` is provided it is invoked for each property\n     * of `object` omitting the properties `predicate` returns truthy for. The\n     * predicate is bound to `thisArg` and invoked with three arguments;\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    function omit(object, predicate, thisArg) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof predicate != 'function') {\n        var props = arrayMap(baseFlatten(arguments, false, false, 1), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      predicate = bindCallback(predicate, thisArg, 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    }\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments; (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    function pick(object, predicate, thisArg) {\n      if (object == null) {\n        return {};\n      }\n      return typeof predicate == 'function'\n        ? pickByCallback(object, bindCallback(predicate, thisArg, 3))\n        : pickByArray(object, baseFlatten(arguments, false, false, 1));\n    }\n\n    /**\n     * Resolves the value of property `key` on `object`. If the value of `key` is\n     * a function it is invoked with the `this` binding of `object` and its result\n     * is returned, else the property value is returned. If the property value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the property value\n     *  resolves to `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': _.constant(40) };\n     *\n     * _.result(object, 'user');\n     * // => 'fred'\n     *\n     * _.result(object, 'age');\n     * // => 40\n     *\n     * _.result(object, 'status', 'busy');\n     * // => 'busy'\n     *\n     * _.result(object, 'status', _.constant('busy'));\n     * // => 'busy'\n     */\n    function result(object, key, defaultValue) {\n      var value = object == null ? undefined : object[key];\n      if (typeof value == 'undefined') {\n        value = defaultValue;\n      }\n      return isFunction(value) ? value.call(object) : value;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments; (accumulator, value, key, object). Iterator functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) && Ctor.prototype);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it defaults to `start` with `start` becoming `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n    function inRange(value, start, end) {\n      start = +start || 0;\n      if (typeof end === 'undefined') {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      return value >= start && value < end;\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = null;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to camel case.\n     * See [Wikipedia](https://en.wikipedia.org/wiki/CamelCase) for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting latin-1 supplementary letters to basic latin letters.\n     * See [Wikipedia](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter);\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = (typeof position == 'undefined' ? length : nativeMin(position < 0 ? 0 : (+position || 0), length)) - target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and '`', in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't require escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#102](https://html5sec.org/#102),\n     * [#108](https://html5sec.org/#108), and [#133](https://html5sec.org/#133) of\n     * the [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n     *\n     * When working with HTML you should always quote attribute values to reduce\n     * XSS vectors. See [Ryan Grove's article](http://wonko.com/post/html-escaping)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"^\", \"$\", \".\", \"|\", \"?\", \"*\",\n     * \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to kebab case.\n     * See [Wikipedia](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles) for\n     * more details.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it is shorter then the given\n     * padding length. The `chars` string may be truncated if the number of padding\n     * characters can't be evenly divided by the padding length.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = floor(mid),\n          rightLength = ceil(mid);\n\n      chars = createPad('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it is shorter then the given padding\n     * length. The `chars` string may be truncated if the number of padding\n     * characters exceeds the padding length.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    function padLeft(string, length, chars) {\n      string = baseToString(string);\n      return string && (createPad(string, length, chars) + string);\n    }\n\n    /**\n     * Pads `string` on the right side if it is shorter then the given padding\n     * length. The `chars` string may be truncated if the number of padding\n     * characters exceeds the padding length.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    function padRight(string, length, chars) {\n      string = baseToString(string);\n      return string && (string + createPad(string, length, chars));\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the ES5 implementation of `parseInt`.\n     * See the [ES5 spec](https://es5.github.io/#E) for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard && isIterateeCall(string, radix, guard)) {\n        radix = 0;\n      }\n      return nativeParseInt(string, radix);\n    }\n    // Fallback for environments with pre-ES5 implementations.\n    if (nativeParseInt(whitespace + '08') != 8) {\n      parseInt = function(string, radix, guard) {\n        // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n        // Chrome fails to trim leading <BOM> whitespace characters.\n        // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n        if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n          radix = 0;\n        } else if (radix) {\n          radix = +radix;\n        }\n        string = trim(string);\n        return nativeParseInt(string, radix || (reHexPrefix.test(string) ? 16 : 10));\n      };\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = floor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to snake case.\n     * See [Wikipedia](https://en.wikipedia.org/wiki/Snake_case) for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to start case.\n     * See [Wikipedia](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null ? 0 : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes sourceURLs for easier debugging.\n     * See the [HTML5 Rocks article on sourcemaps](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for more details.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     *   var __t, __p = '';\n     *   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     *   return __p;\n     * }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = null;\n      }\n      string = baseToString(string);\n      options = baseAssign(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = baseAssign(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar]\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it is longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * //=> 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = null;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? +options.length || 0 : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = null;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    function attempt() {\n      var length = arguments.length,\n          func = arguments[0];\n\n      try {\n        var args = Array(length ? length - 1 : 0);\n        while (--length > 0) {\n          args[length - 1] = arguments[length];\n        }\n        return func.apply(undefined, args);\n      } catch(e) {\n        return isError(e) ? e : new Error(e);\n      }\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = null;\n      }\n      return isObjectLike(func)\n        ? matches(func)\n        : baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function which performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function which compares the property value of `key` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} key The key of the property to get.\n     * @param {*} value The value to compare.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n    function matchesProperty(key, value) {\n      return baseMatchesProperty(key + '', baseClone(value, true));\n    }\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=this] object The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * // use `_.runInContext` to avoid potential conflicts (esp. in Node.js)\n     * var _ = require('lodash').runInContext();\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj && keys(source),\n            methodNames = props && props.length && baseFunctions(source, props);\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__);\n                (result.__actions__ = arrayCopy(this.__actions__)).push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              var args = [this.value()];\n              push.apply(args, arguments);\n              return func.apply(object, args);\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      context._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function which returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function which returns the property value of `key` on a given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * var getName = _.property('user');\n     *\n     * _.map(users, getName);\n     * // => ['fred', barney']\n     *\n     * _.pluck(_.sortBy(users, getName), 'user');\n     * // => ['barney', 'fred']\n     */\n    function property(key) {\n      return baseProperty(key + '');\n    }\n\n    /**\n     * The inverse of `_.property`; this method creates a function which returns\n     * the property value of a given key on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to inspect.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'a': 3, 'b': 1, 'c': 2 };\n     *\n     * _.map(['a', 'c'], _.propertyOf(object));\n     * // => [3, 2]\n     *\n     * _.sortBy(['a', 'b', 'c'], _.propertyOf(object));\n     * // => ['b', 'c', 'a']\n     */\n    function propertyOf(object) {\n      return function(key) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it\n     * defaults to `start` with `start` becoming `0`. If `start` is less than\n     * `end` a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = null;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(ceil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2` respectively\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = +n;\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var isFilter = index == LAZY_FILTER_FLAG,\n          isWhile = index == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var result = this.clone(),\n            filtered = result.__filtered__,\n            iteratees = result.__iteratees__ || (result.__iteratees__ = []);\n\n        result.__filtered__ = filtered || isFilter || (isWhile && result.__dir__ < 0);\n        iteratees.push({ 'iteratee': getCallback(iteratee, thisArg, 3), 'type': index });\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      var countName = '__' + methodName + 'Count__',\n          whileName = methodName + 'While';\n\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n == null ? 1 : nativeMax(floor(n) || 0, 0);\n\n        var result = this.clone();\n        if (result.__filtered__) {\n          var value = result[countName];\n          result[countName] = index ? nativeMin(value, n) : (value + n);\n        } else {\n          var views = result.__views__ || (result.__views__ = []);\n          views.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n\n      LazyWrapper.prototype[methodName + 'RightWhile'] = function(predicate, thisArg) {\n        return this.reverse()[whileName](predicate, thisArg).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : baseProperty;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.dropWhile = function(predicate, thisArg) {\n      var done;\n      predicate = getCallback(predicate, thisArg, 3);\n      return this.filter(function(value, index, array) {\n        return done || (done = !predicate(value, index, array));\n      });\n    };\n\n    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 3);\n      return this.filter(function(value, index, array) {\n        return !predicate(value, index, array);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n      var result = start < 0 ? this.takeRight(-start) : this.drop(start);\n\n      if (typeof end != 'undefined') {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.drop(0);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName],\n          retUnwrapped = /^(?:first|last)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = arguments,\n            chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (retUnwrapped && !chainAll) {\n          return onlyLazy\n            ? func.call(value)\n            : lodashFunc.call(lodash, this.value());\n        }\n        var interceptor = function(value) {\n          var otherArgs = [value];\n          push.apply(otherArgs, args);\n          return lodashFunc.apply(lodash, otherArgs);\n        };\n        if (isLazy || isArray(value)) {\n          var wrapper = onlyLazy ? value : new LazyWrapper(this),\n              result = func.apply(wrapper, args);\n\n          if (!retUnwrapped && (isHybrid || result.__actions__)) {\n            var actions = result.__actions__ || (result.__actions__ = []);\n            actions.push({ 'func': thru, 'args': [interceptor], 'thisArg': lodash });\n          }\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array.prototype` functions to `lodash.prototype`.\n    arrayEach(['concat', 'join', 'pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var arrayFunc = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          fixObjects = !support.spliceObjects && /^(?:pop|shift|splice)$/.test(methodName),\n          retUnwrapped = /^(?:join|pop|shift)$/.test(methodName);\n\n      // Avoid array-like object bugs with `Array#shift` and `Array#splice` in\n      // IE < 9, Firefox < 10, Narwhal, and RingoJS.\n      var func = !fixObjects ? arrayFunc : function() {\n        var result = arrayFunc.apply(this, arguments);\n        if (this.length === 0) {\n          delete this[0];\n        }\n        return result;\n      };\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the `lodash` wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define('underscore', [],function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Narwhal or Rhino -require.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n\n","//     Backbone.js 1.1.2\n\n//     (c) 2010-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(root, factory) {\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (typeof define === 'function' && define.amd) {\n    define('backbone',['underscore', 'jquery', 'exports'], function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    });\n\n  // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore');\n    factory(root, exports, _);\n\n  // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));\n  }\n\n}(this, function(root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create local references to array methods we'll want to use later.\n  var array = [];\n  var push = array.push;\n  var slice = array.slice;\n  var splice = array.splice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.1.2';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // custom events. You may bind with `on` or remove with `off` callback\n  // functions to an event; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {\n\n    // Bind an event to a `callback` function. Passing `\"all\"` will bind\n    // the callback to all events fired.\n    on: function(name, callback, context) {\n      if (!eventsApi(this, 'on', name, [callback, context]) || !callback) return this;\n      this._events || (this._events = {});\n      var events = this._events[name] || (this._events[name] = []);\n      events.push({callback: callback, context: context, ctx: context || this});\n      return this;\n    },\n\n    // Bind an event to only be triggered a single time. After the first time\n    // the callback is invoked, it will be removed.\n    once: function(name, callback, context) {\n      if (!eventsApi(this, 'once', name, [callback, context]) || !callback) return this;\n      var self = this;\n      var once = _.once(function() {\n        self.off(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n      return this.on(name, once, context);\n    },\n\n    // Remove one or many callbacks. If `context` is null, removes all\n    // callbacks with that function. If `callback` is null, removes all\n    // callbacks for the event. If `name` is null, removes all bound\n    // callbacks for all events.\n    off: function(name, callback, context) {\n      var retain, ev, events, names, i, l, j, k;\n      if (!this._events || !eventsApi(this, 'off', name, [callback, context])) return this;\n      if (!name && !callback && !context) {\n        this._events = void 0;\n        return this;\n      }\n      names = name ? [name] : _.keys(this._events);\n      for (i = 0, l = names.length; i < l; i++) {\n        name = names[i];\n        if (events = this._events[name]) {\n          this._events[name] = retain = [];\n          if (callback || context) {\n            for (j = 0, k = events.length; j < k; j++) {\n              ev = events[j];\n              if ((callback && callback !== ev.callback && callback !== ev.callback._callback) ||\n                  (context && context !== ev.context)) {\n                retain.push(ev);\n              }\n            }\n          }\n          if (!retain.length) delete this._events[name];\n        }\n      }\n\n      return this;\n    },\n\n    // Trigger one or many events, firing all bound callbacks. Callbacks are\n    // passed the same arguments as `trigger` is, apart from the event name\n    // (unless you're listening on `\"all\"`, which will cause your callback to\n    // receive the true name of the event as the first argument).\n    trigger: function(name) {\n      if (!this._events) return this;\n      var args = slice.call(arguments, 1);\n      if (!eventsApi(this, 'trigger', name, args)) return this;\n      var events = this._events[name];\n      var allEvents = this._events.all;\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, arguments);\n      return this;\n    },\n\n    // Tell this object to stop listening to either specific events ... or\n    // to every object it's currently listening to.\n    stopListening: function(obj, name, callback) {\n      var listeningTo = this._listeningTo;\n      if (!listeningTo) return this;\n      var remove = !name && !callback;\n      if (!callback && typeof name === 'object') callback = this;\n      if (obj) (listeningTo = {})[obj._listenId] = obj;\n      for (var id in listeningTo) {\n        obj = listeningTo[id];\n        obj.off(name, callback, this);\n        if (remove || _.isEmpty(obj._events)) delete this._listeningTo[id];\n      }\n      return this;\n    }\n\n  };\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // Implement fancy features of the Events API such as multiple event\n  // names `\"change blur\"` and jQuery-style event maps `{change: action}`\n  // in terms of the existing API.\n  var eventsApi = function(obj, action, name, rest) {\n    if (!name) return true;\n\n    // Handle event maps.\n    if (typeof name === 'object') {\n      for (var key in name) {\n        obj[action].apply(obj, [key, name[key]].concat(rest));\n      }\n      return false;\n    }\n\n    // Handle space separated event names.\n    if (eventSplitter.test(name)) {\n      var names = name.split(eventSplitter);\n      for (var i = 0, l = names.length; i < l; i++) {\n        obj[action].apply(obj, [names[i]].concat(rest));\n      }\n      return false;\n    }\n\n    return true;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n  };\n\n  var listenMethods = {listenTo: 'on', listenToOnce: 'once'};\n\n  // Inversion-of-control versions of `on` and `once`. Tell *this* object to\n  // listen to an event in another object ... keeping track of what it's\n  // listening to.\n  _.each(listenMethods, function(implementation, method) {\n    Events[method] = function(obj, name, callback) {\n      var listeningTo = this._listeningTo || (this._listeningTo = {});\n      var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n      listeningTo[id] = obj;\n      if (!callback && typeof name === 'object') callback = this;\n      obj[implementation](name, callback, this);\n      return this;\n    };\n  });\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.cid = _.uniqueId('c');\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    attrs = _.defaults({}, attrs, _.result(this, 'defaults'));\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function(key, val, options) {\n      var attr, attrs, unset, changes, silent, changing, prev, current;\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      unset           = options.unset;\n      silent          = options.silent;\n      changes         = [];\n      changing        = this._changing;\n      this._changing  = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n      current = this.attributes, prev = this._previousAttributes;\n\n      // Check for changes of `id`.\n      if (this.idAttribute in attrs) this.id = attrs[this.idAttribute];\n\n      // For each `set` attribute, update or delete the current value.\n      for (attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          this.changed[attr] = val;\n        } else {\n          delete this.changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0, l = changes.length; i < l; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function(options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {unset: true}));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var val, changed = false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      for (var attr in diff) {\n        if (_.isEqual(old[attr], (val = diff[attr]))) continue;\n        (changed || (changed = {}))[attr] = val;\n      }\n      return changed;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server. If the server's representation of the\n    // model differs from its current attributes, they will be overridden,\n    // triggering a `\"change\"` event.\n    fetch: function(options) {\n      options = options ? _.clone(options) : {};\n      if (options.parse === void 0) options.parse = true;\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        if (!model.set(model.parse(resp, options), options)) return false;\n        if (success) success(model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, val, options) {\n      var attrs, method, xhr, attributes = this.attributes;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({validate: true}, options);\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !options.wait) {\n        if (!this.set(attrs, options)) return false;\n      } else {\n        if (!this._validate(attrs, options)) return false;\n      }\n\n      // Set temporary attributes if `{wait: true}`.\n      if (attrs && options.wait) {\n        this.attributes = _.extend({}, attributes, attrs);\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      if (options.parse === void 0) options.parse = true;\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = model.parse(resp, options);\n        if (options.wait) serverAttrs = _.extend(attrs || {}, serverAttrs);\n        if (_.isObject(serverAttrs) && !model.set(serverAttrs, options)) {\n          return false;\n        }\n        if (success) success(model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\n      if (method === 'patch') options.attrs = attrs;\n      xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      if (attrs && options.wait) this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n\n      var destroy = function() {\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function(resp) {\n        if (options.wait || model.isNew()) destroy();\n        if (success) success(model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      if (this.isNew()) {\n        options.success();\n        return false;\n      }\n      wrapError(this, options);\n\n      var xhr = this.sync('delete', this, options);\n      if (!options.wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base =\n        _.result(this, 'urlRoot') ||\n        _.result(this.collection, 'url') ||\n        urlError();\n      if (this.isNew()) return base;\n      return base.replace(/([^\\/])$/, '$1/') + encodeURIComponent(this.id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return !this.has(this.idAttribute);\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function(options) {\n      return this._validate({}, _.extend(options || {}, { validate: true }));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n      return false;\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Model.\n  var modelMethods = ['keys', 'values', 'pairs', 'invert', 'pick', 'omit'];\n\n  // Mix in each Underscore method as a proxy to `Model#attributes`.\n  _.each(modelMethods, function(method) {\n    Model.prototype[method] = function() {\n      var args = slice.call(arguments);\n      args.unshift(this.attributes);\n      return _[method].apply(_, args);\n    };\n  });\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analagous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {add: true, remove: true, merge: true};\n  var addOptions = {add: true, remove: false};\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model){ return model.toJSON(options); });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set.\n    add: function(models, options) {\n      return this.set(models, _.extend({merge: false}, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function(models, options) {\n      var singular = !_.isArray(models);\n      models = singular ? [models] : _.clone(models);\n      options || (options = {});\n      var i, l, index, model;\n      for (i = 0, l = models.length; i < l; i++) {\n        model = models[i] = this.get(models[i]);\n        if (!model) continue;\n        delete this._byId[model.id];\n        delete this._byId[model.cid];\n        index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n        this._removeReference(model, options);\n      }\n      return singular ? models[0] : models;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function(models, options) {\n      options = _.defaults({}, options, setOptions);\n      if (options.parse) models = this.parse(models, options);\n      var singular = !_.isArray(models);\n      models = singular ? (models ? [models] : []) : _.clone(models);\n      var i, l, id, model, attrs, existing, sort;\n      var at = options.at;\n      var targetModel = this.model;\n      var sortable = this.comparator && (at == null) && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n      var toAdd = [], toRemove = [], modelMap = {};\n      var add = options.add, merge = options.merge, remove = options.remove;\n      var order = !sortable && add && remove ? [] : false;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      for (i = 0, l = models.length; i < l; i++) {\n        attrs = models[i] || {};\n        if (attrs instanceof Model) {\n          id = model = attrs;\n        } else {\n          id = attrs[targetModel.prototype.idAttribute || 'id'];\n        }\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        if (existing = this.get(id)) {\n          if (remove) modelMap[existing.cid] = true;\n          if (merge) {\n            attrs = attrs === model ? model.attributes : attrs;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            if (sortable && !sort && existing.hasChanged(sortAttr)) sort = true;\n          }\n          models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(attrs, options);\n          if (!model) continue;\n          toAdd.push(model);\n          this._addReference(model, options);\n        }\n\n        // Do not add multiple models with the same `id`.\n        model = existing || model;\n        if (order && (model.isNew() || !modelMap[model.id])) order.push(model);\n        modelMap[model.id] = true;\n      }\n\n      // Remove nonexistent models if appropriate.\n      if (remove) {\n        for (i = 0, l = this.length; i < l; ++i) {\n          if (!modelMap[(model = this.models[i]).cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this.remove(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      if (toAdd.length || (order && order.length)) {\n        if (sortable) sort = true;\n        this.length += toAdd.length;\n        if (at != null) {\n          for (i = 0, l = toAdd.length; i < l; i++) {\n            this.models.splice(at + i, 0, toAdd[i]);\n          }\n        } else {\n          if (order) this.models.length = 0;\n          var orderedModels = order || toAdd;\n          for (i = 0, l = orderedModels.length; i < l; i++) {\n            this.models.push(orderedModels[i]);\n          }\n        }\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({silent: true});\n\n      // Unless silenced, it's time to fire all appropriate add/sort events.\n      if (!options.silent) {\n        for (i = 0, l = toAdd.length; i < l; i++) {\n          (model = toAdd[i]).trigger('add', model, this, options);\n        }\n        if (sort || (order && order.length)) this.trigger('sort', this, options);\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function(models, options) {\n      options || (options = {});\n      for (var i = 0, l = this.models.length; i < l; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      return this.add(model, _.extend({at: this.length}, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      this.remove(model, options);\n      return model;\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      return this.add(model, _.extend({at: 0}, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      this.remove(model, options);\n      return model;\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function() {\n      return slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id.\n    get: function(obj) {\n      if (obj == null) return void 0;\n      return this._byId[obj] || this._byId[obj.id] || this._byId[obj.cid];\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function(attrs, first) {\n      if (_.isEmpty(attrs)) return first ? void 0 : [];\n      return this[first ? 'find' : 'filter'](function(model) {\n        for (var key in attrs) {\n          if (attrs[key] !== model.get(key)) return false;\n        }\n        return true;\n      });\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      if (!this.comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      // Run sort based on type of `comparator`.\n      if (_.isString(this.comparator) || this.comparator.length === 1) {\n        this.models = this.sortBy(this.comparator, this);\n      } else {\n        this.models.sort(_.bind(this.comparator, this));\n      }\n\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return _.invoke(this.models, 'get', attr);\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function(options) {\n      options = options ? _.clone(options) : {};\n      if (options.parse === void 0) options.parse = true;\n      var success = options.success;\n      var collection = this;\n      options.success = function(resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success(collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      options = options ? _.clone(options) : {};\n      if (!(model = this._prepareModel(model, options))) return false;\n      if (!options.wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function(model, resp) {\n        if (options.wait) collection.add(model, options);\n        if (success) success(model, resp, options);\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function() {\n      return new this.constructor(this.models);\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function() {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function(attrs, options) {\n      if (attrs instanceof Model) return attrs;\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method to create a model's ties to a collection.\n    _addReference: function(model, options) {\n      this._byId[model.cid] = model;\n      if (model.id != null) this._byId[model.id] = model;\n      if (!model.collection) model.collection = this;\n      model.on('all', this._onModelEvent, this);\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function(model, options) {\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if ((event === 'add' || event === 'remove') && collection !== this) return;\n      if (event === 'destroy') this.remove(model, options);\n      if (model && event === 'change:' + model.idAttribute) {\n        delete this._byId[model.previous(model.idAttribute)];\n        if (model.id != null) this._byId[model.id] = model;\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var methods = ['forEach', 'each', 'map', 'collect', 'reduce', 'foldl',\n    'inject', 'reduceRight', 'foldr', 'find', 'detect', 'filter', 'select',\n    'reject', 'every', 'all', 'some', 'any', 'include', 'contains', 'invoke',\n    'max', 'min', 'toArray', 'size', 'first', 'head', 'take', 'initial', 'rest',\n    'tail', 'drop', 'last', 'without', 'difference', 'indexOf', 'shuffle',\n    'lastIndexOf', 'isEmpty', 'chain', 'sample'];\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n  _.each(methods, function(method) {\n    Collection.prototype[method] = function() {\n      var args = slice.call(arguments);\n      args.unshift(this.models);\n      return _[method].apply(_, args);\n    };\n  });\n\n  // Underscore methods that take a property name as an argument.\n  var attributeMethods = ['groupBy', 'countBy', 'sortBy', 'indexBy'];\n\n  // Use attributes instead of properties.\n  _.each(attributeMethods, function(method) {\n    Collection.prototype[method] = function(value, context) {\n      var iterator = _.isFunction(value) ? value : function(model) {\n        return model.get(value);\n      };\n      return _[method](this.models, iterator, context);\n    };\n  });\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    options || (options = {});\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n    this.delegateEvents();\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be merged as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function() {\n      this.$el.remove();\n      this.stopListening();\n      return this;\n    },\n\n    // Change the view's element (`this.el` property), including event\n    // re-delegation.\n    setElement: function(element, delegate) {\n      if (this.$el) this.undelegateEvents();\n      this.$el = element instanceof Backbone.$ ? element : Backbone.$(element);\n      this.el = this.$el[0];\n      if (delegate !== false) this.delegateEvents();\n      return this;\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    // This only works for delegate-able events: not `focus`, `blur`, and\n    // not `change`, `submit`, and `reset` in Internet Explorer.\n    delegateEvents: function(events) {\n      if (!(events || (events = _.result(this, 'events')))) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[events[key]];\n        if (!method) continue;\n\n        var match = key.match(delegateEventSplitter);\n        var eventName = match[1], selector = match[2];\n        method = _.bind(method, this);\n        eventName += '.delegateEvents' + this.cid;\n        if (selector === '') {\n          this.$el.on(eventName, method);\n        } else {\n          this.$el.on(eventName, selector, method);\n        }\n      }\n      return this;\n    },\n\n    // Clears all callbacks previously bound to the view with `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        var $el = Backbone.$('<' + _.result(this, 'tagName') + '>').attr(attrs);\n        this.setElement($el, false);\n      } else {\n        this.setElement(_.result(this, 'el'), false);\n      }\n    }\n\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function(xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // If we're sending a `PATCH` request, and we're in an old Internet Explorer\n    // that still has ActiveX enabled by default, override jQuery to use that\n    // for XHR instead. Remove this line when jQuery supports `PATCH` on IE8.\n    if (params.type === 'PATCH' && noXhrPatch) {\n      params.xhr = function() {\n        return new ActiveXObject(\"Microsoft.XMLHTTP\");\n      };\n    }\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  var noXhrPatch =\n    typeof window !== 'undefined' && !!window.ActiveXObject &&\n      !(window.XMLHttpRequest && (new XMLHttpRequest).dispatchEvent);\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch':  'PATCH',\n    'delete': 'DELETE',\n    'read':   'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function() {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam    = /(\\(\\?)?:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function(fragment) {\n        var args = router._extractParameters(route, fragment);\n        router.execute(callback, args);\n        router.trigger.apply(router, ['route:' + name].concat(args));\n        router.trigger('route', name, args);\n        Backbone.history.trigger('route', router, name, args);\n      });\n      return this;\n    },\n\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function(callback, args) {\n      if (callback) callback.apply(this, args);\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route, routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n                   .replace(optionalParam, '(?:$1)?')\n                   .replace(namedParam, function(match, optional) {\n                     return optional ? match : '([^/?]+)';\n                   })\n                   .replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function(param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    _.bindAll(this, 'checkUrl');\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for detecting MSIE.\n  var isExplorer = /msie [\\w.]+/;\n\n  // Cached regex for removing a trailing slash.\n  var trailingSlash = /\\/$/;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Are we at the app root?\n    atRoot: function() {\n      return this.location.pathname.replace(/[^\\/]$/, '$&/') === this.root;\n    },\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the cross-browser normalized URL fragment, either from the URL,\n    // the hash, or the override.\n    getFragment: function(fragment, forcePushState) {\n      if (fragment == null) {\n        if (this._hasPushState || !this._wantsHashChange || forcePushState) {\n          fragment = decodeURI(this.location.pathname + this.location.search);\n          var root = this.root.replace(trailingSlash, '');\n          if (!fragment.indexOf(root)) fragment = fragment.slice(root.length);\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error(\"Backbone.history has already been started\");\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({root: '/'}, this.options, options);\n      this.root             = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.options.pushState && this.history && this.history.pushState);\n      var fragment          = this.getFragment();\n      var docMode           = document.documentMode;\n      var oldIE             = (isExplorer.exec(navigator.userAgent.toLowerCase()) && (!docMode || docMode <= 7));\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      if (oldIE && this._wantsHashChange) {\n        var frame = Backbone.$('<iframe src=\"javascript:0\" tabindex=\"-1\">');\n        this.iframe = frame.hide().appendTo('body')[0].contentWindow;\n        this.navigate(fragment);\n      }\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._hasPushState) {\n        Backbone.$(window).on('popstate', this.checkUrl);\n      } else if (this._wantsHashChange && ('onhashchange' in window) && !oldIE) {\n        Backbone.$(window).on('hashchange', this.checkUrl);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      // Determine if we need to change the base url, for a pushState link\n      // opened by a non-pushState browser.\n      this.fragment = fragment;\n      var loc = this.location;\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          this.fragment = this.getFragment(null, true);\n          this.location.replace(this.root + '#' + this.fragment);\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot() && loc.hash) {\n          this.fragment = this.getHash().replace(routeStripper, '');\n          this.history.replaceState({}, document.title, this.root + this.fragment);\n        }\n\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      Backbone.$(window).off('popstate', this.checkUrl).off('hashchange', this.checkUrl);\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n      if (current === this.fragment && this.iframe) {\n        current = this.getFragment(this.getHash(this.iframe));\n      }\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragment) {\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.any(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: !!options};\n\n      var url = this.root + (fragment = this.getFragment(fragment || ''));\n\n      // Strip the hash for matching.\n      fragment = fragment.replace(pathStripper, '');\n\n      if (this.fragment === fragment) return;\n      this.fragment = fragment;\n\n      // Don't include a trailing slash on the root.\n      if (fragment === '' && url !== '/') url = url.slice(0, -1);\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._hasPushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && (fragment !== this.getFragment(this.getHash(this.iframe)))) {\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if(!options.replace) this.iframe.document.open().close();\n          this._updateHash(this.iframe.location, fragment, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History;\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain, for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent's constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent`'s constructor function.\n    var Surrogate = function(){ this.constructor = child; };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate;\n\n    // Add prototype properties (instance properties) to the subclass,\n    // if supplied.\n    if (protoProps) _.extend(child.prototype, protoProps);\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function(model, options) {\n    var error = options.error;\n    options.error = function(resp) {\n      if (error) error(model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n\n}));\n","// MarionetteJS (Backbone.Marionette)\n// ----------------------------------\n// v2.3.2\n//\n// Copyright (c)2015 Derick Bailey, Muted Solutions, LLC.\n// Distributed under MIT license\n//\n// http://marionettejs.com\n\n\n/*!\n * Includes BabySitter\n * https://github.com/marionettejs/backbone.babysitter/\n *\n * Includes Wreqr\n * https://github.com/marionettejs/backbone.wreqr/\n */\n\n\n(function(root, factory) {\n\n  /* istanbul ignore next */\n  if (typeof define === 'function' && define.amd) {\n    define('marionette',['backbone', 'underscore'], function(Backbone, _) {\n      return (root.Marionette = root.Mn = factory(root, Backbone, _));\n    });\n  } else if (typeof exports !== 'undefined') {\n    var Backbone = require('backbone');\n    var _ = require('underscore');\n    module.exports = factory(root, Backbone, _);\n  } else {\n    root.Marionette = root.Mn = factory(root, root.Backbone, root._);\n  }\n\n}(this, function(root, Backbone, _) {\n  'use strict';\n\n  /* istanbul ignore next */\n  // Backbone.BabySitter\n  // -------------------\n  // v0.1.5\n  //\n  // Copyright (c)2014 Derick Bailey, Muted Solutions, LLC.\n  // Distributed under MIT license\n  //\n  // http://github.com/marionettejs/backbone.babysitter\n  (function(Backbone, _) {\n    \"use strict\";\n    var previousChildViewContainer = Backbone.ChildViewContainer;\n    // BabySitter.ChildViewContainer\n    // -----------------------------\n    //\n    // Provide a container to store, retrieve and\n    // shut down child views.\n    Backbone.ChildViewContainer = function(Backbone, _) {\n      // Container Constructor\n      // ---------------------\n      var Container = function(views) {\n        this._views = {};\n        this._indexByModel = {};\n        this._indexByCustom = {};\n        this._updateLength();\n        _.each(views, this.add, this);\n      };\n      // Container Methods\n      // -----------------\n      _.extend(Container.prototype, {\n        // Add a view to this container. Stores the view\n        // by `cid` and makes it searchable by the model\n        // cid (and model itself). Optionally specify\n        // a custom key to store an retrieve the view.\n        add: function(view, customIndex) {\n          var viewCid = view.cid;\n          // store the view\n          this._views[viewCid] = view;\n          // index it by model\n          if (view.model) {\n            this._indexByModel[view.model.cid] = viewCid;\n          }\n          // index by custom\n          if (customIndex) {\n            this._indexByCustom[customIndex] = viewCid;\n          }\n          this._updateLength();\n          return this;\n        },\n        // Find a view by the model that was attached to\n        // it. Uses the model's `cid` to find it.\n        findByModel: function(model) {\n          return this.findByModelCid(model.cid);\n        },\n        // Find a view by the `cid` of the model that was attached to\n        // it. Uses the model's `cid` to find the view `cid` and\n        // retrieve the view using it.\n        findByModelCid: function(modelCid) {\n          var viewCid = this._indexByModel[modelCid];\n          return this.findByCid(viewCid);\n        },\n        // Find a view by a custom indexer.\n        findByCustom: function(index) {\n          var viewCid = this._indexByCustom[index];\n          return this.findByCid(viewCid);\n        },\n        // Find by index. This is not guaranteed to be a\n        // stable index.\n        findByIndex: function(index) {\n          return _.values(this._views)[index];\n        },\n        // retrieve a view by its `cid` directly\n        findByCid: function(cid) {\n          return this._views[cid];\n        },\n        // Remove a view\n        remove: function(view) {\n          var viewCid = view.cid;\n          // delete model index\n          if (view.model) {\n            delete this._indexByModel[view.model.cid];\n          }\n          // delete custom index\n          _.any(this._indexByCustom, function(cid, key) {\n            if (cid === viewCid) {\n              delete this._indexByCustom[key];\n              return true;\n            }\n          }, this);\n          // remove the view from the container\n          delete this._views[viewCid];\n          // update the length\n          this._updateLength();\n          return this;\n        },\n        // Call a method on every view in the container,\n        // passing parameters to the call method one at a\n        // time, like `function.call`.\n        call: function(method) {\n          this.apply(method, _.tail(arguments));\n        },\n        // Apply a method on every view in the container,\n        // passing parameters to the call method one at a\n        // time, like `function.apply`.\n        apply: function(method, args) {\n          _.each(this._views, function(view) {\n            if (_.isFunction(view[method])) {\n              view[method].apply(view, args || []);\n            }\n          });\n        },\n        // Update the `.length` attribute on this container\n        _updateLength: function() {\n          this.length = _.size(this._views);\n        }\n      });\n      // Borrowing this code from Backbone.Collection:\n      // http://backbonejs.org/docs/backbone.html#section-106\n      //\n      // Mix in methods from Underscore, for iteration, and other\n      // collection related features.\n      var methods = [ \"forEach\", \"each\", \"map\", \"find\", \"detect\", \"filter\", \"select\", \"reject\", \"every\", \"all\", \"some\", \"any\", \"include\", \"contains\", \"invoke\", \"toArray\", \"first\", \"initial\", \"rest\", \"last\", \"without\", \"isEmpty\", \"pluck\" ];\n      _.each(methods, function(method) {\n        Container.prototype[method] = function() {\n          var views = _.values(this._views);\n          var args = [ views ].concat(_.toArray(arguments));\n          return _[method].apply(_, args);\n        };\n      });\n      // return the public API\n      return Container;\n    }(Backbone, _);\n    Backbone.ChildViewContainer.VERSION = \"0.1.5\";\n    Backbone.ChildViewContainer.noConflict = function() {\n      Backbone.ChildViewContainer = previousChildViewContainer;\n      return this;\n    };\n    return Backbone.ChildViewContainer;\n  })(Backbone, _);\n\n  /* istanbul ignore next */\n  // Backbone.Wreqr (Backbone.Marionette)\n  // ----------------------------------\n  // v1.3.1\n  //\n  // Copyright (c)2014 Derick Bailey, Muted Solutions, LLC.\n  // Distributed under MIT license\n  //\n  // http://github.com/marionettejs/backbone.wreqr\n  (function(Backbone, _) {\n    \"use strict\";\n    var previousWreqr = Backbone.Wreqr;\n    var Wreqr = Backbone.Wreqr = {};\n    Backbone.Wreqr.VERSION = \"1.3.1\";\n    Backbone.Wreqr.noConflict = function() {\n      Backbone.Wreqr = previousWreqr;\n      return this;\n    };\n    // Handlers\n    // --------\n    // A registry of functions to call, given a name\n    Wreqr.Handlers = function(Backbone, _) {\n      \"use strict\";\n      // Constructor\n      // -----------\n      var Handlers = function(options) {\n        this.options = options;\n        this._wreqrHandlers = {};\n        if (_.isFunction(this.initialize)) {\n          this.initialize(options);\n        }\n      };\n      Handlers.extend = Backbone.Model.extend;\n      // Instance Members\n      // ----------------\n      _.extend(Handlers.prototype, Backbone.Events, {\n        // Add multiple handlers using an object literal configuration\n        setHandlers: function(handlers) {\n          _.each(handlers, function(handler, name) {\n            var context = null;\n            if (_.isObject(handler) && !_.isFunction(handler)) {\n              context = handler.context;\n              handler = handler.callback;\n            }\n            this.setHandler(name, handler, context);\n          }, this);\n        },\n        // Add a handler for the given name, with an\n        // optional context to run the handler within\n        setHandler: function(name, handler, context) {\n          var config = {\n            callback: handler,\n            context: context\n          };\n          this._wreqrHandlers[name] = config;\n          this.trigger(\"handler:add\", name, handler, context);\n        },\n        // Determine whether or not a handler is registered\n        hasHandler: function(name) {\n          return !!this._wreqrHandlers[name];\n        },\n        // Get the currently registered handler for\n        // the specified name. Throws an exception if\n        // no handler is found.\n        getHandler: function(name) {\n          var config = this._wreqrHandlers[name];\n          if (!config) {\n            return;\n          }\n          return function() {\n            var args = Array.prototype.slice.apply(arguments);\n            return config.callback.apply(config.context, args);\n          };\n        },\n        // Remove a handler for the specified name\n        removeHandler: function(name) {\n          delete this._wreqrHandlers[name];\n        },\n        // Remove all handlers from this registry\n        removeAllHandlers: function() {\n          this._wreqrHandlers = {};\n        }\n      });\n      return Handlers;\n    }(Backbone, _);\n    // Wreqr.CommandStorage\n    // --------------------\n    //\n    // Store and retrieve commands for execution.\n    Wreqr.CommandStorage = function() {\n      \"use strict\";\n      // Constructor function\n      var CommandStorage = function(options) {\n        this.options = options;\n        this._commands = {};\n        if (_.isFunction(this.initialize)) {\n          this.initialize(options);\n        }\n      };\n      // Instance methods\n      _.extend(CommandStorage.prototype, Backbone.Events, {\n        // Get an object literal by command name, that contains\n        // the `commandName` and the `instances` of all commands\n        // represented as an array of arguments to process\n        getCommands: function(commandName) {\n          var commands = this._commands[commandName];\n          // we don't have it, so add it\n          if (!commands) {\n            // build the configuration\n            commands = {\n              command: commandName,\n              instances: []\n            };\n            // store it\n            this._commands[commandName] = commands;\n          }\n          return commands;\n        },\n        // Add a command by name, to the storage and store the\n        // args for the command\n        addCommand: function(commandName, args) {\n          var command = this.getCommands(commandName);\n          command.instances.push(args);\n        },\n        // Clear all commands for the given `commandName`\n        clearCommands: function(commandName) {\n          var command = this.getCommands(commandName);\n          command.instances = [];\n        }\n      });\n      return CommandStorage;\n    }();\n    // Wreqr.Commands\n    // --------------\n    //\n    // A simple command pattern implementation. Register a command\n    // handler and execute it.\n    Wreqr.Commands = function(Wreqr) {\n      \"use strict\";\n      return Wreqr.Handlers.extend({\n        // default storage type\n        storageType: Wreqr.CommandStorage,\n        constructor: function(options) {\n          this.options = options || {};\n          this._initializeStorage(this.options);\n          this.on(\"handler:add\", this._executeCommands, this);\n          var args = Array.prototype.slice.call(arguments);\n          Wreqr.Handlers.prototype.constructor.apply(this, args);\n        },\n        // Execute a named command with the supplied args\n        execute: function(name, args) {\n          name = arguments[0];\n          args = Array.prototype.slice.call(arguments, 1);\n          if (this.hasHandler(name)) {\n            this.getHandler(name).apply(this, args);\n          } else {\n            this.storage.addCommand(name, args);\n          }\n        },\n        // Internal method to handle bulk execution of stored commands\n        _executeCommands: function(name, handler, context) {\n          var command = this.storage.getCommands(name);\n          // loop through and execute all the stored command instances\n          _.each(command.instances, function(args) {\n            handler.apply(context, args);\n          });\n          this.storage.clearCommands(name);\n        },\n        // Internal method to initialize storage either from the type's\n        // `storageType` or the instance `options.storageType`.\n        _initializeStorage: function(options) {\n          var storage;\n          var StorageType = options.storageType || this.storageType;\n          if (_.isFunction(StorageType)) {\n            storage = new StorageType();\n          } else {\n            storage = StorageType;\n          }\n          this.storage = storage;\n        }\n      });\n    }(Wreqr);\n    // Wreqr.RequestResponse\n    // ---------------------\n    //\n    // A simple request/response implementation. Register a\n    // request handler, and return a response from it\n    Wreqr.RequestResponse = function(Wreqr) {\n      \"use strict\";\n      return Wreqr.Handlers.extend({\n        request: function() {\n          var name = arguments[0];\n          var args = Array.prototype.slice.call(arguments, 1);\n          if (this.hasHandler(name)) {\n            return this.getHandler(name).apply(this, args);\n          }\n        }\n      });\n    }(Wreqr);\n    // Event Aggregator\n    // ----------------\n    // A pub-sub object that can be used to decouple various parts\n    // of an application through event-driven architecture.\n    Wreqr.EventAggregator = function(Backbone, _) {\n      \"use strict\";\n      var EA = function() {};\n      // Copy the `extend` function used by Backbone's classes\n      EA.extend = Backbone.Model.extend;\n      // Copy the basic Backbone.Events on to the event aggregator\n      _.extend(EA.prototype, Backbone.Events);\n      return EA;\n    }(Backbone, _);\n    // Wreqr.Channel\n    // --------------\n    //\n    // An object that wraps the three messaging systems:\n    // EventAggregator, RequestResponse, Commands\n    Wreqr.Channel = function(Wreqr) {\n      \"use strict\";\n      var Channel = function(channelName) {\n        this.vent = new Backbone.Wreqr.EventAggregator();\n        this.reqres = new Backbone.Wreqr.RequestResponse();\n        this.commands = new Backbone.Wreqr.Commands();\n        this.channelName = channelName;\n      };\n      _.extend(Channel.prototype, {\n        // Remove all handlers from the messaging systems of this channel\n        reset: function() {\n          this.vent.off();\n          this.vent.stopListening();\n          this.reqres.removeAllHandlers();\n          this.commands.removeAllHandlers();\n          return this;\n        },\n        // Connect a hash of events; one for each messaging system\n        connectEvents: function(hash, context) {\n          this._connect(\"vent\", hash, context);\n          return this;\n        },\n        connectCommands: function(hash, context) {\n          this._connect(\"commands\", hash, context);\n          return this;\n        },\n        connectRequests: function(hash, context) {\n          this._connect(\"reqres\", hash, context);\n          return this;\n        },\n        // Attach the handlers to a given message system `type`\n        _connect: function(type, hash, context) {\n          if (!hash) {\n            return;\n          }\n          context = context || this;\n          var method = type === \"vent\" ? \"on\" : \"setHandler\";\n          _.each(hash, function(fn, eventName) {\n            this[type][method](eventName, _.bind(fn, context));\n          }, this);\n        }\n      });\n      return Channel;\n    }(Wreqr);\n    // Wreqr.Radio\n    // --------------\n    //\n    // An object that lets you communicate with many channels.\n    Wreqr.radio = function(Wreqr) {\n      \"use strict\";\n      var Radio = function() {\n        this._channels = {};\n        this.vent = {};\n        this.commands = {};\n        this.reqres = {};\n        this._proxyMethods();\n      };\n      _.extend(Radio.prototype, {\n        channel: function(channelName) {\n          if (!channelName) {\n            throw new Error(\"Channel must receive a name\");\n          }\n          return this._getChannel(channelName);\n        },\n        _getChannel: function(channelName) {\n          var channel = this._channels[channelName];\n          if (!channel) {\n            channel = new Wreqr.Channel(channelName);\n            this._channels[channelName] = channel;\n          }\n          return channel;\n        },\n        _proxyMethods: function() {\n          _.each([ \"vent\", \"commands\", \"reqres\" ], function(system) {\n            _.each(messageSystems[system], function(method) {\n              this[system][method] = proxyMethod(this, system, method);\n            }, this);\n          }, this);\n        }\n      });\n      var messageSystems = {\n        vent: [ \"on\", \"off\", \"trigger\", \"once\", \"stopListening\", \"listenTo\", \"listenToOnce\" ],\n        commands: [ \"execute\", \"setHandler\", \"setHandlers\", \"removeHandler\", \"removeAllHandlers\" ],\n        reqres: [ \"request\", \"setHandler\", \"setHandlers\", \"removeHandler\", \"removeAllHandlers\" ]\n      };\n      var proxyMethod = function(radio, system, method) {\n        return function(channelName) {\n          var messageSystem = radio._getChannel(channelName)[system];\n          var args = Array.prototype.slice.call(arguments, 1);\n          return messageSystem[method].apply(messageSystem, args);\n        };\n      };\n      return new Radio();\n    }(Wreqr);\n    return Backbone.Wreqr;\n  })(Backbone, _);\n\n  var previousMarionette = root.Marionette;\n\n  var Marionette = Backbone.Marionette = {};\n\n  Marionette.VERSION = '2.3.2';\n\n  Marionette.noConflict = function() {\n    root.Marionette = previousMarionette;\n    return this;\n  };\n\n  Backbone.Marionette = Marionette;\n\n  // Get the Deferred creator for later use\n  Marionette.Deferred = Backbone.$.Deferred;\n\n  /* jshint unused: false *//* global console */\n\n  // Helpers\n  // -------\n\n  // Marionette.extend\n  // -----------------\n\n  // Borrow the Backbone `extend` method so we can use it as needed\n  Marionette.extend = Backbone.Model.extend;\n\n  // Marionette.isNodeAttached\n  // -------------------------\n\n  // Determine if `el` is a child of the document\n  Marionette.isNodeAttached = function(el) {\n    return Backbone.$.contains(document.documentElement, el);\n  };\n\n\n  // Marionette.getOption\n  // --------------------\n\n  // Retrieve an object, function or other value from a target\n  // object or its `options`, with `options` taking precedence.\n  Marionette.getOption = function(target, optionName) {\n    if (!target || !optionName) { return; }\n    if (target.options && (target.options[optionName] !== undefined)) {\n      return target.options[optionName];\n    } else {\n      return target[optionName];\n    }\n  };\n\n  // Proxy `Marionette.getOption`\n  Marionette.proxyGetOption = function(optionName) {\n    return Marionette.getOption(this, optionName);\n  };\n\n  // Similar to `_.result`, this is a simple helper\n  // If a function is provided we call it with context\n  // otherwise just return the value. If the value is\n  // undefined return a default value\n  Marionette._getValue = function(value, context, params) {\n    if (_.isFunction(value)) {\n      // We need to ensure that params is not undefined\n      // to prevent `apply` from failing in ie8\n      params = params || [];\n\n      value = value.apply(context, params);\n    }\n    return value;\n  };\n\n  // Marionette.normalizeMethods\n  // ----------------------\n\n  // Pass in a mapping of events => functions or function names\n  // and return a mapping of events => functions\n  Marionette.normalizeMethods = function(hash) {\n    return _.reduce(hash, function(normalizedHash, method, name) {\n      if (!_.isFunction(method)) {\n        method = this[method];\n      }\n      if (method) {\n        normalizedHash[name] = method;\n      }\n      return normalizedHash;\n    }, {}, this);\n  };\n\n  // utility method for parsing @ui. syntax strings\n  // into associated selector\n  Marionette.normalizeUIString = function(uiString, ui) {\n    return uiString.replace(/@ui\\.[a-zA-Z_$0-9]*/g, function(r) {\n      return ui[r.slice(4)];\n    });\n  };\n\n  // allows for the use of the @ui. syntax within\n  // a given key for triggers and events\n  // swaps the @ui with the associated selector.\n  // Returns a new, non-mutated, parsed events hash.\n  Marionette.normalizeUIKeys = function(hash, ui) {\n    return _.reduce(hash, function(memo, val, key) {\n      var normalizedKey = Marionette.normalizeUIString(key, ui);\n      memo[normalizedKey] = val;\n      return memo;\n    }, {});\n  };\n\n  // allows for the use of the @ui. syntax within\n  // a given value for regions\n  // swaps the @ui with the associated selector\n  Marionette.normalizeUIValues = function(hash, ui) {\n    _.each(hash, function(val, key) {\n      if (_.isString(val)) {\n        hash[key] = Marionette.normalizeUIString(val, ui);\n      }\n    });\n    return hash;\n  };\n\n  // Mix in methods from Underscore, for iteration, and other\n  // collection related features.\n  // Borrowing this code from Backbone.Collection:\n  // http://backbonejs.org/docs/backbone.html#section-121\n  Marionette.actAsCollection = function(object, listProperty) {\n    var methods = ['forEach', 'each', 'map', 'find', 'detect', 'filter',\n      'select', 'reject', 'every', 'all', 'some', 'any', 'include',\n      'contains', 'invoke', 'toArray', 'first', 'initial', 'rest',\n      'last', 'without', 'isEmpty', 'pluck'];\n\n    _.each(methods, function(method) {\n      object[method] = function() {\n        var list = _.values(_.result(this, listProperty));\n        var args = [list].concat(_.toArray(arguments));\n        return _[method].apply(_, args);\n      };\n    });\n  };\n\n  var deprecate = Marionette.deprecate = function(message, test) {\n    if (_.isObject(message)) {\n      message = (\n        message.prev + ' is going to be removed in the future. ' +\n        'Please use ' + message.next + ' instead.' +\n        (message.url ? ' See: ' + message.url : '')\n      );\n    }\n\n    if ((test === undefined || !test) && !deprecate._cache[message]) {\n      deprecate._warn('Deprecation warning: ' + message);\n      deprecate._cache[message] = true;\n    }\n  };\n\n  deprecate._warn = typeof console !== 'undefined' && (console.warn || console.log) || function() {};\n  deprecate._cache = {};\n\n  /* jshint maxstatements: 14, maxcomplexity: 7 */\n\n  // Trigger Method\n  // --------------\n\n\n  Marionette._triggerMethod = (function() {\n    // split the event name on the \":\"\n    var splitter = /(^|:)(\\w)/gi;\n\n    // take the event section (\"section1:section2:section3\")\n    // and turn it in to uppercase name\n    function getEventName(match, prefix, eventName) {\n      return eventName.toUpperCase();\n    }\n\n    return function(context, event, args) {\n      var noEventArg = arguments.length < 3;\n      if (noEventArg) {\n        args = event;\n        event = args[0];\n      }\n\n      // get the method name from the event name\n      var methodName = 'on' + event.replace(splitter, getEventName);\n      var method = context[methodName];\n      var result;\n\n      // call the onMethodName if it exists\n      if (_.isFunction(method)) {\n        // pass all args, except the event name\n        result = method.apply(context, noEventArg ? _.rest(args) : args);\n      }\n\n      // trigger the event, if a trigger method exists\n      if (_.isFunction(context.trigger)) {\n        if (noEventArg + args.length > 1) {\n          context.trigger.apply(context, noEventArg ? args : [event].concat(_.rest(args, 0)));\n        } else {\n          context.trigger(event);\n        }\n      }\n\n      return result;\n    };\n  })();\n\n  // Trigger an event and/or a corresponding method name. Examples:\n  //\n  // `this.triggerMethod(\"foo\")` will trigger the \"foo\" event and\n  // call the \"onFoo\" method.\n  //\n  // `this.triggerMethod(\"foo:bar\")` will trigger the \"foo:bar\" event and\n  // call the \"onFooBar\" method.\n  Marionette.triggerMethod = function(event) {\n    return Marionette._triggerMethod(this, arguments);\n  };\n\n  // triggerMethodOn invokes triggerMethod on a specific context\n  //\n  // e.g. `Marionette.triggerMethodOn(view, 'show')`\n  // will trigger a \"show\" event or invoke onShow the view.\n  Marionette.triggerMethodOn = function(context) {\n    var fnc = _.isFunction(context.triggerMethod) ?\n                  context.triggerMethod :\n                  Marionette.triggerMethod;\n\n    return fnc.apply(context, _.rest(arguments));\n  };\n\n  // DOM Refresh\n  // -----------\n\n  // Monitor a view's state, and after it has been rendered and shown\n  // in the DOM, trigger a \"dom:refresh\" event every time it is\n  // re-rendered.\n\n  Marionette.MonitorDOMRefresh = function(view) {\n\n    // track when the view has been shown in the DOM,\n    // using a Marionette.Region (or by other means of triggering \"show\")\n    function handleShow() {\n      view._isShown = true;\n      triggerDOMRefresh();\n    }\n\n    // track when the view has been rendered\n    function handleRender() {\n      view._isRendered = true;\n      triggerDOMRefresh();\n    }\n\n    // Trigger the \"dom:refresh\" event and corresponding \"onDomRefresh\" method\n    function triggerDOMRefresh() {\n      if (view._isShown && view._isRendered && Marionette.isNodeAttached(view.el)) {\n        if (_.isFunction(view.triggerMethod)) {\n          view.triggerMethod('dom:refresh');\n        }\n      }\n    }\n\n    view.on({\n      show: handleShow,\n      render: handleRender\n    });\n  };\n\n  /* jshint maxparams: 5 */\n\n  // Bind Entity Events & Unbind Entity Events\n  // -----------------------------------------\n  //\n  // These methods are used to bind/unbind a backbone \"entity\" (e.g. collection/model)\n  // to methods on a target object.\n  //\n  // The first parameter, `target`, must have the Backbone.Events module mixed in.\n  //\n  // The second parameter is the `entity` (Backbone.Model, Backbone.Collection or\n  // any object that has Backbone.Events mixed in) to bind the events from.\n  //\n  // The third parameter is a hash of { \"event:name\": \"eventHandler\" }\n  // configuration. Multiple handlers can be separated by a space. A\n  // function can be supplied instead of a string handler name.\n\n  (function(Marionette) {\n    'use strict';\n\n    // Bind the event to handlers specified as a string of\n    // handler names on the target object\n    function bindFromStrings(target, entity, evt, methods) {\n      var methodNames = methods.split(/\\s+/);\n\n      _.each(methodNames, function(methodName) {\n\n        var method = target[methodName];\n        if (!method) {\n          throw new Marionette.Error('Method \"' + methodName +\n            '\" was configured as an event handler, but does not exist.');\n        }\n\n        target.listenTo(entity, evt, method);\n      });\n    }\n\n    // Bind the event to a supplied callback function\n    function bindToFunction(target, entity, evt, method) {\n      target.listenTo(entity, evt, method);\n    }\n\n    // Bind the event to handlers specified as a string of\n    // handler names on the target object\n    function unbindFromStrings(target, entity, evt, methods) {\n      var methodNames = methods.split(/\\s+/);\n\n      _.each(methodNames, function(methodName) {\n        var method = target[methodName];\n        target.stopListening(entity, evt, method);\n      });\n    }\n\n    // Bind the event to a supplied callback function\n    function unbindToFunction(target, entity, evt, method) {\n      target.stopListening(entity, evt, method);\n    }\n\n\n    // generic looping function\n    function iterateEvents(target, entity, bindings, functionCallback, stringCallback) {\n      if (!entity || !bindings) { return; }\n\n      // type-check bindings\n      if (!_.isObject(bindings)) {\n        throw new Marionette.Error({\n          message: 'Bindings must be an object or function.',\n          url: 'marionette.functions.html#marionettebindentityevents'\n        });\n      }\n\n      // allow the bindings to be a function\n      bindings = Marionette._getValue(bindings, target);\n\n      // iterate the bindings and bind them\n      _.each(bindings, function(methods, evt) {\n\n        // allow for a function as the handler,\n        // or a list of event names as a string\n        if (_.isFunction(methods)) {\n          functionCallback(target, entity, evt, methods);\n        } else {\n          stringCallback(target, entity, evt, methods);\n        }\n\n      });\n    }\n\n    // Export Public API\n    Marionette.bindEntityEvents = function(target, entity, bindings) {\n      iterateEvents(target, entity, bindings, bindToFunction, bindFromStrings);\n    };\n\n    Marionette.unbindEntityEvents = function(target, entity, bindings) {\n      iterateEvents(target, entity, bindings, unbindToFunction, unbindFromStrings);\n    };\n\n    // Proxy `bindEntityEvents`\n    Marionette.proxyBindEntityEvents = function(entity, bindings) {\n      return Marionette.bindEntityEvents(this, entity, bindings);\n    };\n\n    // Proxy `unbindEntityEvents`\n    Marionette.proxyUnbindEntityEvents = function(entity, bindings) {\n      return Marionette.unbindEntityEvents(this, entity, bindings);\n    };\n  })(Marionette);\n\n\n  // Error\n  // -----\n\n  var errorProps = ['description', 'fileName', 'lineNumber', 'name', 'message', 'number'];\n\n  Marionette.Error = Marionette.extend.call(Error, {\n    urlRoot: 'http://marionettejs.com/docs/v' + Marionette.VERSION + '/',\n\n    constructor: function(message, options) {\n      if (_.isObject(message)) {\n        options = message;\n        message = options.message;\n      } else if (!options) {\n        options = {};\n      }\n\n      var error = Error.call(this, message);\n      _.extend(this, _.pick(error, errorProps), _.pick(options, errorProps));\n\n      this.captureStackTrace();\n\n      if (options.url) {\n        this.url = this.urlRoot + options.url;\n      }\n    },\n\n    captureStackTrace: function() {\n      if (Error.captureStackTrace) {\n        Error.captureStackTrace(this, Marionette.Error);\n      }\n    },\n\n    toString: function() {\n      return this.name + ': ' + this.message + (this.url ? ' See: ' + this.url : '');\n    }\n  });\n\n  Marionette.Error.extend = Marionette.extend;\n\n  // Callbacks\n  // ---------\n\n  // A simple way of managing a collection of callbacks\n  // and executing them at a later point in time, using jQuery's\n  // `Deferred` object.\n  Marionette.Callbacks = function() {\n    this._deferred = Marionette.Deferred();\n    this._callbacks = [];\n  };\n\n  _.extend(Marionette.Callbacks.prototype, {\n\n    // Add a callback to be executed. Callbacks added here are\n    // guaranteed to execute, even if they are added after the\n    // `run` method is called.\n    add: function(callback, contextOverride) {\n      var promise = _.result(this._deferred, 'promise');\n\n      this._callbacks.push({cb: callback, ctx: contextOverride});\n\n      promise.then(function(args) {\n        if (contextOverride){ args.context = contextOverride; }\n        callback.call(args.context, args.options);\n      });\n    },\n\n    // Run all registered callbacks with the context specified.\n    // Additional callbacks can be added after this has been run\n    // and they will still be executed.\n    run: function(options, context) {\n      this._deferred.resolve({\n        options: options,\n        context: context\n      });\n    },\n\n    // Resets the list of callbacks to be run, allowing the same list\n    // to be run multiple times - whenever the `run` method is called.\n    reset: function() {\n      var callbacks = this._callbacks;\n      this._deferred = Marionette.Deferred();\n      this._callbacks = [];\n\n      _.each(callbacks, function(cb) {\n        this.add(cb.cb, cb.ctx);\n      }, this);\n    }\n  });\n\n  // Controller\n  // ----------\n\n  // A multi-purpose object to use as a controller for\n  // modules and routers, and as a mediator for workflow\n  // and coordination of other objects, views, and more.\n  Marionette.Controller = function(options) {\n    this.options = options || {};\n\n    if (_.isFunction(this.initialize)) {\n      this.initialize(this.options);\n    }\n  };\n\n  Marionette.Controller.extend = Marionette.extend;\n\n  // Controller Methods\n  // --------------\n\n  // Ensure it can trigger events with Backbone.Events\n  _.extend(Marionette.Controller.prototype, Backbone.Events, {\n    destroy: function() {\n      Marionette._triggerMethod(this, 'before:destroy', arguments);\n      Marionette._triggerMethod(this, 'destroy', arguments);\n\n      this.stopListening();\n      this.off();\n      return this;\n    },\n\n    // import the `triggerMethod` to trigger events with corresponding\n    // methods if the method exists\n    triggerMethod: Marionette.triggerMethod,\n\n    // Proxy `getOption` to enable getting options from this or this.options by name.\n    getOption: Marionette.proxyGetOption\n\n  });\n\n  // Object\n  // ------\n\n  // A Base Class that other Classes should descend from.\n  // Object borrows many conventions and utilities from Backbone.\n  Marionette.Object = function(options) {\n    this.options = _.extend({}, _.result(this, 'options'), options);\n\n    this.initialize.apply(this, arguments);\n  };\n\n  Marionette.Object.extend = Marionette.extend;\n\n  // Object Methods\n  // --------------\n\n  // Ensure it can trigger events with Backbone.Events\n  _.extend(Marionette.Object.prototype, Backbone.Events, {\n\n    //this is a noop method intended to be overridden by classes that extend from this base\n    initialize: function() {},\n\n    destroy: function() {\n      this.triggerMethod('before:destroy');\n      this.triggerMethod('destroy');\n      this.stopListening();\n    },\n\n    // Import the `triggerMethod` to trigger events with corresponding\n    // methods if the method exists\n    triggerMethod: Marionette.triggerMethod,\n\n    // Proxy `getOption` to enable getting options from this or this.options by name.\n    getOption: Marionette.proxyGetOption,\n\n    // Proxy `bindEntityEvents` to enable binding view's events from another entity.\n    bindEntityEvents: Marionette.proxyBindEntityEvents,\n\n    // Proxy `unbindEntityEvents` to enable unbinding view's events from another entity.\n    unbindEntityEvents: Marionette.proxyUnbindEntityEvents\n  });\n\n  /* jshint maxcomplexity: 16, maxstatements: 45, maxlen: 120 */\n\n  // Region\n  // ------\n\n  // Manage the visual regions of your composite application. See\n  // http://lostechies.com/derickbailey/2011/12/12/composite-js-apps-regions-and-region-managers/\n\n  Marionette.Region = Marionette.Object.extend({\n    constructor: function (options) {\n\n      // set options temporarily so that we can get `el`.\n      // options will be overriden by Object.constructor\n      this.options = options || {};\n      this.el = this.getOption('el');\n\n      // Handle when this.el is passed in as a $ wrapped element.\n      this.el = this.el instanceof Backbone.$ ? this.el[0] : this.el;\n\n      if (!this.el) {\n        throw new Marionette.Error({\n          name: 'NoElError',\n          message: 'An \"el\" must be specified for a region.'\n        });\n      }\n\n      this.$el = this.getEl(this.el);\n      Marionette.Object.call(this, options);\n    },\n\n    // Displays a backbone view instance inside of the region.\n    // Handles calling the `render` method for you. Reads content\n    // directly from the `el` attribute. Also calls an optional\n    // `onShow` and `onDestroy` method on your view, just after showing\n    // or just before destroying the view, respectively.\n    // The `preventDestroy` option can be used to prevent a view from\n    // the old view being destroyed on show.\n    // The `forceShow` option can be used to force a view to be\n    // re-rendered if it's already shown in the region.\n    show: function(view, options){\n      if (!this._ensureElement()) {\n        return;\n      }\n\n      this._ensureViewIsIntact(view);\n\n      var showOptions     = options || {};\n      var isDifferentView = view !== this.currentView;\n      var preventDestroy  = !!showOptions.preventDestroy;\n      var forceShow       = !!showOptions.forceShow;\n\n      // We are only changing the view if there is a current view to change to begin with\n      var isChangingView = !!this.currentView;\n\n      // Only destroy the current view if we don't want to `preventDestroy` and if\n      // the view given in the first argument is different than `currentView`\n      var _shouldDestroyView = isDifferentView && !preventDestroy;\n\n      // Only show the view given in the first argument if it is different than\n      // the current view or if we want to re-show the view. Note that if\n      // `_shouldDestroyView` is true, then `_shouldShowView` is also necessarily true.\n      var _shouldShowView = isDifferentView || forceShow;\n\n      if (isChangingView) {\n        this.triggerMethod('before:swapOut', this.currentView, this, options);\n      }\n\n      if (this.currentView) {\n        delete this.currentView._parent;\n      }\n\n      if (_shouldDestroyView) {\n        this.empty();\n\n      // A `destroy` event is attached to the clean up manually removed views.\n      // We need to detach this event when a new view is going to be shown as it\n      // is no longer relevant.\n      } else if (isChangingView && _shouldShowView) {\n        this.currentView.off('destroy', this.empty, this);\n      }\n\n      if (_shouldShowView) {\n\n        // We need to listen for if a view is destroyed\n        // in a way other than through the region.\n        // If this happens we need to remove the reference\n        // to the currentView since once a view has been destroyed\n        // we can not reuse it.\n        view.once('destroy', this.empty, this);\n        view.render();\n\n        view._parent = this;\n\n        if (isChangingView) {\n          this.triggerMethod('before:swap', view, this, options);\n        }\n\n        this.triggerMethod('before:show', view, this, options);\n        Marionette.triggerMethodOn(view, 'before:show', view, this, options);\n\n        if (isChangingView) {\n          this.triggerMethod('swapOut', this.currentView, this, options);\n        }\n\n        // An array of views that we're about to display\n        var attachedRegion = Marionette.isNodeAttached(this.el);\n\n        // The views that we're about to attach to the document\n        // It's important that we prevent _getNestedViews from being executed unnecessarily\n        // as it's a potentially-slow method\n        var displayedViews = [];\n\n        var triggerBeforeAttach = showOptions.triggerBeforeAttach || this.triggerBeforeAttach;\n        var triggerAttach = showOptions.triggerAttach || this.triggerAttach;\n\n        if (attachedRegion && triggerBeforeAttach) {\n          displayedViews = this._displayedViews(view);\n          this._triggerAttach(displayedViews, 'before:');\n        }\n\n        this.attachHtml(view);\n        this.currentView = view;\n\n        if (attachedRegion && triggerAttach) {\n          displayedViews = this._displayedViews(view);\n          this._triggerAttach(displayedViews);\n        }\n\n        if (isChangingView) {\n          this.triggerMethod('swap', view, this, options);\n        }\n\n        this.triggerMethod('show', view, this, options);\n        Marionette.triggerMethodOn(view, 'show', view, this, options);\n\n        return this;\n      }\n\n      return this;\n    },\n\n    triggerBeforeAttach: true,\n    triggerAttach: true,\n\n    _triggerAttach: function(views, prefix) {\n      var eventName = (prefix || '') + 'attach';\n      _.each(views, function(view) {\n        Marionette.triggerMethodOn(view, eventName, view, this);\n      }, this);\n    },\n\n    _displayedViews: function(view) {\n      return _.union([view], _.result(view, '_getNestedViews') || []);\n    },\n\n    _ensureElement: function(){\n      if (!_.isObject(this.el)) {\n        this.$el = this.getEl(this.el);\n        this.el = this.$el[0];\n      }\n\n      if (!this.$el || this.$el.length === 0) {\n        if (this.getOption('allowMissingEl')) {\n          return false;\n        } else {\n          throw new Marionette.Error('An \"el\" ' + this.$el.selector + ' must exist in DOM');\n        }\n      }\n      return true;\n    },\n\n    _ensureViewIsIntact: function(view) {\n      if (!view) {\n        throw new Marionette.Error({\n          name: 'ViewNotValid',\n          message: 'The view passed is undefined and therefore invalid. You must pass a view instance to show.'\n        });\n      }\n\n      if (view.isDestroyed) {\n        throw new Marionette.Error({\n          name: 'ViewDestroyedError',\n          message: 'View (cid: \"' + view.cid + '\") has already been destroyed and cannot be used.'\n        });\n      }\n    },\n\n    // Override this method to change how the region finds the DOM\n    // element that it manages. Return a jQuery selector object scoped\n    // to a provided parent el or the document if none exists.\n    getEl: function(el) {\n      return Backbone.$(el, Marionette._getValue(this.options.parentEl, this));\n    },\n\n    // Override this method to change how the new view is\n    // appended to the `$el` that the region is managing\n    attachHtml: function(view) {\n      this.$el.contents().detach();\n\n      this.el.appendChild(view.el);\n    },\n\n    // Destroy the current view, if there is one. If there is no\n    // current view, it does nothing and returns immediately.\n    empty: function() {\n      var view = this.currentView;\n\n      // If there is no view in the region\n      // we should not remove anything\n      if (!view) { return; }\n\n      view.off('destroy', this.empty, this);\n      this.triggerMethod('before:empty', view);\n      this._destroyView();\n      this.triggerMethod('empty', view);\n\n      // Remove region pointer to the currentView\n      delete this.currentView;\n      return this;\n    },\n\n    // call 'destroy' or 'remove', depending on which is found\n    // on the view (if showing a raw Backbone view or a Marionette View)\n    _destroyView: function() {\n      var view = this.currentView;\n\n      if (view.destroy && !view.isDestroyed) {\n        view.destroy();\n      } else if (view.remove) {\n        view.remove();\n\n        // appending isDestroyed to raw Backbone View allows regions\n        // to throw a ViewDestroyedError for this view\n        view.isDestroyed = true;\n      }\n    },\n\n    // Attach an existing view to the region. This\n    // will not call `render` or `onShow` for the new view,\n    // and will not replace the current HTML for the `el`\n    // of the region.\n    attachView: function(view) {\n      this.currentView = view;\n      return this;\n    },\n\n    // Checks whether a view is currently present within\n    // the region. Returns `true` if there is and `false` if\n    // no view is present.\n    hasView: function() {\n      return !!this.currentView;\n    },\n\n    // Reset the region by destroying any existing view and\n    // clearing out the cached `$el`. The next time a view\n    // is shown via this region, the region will re-query the\n    // DOM for the region's `el`.\n    reset: function() {\n      this.empty();\n\n      if (this.$el) {\n        this.el = this.$el.selector;\n      }\n\n      delete this.$el;\n      return this;\n    }\n\n  },\n\n  // Static Methods\n  {\n\n    // Build an instance of a region by passing in a configuration object\n    // and a default region class to use if none is specified in the config.\n    //\n    // The config object should either be a string as a jQuery DOM selector,\n    // a Region class directly, or an object literal that specifies a selector,\n    // a custom regionClass, and any options to be supplied to the region:\n    //\n    // ```js\n    // {\n    //   selector: \"#foo\",\n    //   regionClass: MyCustomRegion,\n    //   allowMissingEl: false\n    // }\n    // ```\n    //\n    buildRegion: function(regionConfig, DefaultRegionClass) {\n      if (_.isString(regionConfig)) {\n        return this._buildRegionFromSelector(regionConfig, DefaultRegionClass);\n      }\n\n      if (regionConfig.selector || regionConfig.el || regionConfig.regionClass) {\n        return this._buildRegionFromObject(regionConfig, DefaultRegionClass);\n      }\n\n      if (_.isFunction(regionConfig)) {\n        return this._buildRegionFromRegionClass(regionConfig);\n      }\n\n      throw new Marionette.Error({\n        message: 'Improper region configuration type.',\n        url: 'marionette.region.html#region-configuration-types'\n      });\n    },\n\n    // Build the region from a string selector like '#foo-region'\n    _buildRegionFromSelector: function(selector, DefaultRegionClass) {\n      return new DefaultRegionClass({ el: selector });\n    },\n\n    // Build the region from a configuration object\n    // ```js\n    // { selector: '#foo', regionClass: FooRegion, allowMissingEl: false }\n    // ```\n    _buildRegionFromObject: function(regionConfig, DefaultRegionClass) {\n      var RegionClass = regionConfig.regionClass || DefaultRegionClass;\n      var options = _.omit(regionConfig, 'selector', 'regionClass');\n\n      if (regionConfig.selector && !options.el) {\n        options.el = regionConfig.selector;\n      }\n\n      return new RegionClass(options);\n    },\n\n    // Build the region directly from a given `RegionClass`\n    _buildRegionFromRegionClass: function(RegionClass) {\n      return new RegionClass();\n    }\n  });\n\n  // Region Manager\n  // --------------\n\n  // Manage one or more related `Marionette.Region` objects.\n  Marionette.RegionManager = Marionette.Controller.extend({\n    constructor: function(options) {\n      this._regions = {};\n\n      Marionette.Controller.call(this, options);\n\n      this.addRegions(this.getOption('regions'));\n    },\n\n    // Add multiple regions using an object literal or a\n    // function that returns an object literal, where\n    // each key becomes the region name, and each value is\n    // the region definition.\n    addRegions: function(regionDefinitions, defaults) {\n      regionDefinitions = Marionette._getValue(regionDefinitions, this, arguments);\n\n      return _.reduce(regionDefinitions, function(regions, definition, name) {\n        if (_.isString(definition)) {\n          definition = {selector: definition};\n        }\n        if (definition.selector) {\n          definition = _.defaults({}, definition, defaults);\n        }\n\n        regions[name] = this.addRegion(name, definition);\n        return regions;\n      }, {}, this);\n    },\n\n    // Add an individual region to the region manager,\n    // and return the region instance\n    addRegion: function(name, definition) {\n      var region;\n\n      if (definition instanceof Marionette.Region) {\n        region = definition;\n      } else {\n        region = Marionette.Region.buildRegion(definition, Marionette.Region);\n      }\n\n      this.triggerMethod('before:add:region', name, region);\n\n      region._parent = this;\n      this._store(name, region);\n\n      this.triggerMethod('add:region', name, region);\n      return region;\n    },\n\n    // Get a region by name\n    get: function(name) {\n      return this._regions[name];\n    },\n\n    // Gets all the regions contained within\n    // the `regionManager` instance.\n    getRegions: function(){\n      return _.clone(this._regions);\n    },\n\n    // Remove a region by name\n    removeRegion: function(name) {\n      var region = this._regions[name];\n      this._remove(name, region);\n\n      return region;\n    },\n\n    // Empty all regions in the region manager, and\n    // remove them\n    removeRegions: function() {\n      var regions = this.getRegions();\n      _.each(this._regions, function(region, name) {\n        this._remove(name, region);\n      }, this);\n\n      return regions;\n    },\n\n    // Empty all regions in the region manager, but\n    // leave them attached\n    emptyRegions: function() {\n      var regions = this.getRegions();\n      _.invoke(regions, 'empty');\n      return regions;\n    },\n\n    // Destroy all regions and shut down the region\n    // manager entirely\n    destroy: function() {\n      this.removeRegions();\n      return Marionette.Controller.prototype.destroy.apply(this, arguments);\n    },\n\n    // internal method to store regions\n    _store: function(name, region) {\n      this._regions[name] = region;\n      this._setLength();\n    },\n\n    // internal method to remove a region\n    _remove: function(name, region) {\n      this.triggerMethod('before:remove:region', name, region);\n      region.empty();\n      region.stopListening();\n\n      delete region._parent;\n      delete this._regions[name];\n      this._setLength();\n      this.triggerMethod('remove:region', name, region);\n    },\n\n    // set the number of regions current held\n    _setLength: function() {\n      this.length = _.size(this._regions);\n    }\n  });\n\n  Marionette.actAsCollection(Marionette.RegionManager.prototype, '_regions');\n\n\n  // Template Cache\n  // --------------\n\n  // Manage templates stored in `<script>` blocks,\n  // caching them for faster access.\n  Marionette.TemplateCache = function(templateId) {\n    this.templateId = templateId;\n  };\n\n  // TemplateCache object-level methods. Manage the template\n  // caches from these method calls instead of creating\n  // your own TemplateCache instances\n  _.extend(Marionette.TemplateCache, {\n    templateCaches: {},\n\n    // Get the specified template by id. Either\n    // retrieves the cached version, or loads it\n    // from the DOM.\n    get: function(templateId) {\n      var cachedTemplate = this.templateCaches[templateId];\n\n      if (!cachedTemplate) {\n        cachedTemplate = new Marionette.TemplateCache(templateId);\n        this.templateCaches[templateId] = cachedTemplate;\n      }\n\n      return cachedTemplate.load();\n    },\n\n    // Clear templates from the cache. If no arguments\n    // are specified, clears all templates:\n    // `clear()`\n    //\n    // If arguments are specified, clears each of the\n    // specified templates from the cache:\n    // `clear(\"#t1\", \"#t2\", \"...\")`\n    clear: function() {\n      var i;\n      var args = _.toArray(arguments);\n      var length = args.length;\n\n      if (length > 0) {\n        for (i = 0; i < length; i++) {\n          delete this.templateCaches[args[i]];\n        }\n      } else {\n        this.templateCaches = {};\n      }\n    }\n  });\n\n  // TemplateCache instance methods, allowing each\n  // template cache object to manage its own state\n  // and know whether or not it has been loaded\n  _.extend(Marionette.TemplateCache.prototype, {\n\n    // Internal method to load the template\n    load: function() {\n      // Guard clause to prevent loading this template more than once\n      if (this.compiledTemplate) {\n        return this.compiledTemplate;\n      }\n\n      // Load the template and compile it\n      var template = this.loadTemplate(this.templateId);\n      this.compiledTemplate = this.compileTemplate(template);\n\n      return this.compiledTemplate;\n    },\n\n    // Load a template from the DOM, by default. Override\n    // this method to provide your own template retrieval\n    // For asynchronous loading with AMD/RequireJS, consider\n    // using a template-loader plugin as described here:\n    // https://github.com/marionettejs/backbone.marionette/wiki/Using-marionette-with-requirejs\n    loadTemplate: function(templateId) {\n      var template = Backbone.$(templateId).html();\n\n      if (!template || template.length === 0) {\n        throw new Marionette.Error({\n          name: 'NoTemplateError',\n          message: 'Could not find template: \"' + templateId + '\"'\n        });\n      }\n\n      return template;\n    },\n\n    // Pre-compile the template before caching it. Override\n    // this method if you do not need to pre-compile a template\n    // (JST / RequireJS for example) or if you want to change\n    // the template engine used (Handebars, etc).\n    compileTemplate: function(rawTemplate) {\n      return _.template(rawTemplate);\n    }\n  });\n\n  // Renderer\n  // --------\n\n  // Render a template with data by passing in the template\n  // selector and the data to render.\n  Marionette.Renderer = {\n\n    // Render a template with data. The `template` parameter is\n    // passed to the `TemplateCache` object to retrieve the\n    // template function. Override this method to provide your own\n    // custom rendering and template handling for all of Marionette.\n    render: function(template, data) {\n      if (!template) {\n        throw new Marionette.Error({\n          name: 'TemplateNotFoundError',\n          message: 'Cannot render the template since its false, null or undefined.'\n        });\n      }\n\n      var templateFunc = _.isFunction(template) ? template : Marionette.TemplateCache.get(template);\n\n      return templateFunc(data);\n    }\n  };\n\n\n  /* jshint maxlen: 114, nonew: false */\n  // View\n  // ----\n\n  // The core view class that other Marionette views extend from.\n  Marionette.View = Backbone.View.extend({\n    isDestroyed: false,\n\n    constructor: function(options) {\n      _.bindAll(this, 'render');\n\n      options = Marionette._getValue(options, this);\n\n      // this exposes view options to the view initializer\n      // this is a backfill since backbone removed the assignment\n      // of this.options\n      // at some point however this may be removed\n      this.options = _.extend({}, _.result(this, 'options'), options);\n\n      this._behaviors = Marionette.Behaviors(this);\n\n      Backbone.View.apply(this, arguments);\n\n      Marionette.MonitorDOMRefresh(this);\n      this.on('show', this.onShowCalled);\n    },\n\n    // Get the template for this view\n    // instance. You can set a `template` attribute in the view\n    // definition or pass a `template: \"whatever\"` parameter in\n    // to the constructor options.\n    getTemplate: function() {\n      return this.getOption('template');\n    },\n\n    // Serialize a model by returning its attributes. Clones\n    // the attributes to allow modification.\n    serializeModel: function(model){\n      return model.toJSON.apply(model, _.rest(arguments));\n    },\n\n    // Mix in template helper methods. Looks for a\n    // `templateHelpers` attribute, which can either be an\n    // object literal, or a function that returns an object\n    // literal. All methods and attributes from this object\n    // are copies to the object passed in.\n    mixinTemplateHelpers: function(target) {\n      target = target || {};\n      var templateHelpers = this.getOption('templateHelpers');\n      templateHelpers = Marionette._getValue(templateHelpers, this);\n      return _.extend(target, templateHelpers);\n    },\n\n    // normalize the keys of passed hash with the views `ui` selectors.\n    // `{\"@ui.foo\": \"bar\"}`\n    normalizeUIKeys: function(hash) {\n      var uiBindings = _.result(this, '_uiBindings');\n      return Marionette.normalizeUIKeys(hash, uiBindings || _.result(this, 'ui'));\n    },\n\n    // normalize the values of passed hash with the views `ui` selectors.\n    // `{foo: \"@ui.bar\"}`\n    normalizeUIValues: function(hash) {\n      var ui = _.result(this, 'ui');\n      var uiBindings = _.result(this, '_uiBindings');\n      return Marionette.normalizeUIValues(hash, uiBindings || ui);\n    },\n\n    // Configure `triggers` to forward DOM events to view\n    // events. `triggers: {\"click .foo\": \"do:foo\"}`\n    configureTriggers: function() {\n      if (!this.triggers) { return; }\n\n      // Allow `triggers` to be configured as a function\n      var triggers = this.normalizeUIKeys(_.result(this, 'triggers'));\n\n      // Configure the triggers, prevent default\n      // action and stop propagation of DOM events\n      return _.reduce(triggers, function(events, value, key) {\n        events[key] = this._buildViewTrigger(value);\n        return events;\n      }, {}, this);\n    },\n\n    // Overriding Backbone.View's delegateEvents to handle\n    // the `triggers`, `modelEvents`, and `collectionEvents` configuration\n    delegateEvents: function(events) {\n      this._delegateDOMEvents(events);\n      this.bindEntityEvents(this.model, this.getOption('modelEvents'));\n      this.bindEntityEvents(this.collection, this.getOption('collectionEvents'));\n\n      _.each(this._behaviors, function(behavior) {\n        behavior.bindEntityEvents(this.model, behavior.getOption('modelEvents'));\n        behavior.bindEntityEvents(this.collection, behavior.getOption('collectionEvents'));\n      }, this);\n\n      return this;\n    },\n\n    // internal method to delegate DOM events and triggers\n    _delegateDOMEvents: function(eventsArg) {\n      var events = Marionette._getValue(eventsArg || this.events, this);\n\n      // normalize ui keys\n      events = this.normalizeUIKeys(events);\n      if(_.isUndefined(eventsArg)) {this.events = events;}\n\n      var combinedEvents = {};\n\n      // look up if this view has behavior events\n      var behaviorEvents = _.result(this, 'behaviorEvents') || {};\n      var triggers = this.configureTriggers();\n      var behaviorTriggers = _.result(this, 'behaviorTriggers') || {};\n\n      // behavior events will be overriden by view events and or triggers\n      _.extend(combinedEvents, behaviorEvents, events, triggers, behaviorTriggers);\n\n      Backbone.View.prototype.delegateEvents.call(this, combinedEvents);\n    },\n\n    // Overriding Backbone.View's undelegateEvents to handle unbinding\n    // the `triggers`, `modelEvents`, and `collectionEvents` config\n    undelegateEvents: function() {\n      Backbone.View.prototype.undelegateEvents.apply(this, arguments);\n\n      this.unbindEntityEvents(this.model, this.getOption('modelEvents'));\n      this.unbindEntityEvents(this.collection, this.getOption('collectionEvents'));\n\n      _.each(this._behaviors, function(behavior) {\n        behavior.unbindEntityEvents(this.model, behavior.getOption('modelEvents'));\n        behavior.unbindEntityEvents(this.collection, behavior.getOption('collectionEvents'));\n      }, this);\n\n      return this;\n    },\n\n    // Internal method, handles the `show` event.\n    onShowCalled: function() {},\n\n    // Internal helper method to verify whether the view hasn't been destroyed\n    _ensureViewIsIntact: function() {\n      if (this.isDestroyed) {\n        throw new Marionette.Error({\n          name: 'ViewDestroyedError',\n          message: 'View (cid: \"' + this.cid + '\") has already been destroyed and cannot be used.'\n        });\n      }\n    },\n\n    // Default `destroy` implementation, for removing a view from the\n    // DOM and unbinding it. Regions will call this method\n    // for you. You can specify an `onDestroy` method in your view to\n    // add custom code that is called after the view is destroyed.\n    destroy: function() {\n      if (this.isDestroyed) { return; }\n\n      var args = _.toArray(arguments);\n\n      this.triggerMethod.apply(this, ['before:destroy'].concat(args));\n\n      // mark as destroyed before doing the actual destroy, to\n      // prevent infinite loops within \"destroy\" event handlers\n      // that are trying to destroy other views\n      this.isDestroyed = true;\n      this.triggerMethod.apply(this, ['destroy'].concat(args));\n\n      // unbind UI elements\n      this.unbindUIElements();\n\n      // remove the view from the DOM\n      this.remove();\n\n      // Call destroy on each behavior after\n      // destroying the view.\n      // This unbinds event listeners\n      // that behaviors have registered for.\n      _.invoke(this._behaviors, 'destroy', args);\n\n      return this;\n    },\n\n    bindUIElements: function() {\n      this._bindUIElements();\n      _.invoke(this._behaviors, this._bindUIElements);\n    },\n\n    // This method binds the elements specified in the \"ui\" hash inside the view's code with\n    // the associated jQuery selectors.\n    _bindUIElements: function() {\n      if (!this.ui) { return; }\n\n      // store the ui hash in _uiBindings so they can be reset later\n      // and so re-rendering the view will be able to find the bindings\n      if (!this._uiBindings) {\n        this._uiBindings = this.ui;\n      }\n\n      // get the bindings result, as a function or otherwise\n      var bindings = _.result(this, '_uiBindings');\n\n      // empty the ui so we don't have anything to start with\n      this.ui = {};\n\n      // bind each of the selectors\n      _.each(bindings, function(selector, key) {\n        this.ui[key] = this.$(selector);\n      }, this);\n    },\n\n    // This method unbinds the elements specified in the \"ui\" hash\n    unbindUIElements: function() {\n      this._unbindUIElements();\n      _.invoke(this._behaviors, this._unbindUIElements);\n    },\n\n    _unbindUIElements: function() {\n      if (!this.ui || !this._uiBindings) { return; }\n\n      // delete all of the existing ui bindings\n      _.each(this.ui, function($el, name) {\n        delete this.ui[name];\n      }, this);\n\n      // reset the ui element to the original bindings configuration\n      this.ui = this._uiBindings;\n      delete this._uiBindings;\n    },\n\n    // Internal method to create an event handler for a given `triggerDef` like\n    // 'click:foo'\n    _buildViewTrigger: function(triggerDef) {\n      var hasOptions = _.isObject(triggerDef);\n\n      var options = _.defaults({}, (hasOptions ? triggerDef : {}), {\n        preventDefault: true,\n        stopPropagation: true\n      });\n\n      var eventName = hasOptions ? options.event : triggerDef;\n\n      return function(e) {\n        if (e) {\n          if (e.preventDefault && options.preventDefault) {\n            e.preventDefault();\n          }\n\n          if (e.stopPropagation && options.stopPropagation) {\n            e.stopPropagation();\n          }\n        }\n\n        var args = {\n          view: this,\n          model: this.model,\n          collection: this.collection\n        };\n\n        this.triggerMethod(eventName, args);\n      };\n    },\n\n    setElement: function() {\n      var ret = Backbone.View.prototype.setElement.apply(this, arguments);\n\n      // proxy behavior $el to the view's $el.\n      // This is needed because a view's $el proxy\n      // is not set until after setElement is called.\n      _.invoke(this._behaviors, 'proxyViewProperties', this);\n\n      return ret;\n    },\n\n    // import the `triggerMethod` to trigger events with corresponding\n    // methods if the method exists\n    triggerMethod: function() {\n      var triggerMethod = Marionette._triggerMethod;\n      var ret = triggerMethod(this, arguments);\n      var behaviors = this._behaviors;\n      // Use good ol' for as this is a very hot function\n      for (var i = 0, length = behaviors && behaviors.length; i < length; i++) {\n        triggerMethod(behaviors[i], arguments);\n      }\n\n      return ret;\n    },\n\n    // This method returns any views that are immediate\n    // children of this view\n    _getImmediateChildren: function() {\n      return [];\n    },\n\n    // Returns an array of every nested view within this view\n    _getNestedViews: function() {\n      var children = this._getImmediateChildren();\n\n      if (!children.length) { return children; }\n\n      return _.reduce(children, function(memo, view) {\n        if (!view._getNestedViews) { return memo; }\n        return memo.concat(view._getNestedViews());\n      }, children);\n    },\n\n    // Imports the \"normalizeMethods\" to transform hashes of\n    // events=>function references/names to a hash of events=>function references\n    normalizeMethods: Marionette.normalizeMethods,\n\n    // Proxy `getOption` to enable getting options from this or this.options by name.\n    getOption: Marionette.proxyGetOption,\n\n    // Proxy `bindEntityEvents` to enable binding view's events from another entity.\n    bindEntityEvents: Marionette.proxyBindEntityEvents,\n\n    // Proxy `unbindEntityEvents` to enable unbinding view's events from another entity.\n    unbindEntityEvents: Marionette.proxyUnbindEntityEvents\n  });\n\n  // Item View\n  // ---------\n\n  // A single item view implementation that contains code for rendering\n  // with underscore.js templates, serializing the view's model or collection,\n  // and calling several methods on extended views, such as `onRender`.\n  Marionette.ItemView = Marionette.View.extend({\n\n    // Setting up the inheritance chain which allows changes to\n    // Marionette.View.prototype.constructor which allows overriding\n    constructor: function() {\n      Marionette.View.apply(this, arguments);\n    },\n\n    // Serialize the model or collection for the view. If a model is\n    // found, the view's `serializeModel` is called. If a collection is found,\n    // each model in the collection is serialized by calling\n    // the view's `serializeCollection` and put into an `items` array in\n    // the resulting data. If both are found, defaults to the model.\n    // You can override the `serializeData` method in your own view definition,\n    // to provide custom serialization for your view's data.\n    serializeData: function(){\n      if (!this.model && !this.collection) {\n        return {};\n      }\n\n      var args = [this.model || this.collection];\n      if (arguments.length) {\n        args.push.apply(args, arguments);\n      }\n\n      if (this.model) {\n        return this.serializeModel.apply(this, args);\n      } else {\n        return {\n          items: this.serializeCollection.apply(this, args)\n        };\n      }\n    },\n\n    // Serialize a collection by serializing each of its models.\n    serializeCollection: function(collection){\n      return collection.toJSON.apply(collection, _.rest(arguments));\n    },\n\n    // Render the view, defaulting to underscore.js templates.\n    // You can override this in your view definition to provide\n    // a very specific rendering for your view. In general, though,\n    // you should override the `Marionette.Renderer` object to\n    // change how Marionette renders views.\n    render: function() {\n      this._ensureViewIsIntact();\n\n      this.triggerMethod('before:render', this);\n\n      this._renderTemplate();\n      this.bindUIElements();\n\n      this.triggerMethod('render', this);\n\n      return this;\n    },\n\n    // Internal method to render the template with the serialized data\n    // and template helpers via the `Marionette.Renderer` object.\n    // Throws an `UndefinedTemplateError` error if the template is\n    // any falsely value but literal `false`.\n    _renderTemplate: function() {\n      var template = this.getTemplate();\n\n      // Allow template-less item views\n      if (template === false) {\n        return;\n      }\n\n      if (!template) {\n        throw new Marionette.Error({\n          name: 'UndefinedTemplateError',\n          message: 'Cannot render the template since it is null or undefined.'\n        });\n      }\n\n      // Add in entity data and template helpers\n      var data = this.serializeData();\n      data = this.mixinTemplateHelpers(data);\n\n      // Render and add to el\n      var html = Marionette.Renderer.render(template, data, this);\n      this.attachElContent(html);\n\n      return this;\n    },\n\n    // Attaches the content of a given view.\n    // This method can be overridden to optimize rendering,\n    // or to render in a non standard way.\n    //\n    // For example, using `innerHTML` instead of `$el.html`\n    //\n    // ```js\n    // attachElContent: function(html) {\n    //   this.el.innerHTML = html;\n    //   return this;\n    // }\n    // ```\n    attachElContent: function(html) {\n      this.$el.html(html);\n\n      return this;\n    }\n  });\n\n  /* jshint maxstatements: 14 */\n\n  // Collection View\n  // ---------------\n\n  // A view that iterates over a Backbone.Collection\n  // and renders an individual child view for each model.\n  Marionette.CollectionView = Marionette.View.extend({\n\n    // used as the prefix for child view events\n    // that are forwarded through the collectionview\n    childViewEventPrefix: 'childview',\n\n    // constructor\n    // option to pass `{sort: false}` to prevent the `CollectionView` from\n    // maintaining the sorted order of the collection.\n    // This will fallback onto appending childView's to the end.\n    constructor: function(options){\n      var initOptions = options || {};\n      if (_.isUndefined(this.sort)){\n        this.sort = _.isUndefined(initOptions.sort) ? true : initOptions.sort;\n      }\n\n      this.once('render', this._initialEvents);\n      this._initChildViewStorage();\n\n      Marionette.View.apply(this, arguments);\n\n      this.initRenderBuffer();\n    },\n\n    // Instead of inserting elements one by one into the page,\n    // it's much more performant to insert elements into a document\n    // fragment and then insert that document fragment into the page\n    initRenderBuffer: function() {\n      this.elBuffer = document.createDocumentFragment();\n      this._bufferedChildren = [];\n    },\n\n    startBuffering: function() {\n      this.initRenderBuffer();\n      this.isBuffering = true;\n    },\n\n    endBuffering: function() {\n      this.isBuffering = false;\n      this._triggerBeforeShowBufferedChildren();\n      this.attachBuffer(this, this.elBuffer);\n      this._triggerShowBufferedChildren();\n      this.initRenderBuffer();\n    },\n\n    _triggerBeforeShowBufferedChildren: function() {\n      if (this._isShown) {\n        _.each(this._bufferedChildren, _.partial(this._triggerMethodOnChild, 'before:show'));\n      }\n    },\n\n    _triggerShowBufferedChildren: function() {\n      if (this._isShown) {\n        _.each(this._bufferedChildren, _.partial(this._triggerMethodOnChild, 'show'));\n\n        this._bufferedChildren = [];\n      }\n    },\n\n    // Internal method for _.each loops to call `Marionette.triggerMethodOn` on\n    // a child view\n    _triggerMethodOnChild: function(event, childView) {\n      Marionette.triggerMethodOn(childView, event);\n    },\n\n    // Configured the initial events that the collection view\n    // binds to.\n    _initialEvents: function() {\n      if (this.collection) {\n        this.listenTo(this.collection, 'add', this._onCollectionAdd);\n        this.listenTo(this.collection, 'remove', this._onCollectionRemove);\n        this.listenTo(this.collection, 'reset', this.render);\n\n        if (this.sort) {\n          this.listenTo(this.collection, 'sort', this._sortViews);\n        }\n      }\n    },\n\n    // Handle a child added to the collection\n    _onCollectionAdd: function(child) {\n      this.destroyEmptyView();\n      var ChildView = this.getChildView(child);\n      var index = this.collection.indexOf(child);\n      this.addChild(child, ChildView, index);\n    },\n\n    // get the child view by model it holds, and remove it\n    _onCollectionRemove: function(model) {\n      var view = this.children.findByModel(model);\n      this.removeChildView(view);\n      this.checkEmpty();\n    },\n\n    // Override from `Marionette.View` to trigger show on child views\n    onShowCalled: function() {\n      this.children.each(_.partial(this._triggerMethodOnChild, 'show'));\n    },\n\n    // Render children views. Override this method to\n    // provide your own implementation of a render function for\n    // the collection view.\n    render: function() {\n      this._ensureViewIsIntact();\n      this.triggerMethod('before:render', this);\n      this._renderChildren();\n      this.triggerMethod('render', this);\n      return this;\n    },\n\n    // Render view after sorting. Override this method to\n    // change how the view renders after a `sort` on the collection.\n    // An example of this would be to only `renderChildren` in a `CompositeView`\n    // rather than the full view.\n    resortView: function() {\n      this.render();\n    },\n\n    // Internal method. This checks for any changes in the order of the collection.\n    // If the index of any view doesn't match, it will render.\n    _sortViews: function() {\n      // check for any changes in sort order of views\n      var orderChanged = this.collection.find(function(item, index){\n        var view = this.children.findByModel(item);\n        return !view || view._index !== index;\n      }, this);\n\n      if (orderChanged) {\n        this.resortView();\n      }\n    },\n\n    // Internal reference to what index a `emptyView` is.\n    _emptyViewIndex: -1,\n\n    // Internal method. Separated so that CompositeView can have\n    // more control over events being triggered, around the rendering\n    // process\n    _renderChildren: function() {\n      this.destroyEmptyView();\n      this.destroyChildren();\n\n      if (this.isEmpty(this.collection)) {\n        this.showEmptyView();\n      } else {\n        this.triggerMethod('before:render:collection', this);\n        this.startBuffering();\n        this.showCollection();\n        this.endBuffering();\n        this.triggerMethod('render:collection', this);\n      }\n    },\n\n    // Internal method to loop through collection and show each child view.\n    showCollection: function() {\n      var ChildView;\n      this.collection.each(function(child, index) {\n        ChildView = this.getChildView(child);\n        this.addChild(child, ChildView, index);\n      }, this);\n    },\n\n    // Internal method to show an empty view in place of\n    // a collection of child views, when the collection is empty\n    showEmptyView: function() {\n      var EmptyView = this.getEmptyView();\n\n      if (EmptyView && !this._showingEmptyView) {\n        this.triggerMethod('before:render:empty');\n\n        this._showingEmptyView = true;\n        var model = new Backbone.Model();\n        this.addEmptyView(model, EmptyView);\n\n        this.triggerMethod('render:empty');\n      }\n    },\n\n    // Internal method to destroy an existing emptyView instance\n    // if one exists. Called when a collection view has been\n    // rendered empty, and then a child is added to the collection.\n    destroyEmptyView: function() {\n      if (this._showingEmptyView) {\n        this.triggerMethod('before:remove:empty');\n\n        this.destroyChildren();\n        delete this._showingEmptyView;\n\n        this.triggerMethod('remove:empty');\n      }\n    },\n\n    // Retrieve the empty view class\n    getEmptyView: function() {\n      return this.getOption('emptyView');\n    },\n\n    // Render and show the emptyView. Similar to addChild method\n    // but \"add:child\" events are not fired, and the event from\n    // emptyView are not forwarded\n    addEmptyView: function(child, EmptyView) {\n\n      // get the emptyViewOptions, falling back to childViewOptions\n      var emptyViewOptions = this.getOption('emptyViewOptions') ||\n                            this.getOption('childViewOptions');\n\n      if (_.isFunction(emptyViewOptions)){\n        emptyViewOptions = emptyViewOptions.call(this, child, this._emptyViewIndex);\n      }\n\n      // build the empty view\n      var view = this.buildChildView(child, EmptyView, emptyViewOptions);\n\n      view._parent = this;\n\n      // Proxy emptyView events\n      this.proxyChildEvents(view);\n\n      // trigger the 'before:show' event on `view` if the collection view\n      // has already been shown\n      if (this._isShown) {\n        Marionette.triggerMethodOn(view, 'before:show');\n      }\n\n      // Store the `emptyView` like a `childView` so we can properly\n      // remove and/or close it later\n      this.children.add(view);\n\n      // Render it and show it\n      this.renderChildView(view, this._emptyViewIndex);\n\n      // call the 'show' method if the collection view\n      // has already been shown\n      if (this._isShown) {\n        Marionette.triggerMethodOn(view, 'show');\n      }\n    },\n\n    // Retrieve the `childView` class, either from `this.options.childView`\n    // or from the `childView` in the object definition. The \"options\"\n    // takes precedence.\n    // This method receives the model that will be passed to the instance\n    // created from this `childView`. Overriding methods may use the child\n    // to determine what `childView` class to return.\n    getChildView: function(child) {\n      var childView = this.getOption('childView');\n\n      if (!childView) {\n        throw new Marionette.Error({\n          name: 'NoChildViewError',\n          message: 'A \"childView\" must be specified'\n        });\n      }\n\n      return childView;\n    },\n\n    // Render the child's view and add it to the\n    // HTML for the collection view at a given index.\n    // This will also update the indices of later views in the collection\n    // in order to keep the children in sync with the collection.\n    addChild: function(child, ChildView, index) {\n      var childViewOptions = this.getOption('childViewOptions');\n      childViewOptions = Marionette._getValue(childViewOptions, this, [child, index]);\n\n      var view = this.buildChildView(child, ChildView, childViewOptions);\n\n      // increment indices of views after this one\n      this._updateIndices(view, true, index);\n\n      this._addChildView(view, index);\n\n      view._parent = this;\n\n      return view;\n    },\n\n    // Internal method. This decrements or increments the indices of views after the\n    // added/removed view to keep in sync with the collection.\n    _updateIndices: function(view, increment, index) {\n      if (!this.sort) {\n        return;\n      }\n\n      if (increment) {\n        // assign the index to the view\n        view._index = index;\n      }\n\n      // update the indexes of views after this one\n      this.children.each(function (laterView) {\n        if (laterView._index >= view._index) {\n          laterView._index += increment ? 1 : -1;\n        }\n      });\n    },\n\n\n    // Internal Method. Add the view to children and render it at\n    // the given index.\n    _addChildView: function(view, index) {\n      // set up the child view event forwarding\n      this.proxyChildEvents(view);\n\n      this.triggerMethod('before:add:child', view);\n\n      // Store the child view itself so we can properly\n      // remove and/or destroy it later\n      this.children.add(view);\n      this.renderChildView(view, index);\n\n      if (this._isShown && !this.isBuffering) {\n        Marionette.triggerMethodOn(view, 'show');\n      }\n\n      this.triggerMethod('add:child', view);\n    },\n\n    // render the child view\n    renderChildView: function(view, index) {\n      view.render();\n      this.attachHtml(this, view, index);\n      return view;\n    },\n\n    // Build a `childView` for a model in the collection.\n    buildChildView: function(child, ChildViewClass, childViewOptions) {\n      var options = _.extend({model: child}, childViewOptions);\n      return new ChildViewClass(options);\n    },\n\n    // Remove the child view and destroy it.\n    // This function also updates the indices of\n    // later views in the collection in order to keep\n    // the children in sync with the collection.\n    removeChildView: function(view) {\n\n      if (view) {\n        this.triggerMethod('before:remove:child', view);\n        // call 'destroy' or 'remove', depending on which is found\n        if (view.destroy) { view.destroy(); }\n        else if (view.remove) { view.remove(); }\n\n        delete view._parent;\n        this.stopListening(view);\n        this.children.remove(view);\n        this.triggerMethod('remove:child', view);\n\n        // decrement the index of views after this one\n        this._updateIndices(view, false);\n      }\n\n      return view;\n    },\n\n    // check if the collection is empty\n    isEmpty: function() {\n      return !this.collection || this.collection.length === 0;\n    },\n\n    // If empty, show the empty view\n    checkEmpty: function() {\n      if (this.isEmpty(this.collection)) {\n        this.showEmptyView();\n      }\n    },\n\n    // You might need to override this if you've overridden attachHtml\n    attachBuffer: function(collectionView, buffer) {\n      collectionView.$el.append(buffer);\n    },\n\n    // Append the HTML to the collection's `el`.\n    // Override this method to do something other\n    // than `.append`.\n    attachHtml: function(collectionView, childView, index) {\n      if (collectionView.isBuffering) {\n        // buffering happens on reset events and initial renders\n        // in order to reduce the number of inserts into the\n        // document, which are expensive.\n        collectionView.elBuffer.appendChild(childView.el);\n        collectionView._bufferedChildren.push(childView);\n      }\n      else {\n        // If we've already rendered the main collection, append\n        // the new child into the correct order if we need to. Otherwise\n        // append to the end.\n        if (!collectionView._insertBefore(childView, index)){\n          collectionView._insertAfter(childView);\n        }\n      }\n    },\n\n    // Internal method. Check whether we need to insert the view into\n    // the correct position.\n    _insertBefore: function(childView, index) {\n      var currentView;\n      var findPosition = this.sort && (index < this.children.length - 1);\n      if (findPosition) {\n        // Find the view after this one\n        currentView = this.children.find(function (view) {\n          return view._index === index + 1;\n        });\n      }\n\n      if (currentView) {\n        currentView.$el.before(childView.el);\n        return true;\n      }\n\n      return false;\n    },\n\n    // Internal method. Append a view to the end of the $el\n    _insertAfter: function(childView) {\n      this.$el.append(childView.el);\n    },\n\n    // Internal method to set up the `children` object for\n    // storing all of the child views\n    _initChildViewStorage: function() {\n      this.children = new Backbone.ChildViewContainer();\n    },\n\n    // Handle cleanup and other destroying needs for the collection of views\n    destroy: function() {\n      if (this.isDestroyed) { return; }\n\n      this.triggerMethod('before:destroy:collection');\n      this.destroyChildren();\n      this.triggerMethod('destroy:collection');\n\n      return Marionette.View.prototype.destroy.apply(this, arguments);\n    },\n\n    // Destroy the child views that this collection view\n    // is holding on to, if any\n    destroyChildren: function() {\n      var childViews = this.children.map(_.identity);\n      this.children.each(this.removeChildView, this);\n      this.checkEmpty();\n      return childViews;\n    },\n\n    // Set up the child view event forwarding. Uses a \"childview:\"\n    // prefix in front of all forwarded events.\n    proxyChildEvents: function(view) {\n      var prefix = this.getOption('childViewEventPrefix');\n\n      // Forward all child view events through the parent,\n      // prepending \"childview:\" to the event name\n      this.listenTo(view, 'all', function() {\n        var args = _.toArray(arguments);\n        var rootEvent = args[0];\n        var childEvents = this.normalizeMethods(_.result(this, 'childEvents'));\n\n        args[0] = prefix + ':' + rootEvent;\n        args.splice(1, 0, view);\n\n        // call collectionView childEvent if defined\n        if (typeof childEvents !== 'undefined' && _.isFunction(childEvents[rootEvent])) {\n          childEvents[rootEvent].apply(this, args.slice(1));\n        }\n\n        this.triggerMethod.apply(this, args);\n      }, this);\n    },\n\n    _getImmediateChildren: function() {\n      return _.values(this.children._views);\n    }\n  });\n\n  /* jshint maxstatements: 17, maxlen: 117 */\n\n  // Composite View\n  // --------------\n\n  // Used for rendering a branch-leaf, hierarchical structure.\n  // Extends directly from CollectionView and also renders an\n  // a child view as `modelView`, for the top leaf\n  Marionette.CompositeView = Marionette.CollectionView.extend({\n\n    // Setting up the inheritance chain which allows changes to\n    // Marionette.CollectionView.prototype.constructor which allows overriding\n    // option to pass '{sort: false}' to prevent the CompositeView from\n    // maintaining the sorted order of the collection.\n    // This will fallback onto appending childView's to the end.\n    constructor: function() {\n      Marionette.CollectionView.apply(this, arguments);\n    },\n\n    // Configured the initial events that the composite view\n    // binds to. Override this method to prevent the initial\n    // events, or to add your own initial events.\n    _initialEvents: function() {\n\n      // Bind only after composite view is rendered to avoid adding child views\n      // to nonexistent childViewContainer\n\n      if (this.collection) {\n        this.listenTo(this.collection, 'add', this._onCollectionAdd);\n        this.listenTo(this.collection, 'remove', this._onCollectionRemove);\n        this.listenTo(this.collection, 'reset', this._renderChildren);\n\n        if (this.sort) {\n          this.listenTo(this.collection, 'sort', this._sortViews);\n        }\n      }\n    },\n\n    // Retrieve the `childView` to be used when rendering each of\n    // the items in the collection. The default is to return\n    // `this.childView` or Marionette.CompositeView if no `childView`\n    // has been defined\n    getChildView: function(child) {\n      var childView = this.getOption('childView') || this.constructor;\n\n      return childView;\n    },\n\n    // Serialize the model for the view.\n    // You can override the `serializeData` method in your own view\n    // definition, to provide custom serialization for your view's data.\n    serializeData: function() {\n      var data = {};\n\n      if (this.model){\n        data = _.partial(this.serializeModel, this.model).apply(this, arguments);\n      }\n\n      return data;\n    },\n\n    // Renders the model and the collection.\n    render: function() {\n      this._ensureViewIsIntact();\n      this.isRendered = true;\n      this.resetChildViewContainer();\n\n      this.triggerMethod('before:render', this);\n\n      this._renderTemplate();\n      this._renderChildren();\n\n      this.triggerMethod('render', this);\n      return this;\n    },\n\n    _renderChildren: function() {\n      if (this.isRendered) {\n        Marionette.CollectionView.prototype._renderChildren.call(this);\n      }\n    },\n\n    // Render the root template that the children\n    // views are appended to\n    _renderTemplate: function() {\n      var data = {};\n      data = this.serializeData();\n      data = this.mixinTemplateHelpers(data);\n\n      this.triggerMethod('before:render:template');\n\n      var template = this.getTemplate();\n      var html = Marionette.Renderer.render(template, data, this);\n      this.attachElContent(html);\n\n      // the ui bindings is done here and not at the end of render since they\n      // will not be available until after the model is rendered, but should be\n      // available before the collection is rendered.\n      this.bindUIElements();\n      this.triggerMethod('render:template');\n    },\n\n    // Attaches the content of the root.\n    // This method can be overridden to optimize rendering,\n    // or to render in a non standard way.\n    //\n    // For example, using `innerHTML` instead of `$el.html`\n    //\n    // ```js\n    // attachElContent: function(html) {\n    //   this.el.innerHTML = html;\n    //   return this;\n    // }\n    // ```\n    attachElContent: function(html) {\n      this.$el.html(html);\n\n      return this;\n    },\n\n    // You might need to override this if you've overridden attachHtml\n    attachBuffer: function(compositeView, buffer) {\n      var $container = this.getChildViewContainer(compositeView);\n      $container.append(buffer);\n    },\n\n    // Internal method. Append a view to the end of the $el.\n    // Overidden from CollectionView to ensure view is appended to\n    // childViewContainer\n    _insertAfter: function (childView) {\n      var $container = this.getChildViewContainer(this, childView);\n      $container.append(childView.el);\n    },\n\n    // Internal method to ensure an `$childViewContainer` exists, for the\n    // `attachHtml` method to use.\n    getChildViewContainer: function(containerView, childView) {\n      if ('$childViewContainer' in containerView) {\n        return containerView.$childViewContainer;\n      }\n\n      var container;\n      var childViewContainer = Marionette.getOption(containerView, 'childViewContainer');\n      if (childViewContainer) {\n\n        var selector = Marionette._getValue(childViewContainer, containerView);\n\n        if (selector.charAt(0) === '@' && containerView.ui) {\n          container = containerView.ui[selector.substr(4)];\n        } else {\n          container = containerView.$(selector);\n        }\n\n        if (container.length <= 0) {\n          throw new Marionette.Error({\n            name: 'ChildViewContainerMissingError',\n            message: 'The specified \"childViewContainer\" was not found: ' + containerView.childViewContainer\n          });\n        }\n\n      } else {\n        container = containerView.$el;\n      }\n\n      containerView.$childViewContainer = container;\n      return container;\n    },\n\n    // Internal method to reset the `$childViewContainer` on render\n    resetChildViewContainer: function() {\n      if (this.$childViewContainer) {\n        delete this.$childViewContainer;\n      }\n    }\n  });\n\n  // Layout View\n  // -----------\n\n  // Used for managing application layoutViews, nested layoutViews and\n  // multiple regions within an application or sub-application.\n  //\n  // A specialized view class that renders an area of HTML and then\n  // attaches `Region` instances to the specified `regions`.\n  // Used for composite view management and sub-application areas.\n  Marionette.LayoutView = Marionette.ItemView.extend({\n    regionClass: Marionette.Region,\n\n    // Ensure the regions are available when the `initialize` method\n    // is called.\n    constructor: function(options) {\n      options = options || {};\n\n      this._firstRender = true;\n      this._initializeRegions(options);\n\n      Marionette.ItemView.call(this, options);\n    },\n\n    // LayoutView's render will use the existing region objects the\n    // first time it is called. Subsequent calls will destroy the\n    // views that the regions are showing and then reset the `el`\n    // for the regions to the newly rendered DOM elements.\n    render: function() {\n      this._ensureViewIsIntact();\n\n      if (this._firstRender) {\n        // if this is the first render, don't do anything to\n        // reset the regions\n        this._firstRender = false;\n      } else {\n        // If this is not the first render call, then we need to\n        // re-initialize the `el` for each region\n        this._reInitializeRegions();\n      }\n\n      return Marionette.ItemView.prototype.render.apply(this, arguments);\n    },\n\n    // Handle destroying regions, and then destroy the view itself.\n    destroy: function() {\n      if (this.isDestroyed) { return this; }\n\n      this.regionManager.destroy();\n      return Marionette.ItemView.prototype.destroy.apply(this, arguments);\n    },\n\n    // Add a single region, by name, to the layoutView\n    addRegion: function(name, definition) {\n      var regions = {};\n      regions[name] = definition;\n      return this._buildRegions(regions)[name];\n    },\n\n    // Add multiple regions as a {name: definition, name2: def2} object literal\n    addRegions: function(regions) {\n      this.regions = _.extend({}, this.regions, regions);\n      return this._buildRegions(regions);\n    },\n\n    // Remove a single region from the LayoutView, by name\n    removeRegion: function(name) {\n      delete this.regions[name];\n      return this.regionManager.removeRegion(name);\n    },\n\n    // Provides alternative access to regions\n    // Accepts the region name\n    // getRegion('main')\n    getRegion: function(region) {\n      return this.regionManager.get(region);\n    },\n\n    // Get all regions\n    getRegions: function(){\n      return this.regionManager.getRegions();\n    },\n\n    // internal method to build regions\n    _buildRegions: function(regions) {\n      var defaults = {\n        regionClass: this.getOption('regionClass'),\n        parentEl: _.partial(_.result, this, 'el')\n      };\n\n      return this.regionManager.addRegions(regions, defaults);\n    },\n\n    // Internal method to initialize the regions that have been defined in a\n    // `regions` attribute on this layoutView.\n    _initializeRegions: function(options) {\n      var regions;\n      this._initRegionManager();\n\n      regions = Marionette._getValue(this.regions, this, [options]) || {};\n\n      // Enable users to define `regions` as instance options.\n      var regionOptions = this.getOption.call(options, 'regions');\n\n      // enable region options to be a function\n      regionOptions = Marionette._getValue(regionOptions, this, [options]);\n\n      _.extend(regions, regionOptions);\n\n      // Normalize region selectors hash to allow\n      // a user to use the @ui. syntax.\n      regions = this.normalizeUIValues(regions);\n\n      this.addRegions(regions);\n    },\n\n    // Internal method to re-initialize all of the regions by updating the `el` that\n    // they point to\n    _reInitializeRegions: function() {\n      this.regionManager.invoke('reset');\n    },\n\n    // Enable easy overriding of the default `RegionManager`\n    // for customized region interactions and business specific\n    // view logic for better control over single regions.\n    getRegionManager: function() {\n      return new Marionette.RegionManager();\n    },\n\n    // Internal method to initialize the region manager\n    // and all regions in it\n    _initRegionManager: function() {\n      this.regionManager = this.getRegionManager();\n      this.regionManager._parent = this;\n\n      this.listenTo(this.regionManager, 'before:add:region', function(name) {\n        this.triggerMethod('before:add:region', name);\n      });\n\n      this.listenTo(this.regionManager, 'add:region', function(name, region) {\n        this[name] = region;\n        this.triggerMethod('add:region', name, region);\n      });\n\n      this.listenTo(this.regionManager, 'before:remove:region', function(name) {\n        this.triggerMethod('before:remove:region', name);\n      });\n\n      this.listenTo(this.regionManager, 'remove:region', function(name, region) {\n        delete this[name];\n        this.triggerMethod('remove:region', name, region);\n      });\n    },\n\n    _getImmediateChildren: function() {\n      return _.chain(this.regionManager.getRegions())\n        .pluck('currentView')\n        .compact()\n        .value();\n    }\n  });\n\n\n  // Behavior\n  // --------\n\n  // A Behavior is an isolated set of DOM /\n  // user interactions that can be mixed into any View.\n  // Behaviors allow you to blackbox View specific interactions\n  // into portable logical chunks, keeping your views simple and your code DRY.\n\n  Marionette.Behavior = Marionette.Object.extend({\n    constructor: function(options, view) {\n      // Setup reference to the view.\n      // this comes in handle when a behavior\n      // wants to directly talk up the chain\n      // to the view.\n      this.view = view;\n      this.defaults = _.result(this, 'defaults') || {};\n      this.options  = _.extend({}, this.defaults, options);\n\n      Marionette.Object.apply(this, arguments);\n    },\n\n    // proxy behavior $ method to the view\n    // this is useful for doing jquery DOM lookups\n    // scoped to behaviors view.\n    $: function() {\n      return this.view.$.apply(this.view, arguments);\n    },\n\n    // Stops the behavior from listening to events.\n    // Overrides Object#destroy to prevent additional events from being triggered.\n    destroy: function() {\n      this.stopListening();\n    },\n\n    proxyViewProperties: function (view) {\n      this.$el = view.$el;\n      this.el = view.el;\n    }\n  });\n\n  /* jshint maxlen: 143 */\n  // Behaviors\n  // ---------\n\n  // Behaviors is a utility class that takes care of\n  // gluing your behavior instances to their given View.\n  // The most important part of this class is that you\n  // **MUST** override the class level behaviorsLookup\n  // method for things to work properly.\n\n  Marionette.Behaviors = (function(Marionette, _) {\n    // Borrow event splitter from Backbone\n    var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n    function Behaviors(view, behaviors) {\n\n      if (!_.isObject(view.behaviors)) {\n        return {};\n      }\n\n      // Behaviors defined on a view can be a flat object literal\n      // or it can be a function that returns an object.\n      behaviors = Behaviors.parseBehaviors(view, behaviors || _.result(view, 'behaviors'));\n\n      // Wraps several of the view's methods\n      // calling the methods first on each behavior\n      // and then eventually calling the method on the view.\n      Behaviors.wrap(view, behaviors, _.keys(methods));\n      return behaviors;\n    }\n\n    var methods = {\n      behaviorTriggers: function(behaviorTriggers, behaviors) {\n        var triggerBuilder = new BehaviorTriggersBuilder(this, behaviors);\n        return triggerBuilder.buildBehaviorTriggers();\n      },\n\n      behaviorEvents: function(behaviorEvents, behaviors) {\n        var _behaviorsEvents = {};\n        var viewUI = this._uiBindings || _.result(this, 'ui');\n\n        _.each(behaviors, function(b, i) {\n          var _events = {};\n          var behaviorEvents = _.clone(_.result(b, 'events')) || {};\n          var behaviorUI = b._uiBindings || _.result(b, 'ui');\n\n          // Construct an internal UI hash first using\n          // the views UI hash and then the behaviors UI hash.\n          // This allows the user to use UI hash elements\n          // defined in the parent view as well as those\n          // defined in the given behavior.\n          var ui = _.extend({}, viewUI, behaviorUI);\n\n          // Normalize behavior events hash to allow\n          // a user to use the @ui. syntax.\n          behaviorEvents = Marionette.normalizeUIKeys(behaviorEvents, ui);\n\n          var j = 0;\n          _.each(behaviorEvents, function(behaviour, key) {\n            var match     = key.match(delegateEventSplitter);\n\n            // Set event name to be namespaced using the view cid,\n            // the behavior index, and the behavior event index\n            // to generate a non colliding event namespace\n            // http://api.jquery.com/event.namespace/\n            var eventName = match[1] + '.' + [this.cid, i, j++, ' '].join(''),\n                selector  = match[2];\n\n            var eventKey  = eventName + selector;\n            var handler   = _.isFunction(behaviour) ? behaviour : b[behaviour];\n\n            _events[eventKey] = _.bind(handler, b);\n          }, this);\n\n          _behaviorsEvents = _.extend(_behaviorsEvents, _events);\n        }, this);\n\n        return _behaviorsEvents;\n      }\n    };\n\n    _.extend(Behaviors, {\n\n      // Placeholder method to be extended by the user.\n      // The method should define the object that stores the behaviors.\n      // i.e.\n      //\n      // ```js\n      // Marionette.Behaviors.behaviorsLookup: function() {\n      //   return App.Behaviors\n      // }\n      // ```\n      behaviorsLookup: function() {\n        throw new Marionette.Error({\n          message: 'You must define where your behaviors are stored.',\n          url: 'marionette.behaviors.html#behaviorslookup'\n        });\n      },\n\n      // Takes care of getting the behavior class\n      // given options and a key.\n      // If a user passes in options.behaviorClass\n      // default to using that. Otherwise delegate\n      // the lookup to the users `behaviorsLookup` implementation.\n      getBehaviorClass: function(options, key) {\n        if (options.behaviorClass) {\n          return options.behaviorClass;\n        }\n\n        // Get behavior class can be either a flat object or a method\n        return Marionette._getValue(Behaviors.behaviorsLookup, this, [options, key])[key];\n      },\n\n      // Iterate over the behaviors object, for each behavior\n      // instantiate it and get its grouped behaviors.\n      parseBehaviors: function(view, behaviors) {\n        return _.chain(behaviors).map(function(options, key) {\n          var BehaviorClass = Behaviors.getBehaviorClass(options, key);\n\n          var behavior = new BehaviorClass(options, view);\n          var nestedBehaviors = Behaviors.parseBehaviors(view, _.result(behavior, 'behaviors'));\n\n          return [behavior].concat(nestedBehaviors);\n        }).flatten().value();\n      },\n\n      // Wrap view internal methods so that they delegate to behaviors. For example,\n      // `onDestroy` should trigger destroy on all of the behaviors and then destroy itself.\n      // i.e.\n      //\n      // `view.delegateEvents = _.partial(methods.delegateEvents, view.delegateEvents, behaviors);`\n      wrap: function(view, behaviors, methodNames) {\n        _.each(methodNames, function(methodName) {\n          view[methodName] = _.partial(methods[methodName], view[methodName], behaviors);\n        });\n      }\n    });\n\n    // Class to build handlers for `triggers` on behaviors\n    // for views\n    function BehaviorTriggersBuilder(view, behaviors) {\n      this._view      = view;\n      this._viewUI    = _.result(view, 'ui');\n      this._behaviors = behaviors;\n      this._triggers  = {};\n    }\n\n    _.extend(BehaviorTriggersBuilder.prototype, {\n      // Main method to build the triggers hash with event keys and handlers\n      buildBehaviorTriggers: function() {\n        _.each(this._behaviors, this._buildTriggerHandlersForBehavior, this);\n        return this._triggers;\n      },\n\n      // Internal method to build all trigger handlers for a given behavior\n      _buildTriggerHandlersForBehavior: function(behavior, i) {\n        var ui = _.extend({}, this._viewUI, _.result(behavior, 'ui'));\n        var triggersHash = _.clone(_.result(behavior, 'triggers')) || {};\n\n        triggersHash = Marionette.normalizeUIKeys(triggersHash, ui);\n\n        _.each(triggersHash, _.bind(this._setHandlerForBehavior, this, behavior, i));\n      },\n\n      // Internal method to create and assign the trigger handler for a given\n      // behavior\n      _setHandlerForBehavior: function(behavior, i, eventName, trigger) {\n        // Unique identifier for the `this._triggers` hash\n        var triggerKey = trigger.replace(/^\\S+/, function(triggerName) {\n          return triggerName + '.' + 'behaviortriggers' + i;\n        });\n\n        this._triggers[triggerKey] = this._view._buildViewTrigger(eventName);\n      }\n    });\n\n    return Behaviors;\n\n  })(Marionette, _);\n\n\n  // App Router\n  // ----------\n\n  // Reduce the boilerplate code of handling route events\n  // and then calling a single method on another object.\n  // Have your routers configured to call the method on\n  // your object, directly.\n  //\n  // Configure an AppRouter with `appRoutes`.\n  //\n  // App routers can only take one `controller` object.\n  // It is recommended that you divide your controller\n  // objects in to smaller pieces of related functionality\n  // and have multiple routers / controllers, instead of\n  // just one giant router and controller.\n  //\n  // You can also add standard routes to an AppRouter.\n\n  Marionette.AppRouter = Backbone.Router.extend({\n\n    constructor: function(options) {\n      this.options = options || {};\n\n      Backbone.Router.apply(this, arguments);\n\n      var appRoutes = this.getOption('appRoutes');\n      var controller = this._getController();\n      this.processAppRoutes(controller, appRoutes);\n      this.on('route', this._processOnRoute, this);\n    },\n\n    // Similar to route method on a Backbone Router but\n    // method is called on the controller\n    appRoute: function(route, methodName) {\n      var controller = this._getController();\n      this._addAppRoute(controller, route, methodName);\n    },\n\n    // process the route event and trigger the onRoute\n    // method call, if it exists\n    _processOnRoute: function(routeName, routeArgs) {\n      // make sure an onRoute before trying to call it\n      if (_.isFunction(this.onRoute)) {\n        // find the path that matches the current route\n        var routePath = _.invert(this.getOption('appRoutes'))[routeName];\n        this.onRoute(routeName, routePath, routeArgs);\n      }\n    },\n\n    // Internal method to process the `appRoutes` for the\n    // router, and turn them in to routes that trigger the\n    // specified method on the specified `controller`.\n    processAppRoutes: function(controller, appRoutes) {\n      if (!appRoutes) { return; }\n\n      var routeNames = _.keys(appRoutes).reverse(); // Backbone requires reverted order of routes\n\n      _.each(routeNames, function(route) {\n        this._addAppRoute(controller, route, appRoutes[route]);\n      }, this);\n    },\n\n    _getController: function() {\n      return this.getOption('controller');\n    },\n\n    _addAppRoute: function(controller, route, methodName) {\n      var method = controller[methodName];\n\n      if (!method) {\n        throw new Marionette.Error('Method \"' + methodName + '\" was not found on the controller');\n      }\n\n      this.route(route, methodName, _.bind(method, controller));\n    },\n\n    // Proxy `getOption` to enable getting options from this or this.options by name.\n    getOption: Marionette.proxyGetOption,\n\n    triggerMethod: Marionette.triggerMethod,\n\n    bindEntityEvents: Marionette.proxyBindEntityEvents,\n\n    unbindEntityEvents: Marionette.proxyUnbindEntityEvents\n  });\n\n  // Application\n  // -----------\n\n  // Contain and manage the composite application as a whole.\n  // Stores and starts up `Region` objects, includes an\n  // event aggregator as `app.vent`\n  Marionette.Application = Marionette.Object.extend({\n    constructor: function(options) {\n      this._initializeRegions(options);\n      this._initCallbacks = new Marionette.Callbacks();\n      this.submodules = {};\n      _.extend(this, options);\n      this._initChannel();\n      Marionette.Object.call(this, options);\n    },\n\n    // Command execution, facilitated by Backbone.Wreqr.Commands\n    execute: function() {\n      this.commands.execute.apply(this.commands, arguments);\n    },\n\n    // Request/response, facilitated by Backbone.Wreqr.RequestResponse\n    request: function() {\n      return this.reqres.request.apply(this.reqres, arguments);\n    },\n\n    // Add an initializer that is either run at when the `start`\n    // method is called, or run immediately if added after `start`\n    // has already been called.\n    addInitializer: function(initializer) {\n      this._initCallbacks.add(initializer);\n    },\n\n    // kick off all of the application's processes.\n    // initializes all of the regions that have been added\n    // to the app, and runs all of the initializer functions\n    start: function(options) {\n      this.triggerMethod('before:start', options);\n      this._initCallbacks.run(options, this);\n      this.triggerMethod('start', options);\n    },\n\n    // Add regions to your app.\n    // Accepts a hash of named strings or Region objects\n    // addRegions({something: \"#someRegion\"})\n    // addRegions({something: Region.extend({el: \"#someRegion\"}) });\n    addRegions: function(regions) {\n      return this._regionManager.addRegions(regions);\n    },\n\n    // Empty all regions in the app, without removing them\n    emptyRegions: function() {\n      return this._regionManager.emptyRegions();\n    },\n\n    // Removes a region from your app, by name\n    // Accepts the regions name\n    // removeRegion('myRegion')\n    removeRegion: function(region) {\n      return this._regionManager.removeRegion(region);\n    },\n\n    // Provides alternative access to regions\n    // Accepts the region name\n    // getRegion('main')\n    getRegion: function(region) {\n      return this._regionManager.get(region);\n    },\n\n    // Get all the regions from the region manager\n    getRegions: function(){\n      return this._regionManager.getRegions();\n    },\n\n    // Create a module, attached to the application\n    module: function(moduleNames, moduleDefinition) {\n\n      // Overwrite the module class if the user specifies one\n      var ModuleClass = Marionette.Module.getClass(moduleDefinition);\n\n      var args = _.toArray(arguments);\n      args.unshift(this);\n\n      // see the Marionette.Module object for more information\n      return ModuleClass.create.apply(ModuleClass, args);\n    },\n\n    // Enable easy overriding of the default `RegionManager`\n    // for customized region interactions and business-specific\n    // view logic for better control over single regions.\n    getRegionManager: function() {\n      return new Marionette.RegionManager();\n    },\n\n    // Internal method to initialize the regions that have been defined in a\n    // `regions` attribute on the application instance\n    _initializeRegions: function(options) {\n      var regions = _.isFunction(this.regions) ? this.regions(options) : this.regions || {};\n\n      this._initRegionManager();\n\n      // Enable users to define `regions` in instance options.\n      var optionRegions = Marionette.getOption(options, 'regions');\n\n      // Enable region options to be a function\n      if (_.isFunction(optionRegions)) {\n        optionRegions = optionRegions.call(this, options);\n      }\n\n      // Overwrite current regions with those passed in options\n      _.extend(regions, optionRegions);\n\n      this.addRegions(regions);\n\n      return this;\n    },\n\n    // Internal method to set up the region manager\n    _initRegionManager: function() {\n      this._regionManager = this.getRegionManager();\n      this._regionManager._parent = this;\n\n      this.listenTo(this._regionManager, 'before:add:region', function() {\n        Marionette._triggerMethod(this, 'before:add:region', arguments);\n      });\n\n      this.listenTo(this._regionManager, 'add:region', function(name, region) {\n        this[name] = region;\n        Marionette._triggerMethod(this, 'add:region', arguments);\n      });\n\n      this.listenTo(this._regionManager, 'before:remove:region', function() {\n        Marionette._triggerMethod(this, 'before:remove:region', arguments);\n      });\n\n      this.listenTo(this._regionManager, 'remove:region', function(name) {\n        delete this[name];\n        Marionette._triggerMethod(this, 'remove:region', arguments);\n      });\n    },\n\n    // Internal method to setup the Wreqr.radio channel\n    _initChannel: function() {\n      this.channelName = _.result(this, 'channelName') || 'global';\n      this.channel = _.result(this, 'channel') || Backbone.Wreqr.radio.channel(this.channelName);\n      this.vent = _.result(this, 'vent') || this.channel.vent;\n      this.commands = _.result(this, 'commands') || this.channel.commands;\n      this.reqres = _.result(this, 'reqres') || this.channel.reqres;\n    }\n  });\n\n  /* jshint maxparams: 9 */\n\n  // Module\n  // ------\n\n  // A simple module system, used to create privacy and encapsulation in\n  // Marionette applications\n  Marionette.Module = function(moduleName, app, options) {\n    this.moduleName = moduleName;\n    this.options = _.extend({}, this.options, options);\n    // Allow for a user to overide the initialize\n    // for a given module instance.\n    this.initialize = options.initialize || this.initialize;\n\n    // Set up an internal store for sub-modules.\n    this.submodules = {};\n\n    this._setupInitializersAndFinalizers();\n\n    // Set an internal reference to the app\n    // within a module.\n    this.app = app;\n\n    if (_.isFunction(this.initialize)) {\n      this.initialize(moduleName, app, this.options);\n    }\n  };\n\n  Marionette.Module.extend = Marionette.extend;\n\n  // Extend the Module prototype with events / listenTo, so that the module\n  // can be used as an event aggregator or pub/sub.\n  _.extend(Marionette.Module.prototype, Backbone.Events, {\n\n    // By default modules start with their parents.\n    startWithParent: true,\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic when extending Marionette.Module.\n    initialize: function() {},\n\n    // Initializer for a specific module. Initializers are run when the\n    // module's `start` method is called.\n    addInitializer: function(callback) {\n      this._initializerCallbacks.add(callback);\n    },\n\n    // Finalizers are run when a module is stopped. They are used to teardown\n    // and finalize any variables, references, events and other code that the\n    // module had set up.\n    addFinalizer: function(callback) {\n      this._finalizerCallbacks.add(callback);\n    },\n\n    // Start the module, and run all of its initializers\n    start: function(options) {\n      // Prevent re-starting a module that is already started\n      if (this._isInitialized) { return; }\n\n      // start the sub-modules (depth-first hierarchy)\n      _.each(this.submodules, function(mod) {\n        // check to see if we should start the sub-module with this parent\n        if (mod.startWithParent) {\n          mod.start(options);\n        }\n      });\n\n      // run the callbacks to \"start\" the current module\n      this.triggerMethod('before:start', options);\n\n      this._initializerCallbacks.run(options, this);\n      this._isInitialized = true;\n\n      this.triggerMethod('start', options);\n    },\n\n    // Stop this module by running its finalizers and then stop all of\n    // the sub-modules for this module\n    stop: function() {\n      // if we are not initialized, don't bother finalizing\n      if (!this._isInitialized) { return; }\n      this._isInitialized = false;\n\n      this.triggerMethod('before:stop');\n\n      // stop the sub-modules; depth-first, to make sure the\n      // sub-modules are stopped / finalized before parents\n      _.invoke(this.submodules, 'stop');\n\n      // run the finalizers\n      this._finalizerCallbacks.run(undefined, this);\n\n      // reset the initializers and finalizers\n      this._initializerCallbacks.reset();\n      this._finalizerCallbacks.reset();\n\n      this.triggerMethod('stop');\n    },\n\n    // Configure the module with a definition function and any custom args\n    // that are to be passed in to the definition function\n    addDefinition: function(moduleDefinition, customArgs) {\n      this._runModuleDefinition(moduleDefinition, customArgs);\n    },\n\n    // Internal method: run the module definition function with the correct\n    // arguments\n    _runModuleDefinition: function(definition, customArgs) {\n      // If there is no definition short circut the method.\n      if (!definition) { return; }\n\n      // build the correct list of arguments for the module definition\n      var args = _.flatten([\n        this,\n        this.app,\n        Backbone,\n        Marionette,\n        Backbone.$, _,\n        customArgs\n      ]);\n\n      definition.apply(this, args);\n    },\n\n    // Internal method: set up new copies of initializers and finalizers.\n    // Calling this method will wipe out all existing initializers and\n    // finalizers.\n    _setupInitializersAndFinalizers: function() {\n      this._initializerCallbacks = new Marionette.Callbacks();\n      this._finalizerCallbacks = new Marionette.Callbacks();\n    },\n\n    // import the `triggerMethod` to trigger events with corresponding\n    // methods if the method exists\n    triggerMethod: Marionette.triggerMethod\n  });\n\n  // Class methods to create modules\n  _.extend(Marionette.Module, {\n\n    // Create a module, hanging off the app parameter as the parent object.\n    create: function(app, moduleNames, moduleDefinition) {\n      var module = app;\n\n      // get the custom args passed in after the module definition and\n      // get rid of the module name and definition function\n      var customArgs = _.rest(arguments, 3);\n\n      // Split the module names and get the number of submodules.\n      // i.e. an example module name of `Doge.Wow.Amaze` would\n      // then have the potential for 3 module definitions.\n      moduleNames = moduleNames.split('.');\n      var length = moduleNames.length;\n\n      // store the module definition for the last module in the chain\n      var moduleDefinitions = [];\n      moduleDefinitions[length - 1] = moduleDefinition;\n\n      // Loop through all the parts of the module definition\n      _.each(moduleNames, function(moduleName, i) {\n        var parentModule = module;\n        module = this._getModule(parentModule, moduleName, app, moduleDefinition);\n        this._addModuleDefinition(parentModule, module, moduleDefinitions[i], customArgs);\n      }, this);\n\n      // Return the last module in the definition chain\n      return module;\n    },\n\n    _getModule: function(parentModule, moduleName, app, def, args) {\n      var options = _.extend({}, def);\n      var ModuleClass = this.getClass(def);\n\n      // Get an existing module of this name if we have one\n      var module = parentModule[moduleName];\n\n      if (!module) {\n        // Create a new module if we don't have one\n        module = new ModuleClass(moduleName, app, options);\n        parentModule[moduleName] = module;\n        // store the module on the parent\n        parentModule.submodules[moduleName] = module;\n      }\n\n      return module;\n    },\n\n    // ## Module Classes\n    //\n    // Module classes can be used as an alternative to the define pattern.\n    // The extend function of a Module is identical to the extend functions\n    // on other Backbone and Marionette classes.\n    // This allows module lifecyle events like `onStart` and `onStop` to be called directly.\n    getClass: function(moduleDefinition) {\n      var ModuleClass = Marionette.Module;\n\n      if (!moduleDefinition) {\n        return ModuleClass;\n      }\n\n      // If all of the module's functionality is defined inside its class,\n      // then the class can be passed in directly. `MyApp.module(\"Foo\", FooModule)`.\n      if (moduleDefinition.prototype instanceof ModuleClass) {\n        return moduleDefinition;\n      }\n\n      return moduleDefinition.moduleClass || ModuleClass;\n    },\n\n    // Add the module definition and add a startWithParent initializer function.\n    // This is complicated because module definitions are heavily overloaded\n    // and support an anonymous function, module class, or options object\n    _addModuleDefinition: function(parentModule, module, def, args) {\n      var fn = this._getDefine(def);\n      var startWithParent = this._getStartWithParent(def, module);\n\n      if (fn) {\n        module.addDefinition(fn, args);\n      }\n\n      this._addStartWithParent(parentModule, module, startWithParent);\n    },\n\n    _getStartWithParent: function(def, module) {\n      var swp;\n\n      if (_.isFunction(def) && (def.prototype instanceof Marionette.Module)) {\n        swp = module.constructor.prototype.startWithParent;\n        return _.isUndefined(swp) ? true : swp;\n      }\n\n      if (_.isObject(def)) {\n        swp = def.startWithParent;\n        return _.isUndefined(swp) ? true : swp;\n      }\n\n      return true;\n    },\n\n    _getDefine: function(def) {\n      if (_.isFunction(def) && !(def.prototype instanceof Marionette.Module)) {\n        return def;\n      }\n\n      if (_.isObject(def)) {\n        return def.define;\n      }\n\n      return null;\n    },\n\n    _addStartWithParent: function(parentModule, module, startWithParent) {\n      module.startWithParent = module.startWithParent && startWithParent;\n\n      if (!module.startWithParent || !!module.startWithParentIsConfigured) {\n        return;\n      }\n\n      module.startWithParentIsConfigured = true;\n\n      parentModule.addInitializer(function(options) {\n        if (module.startWithParent) {\n          module.start(options);\n        }\n      });\n    }\n  });\n\n\n  return Marionette;\n}));\n","define('app',['backbone', 'marionette'], function(Backbone, Marionette){\n    var App = new Marionette.Application();\n\n    App.addRegions({\n        mainRegion: 'body'\n    });\n\n    App.on(\"start\", function(options){\n        if (Backbone.history){\n            Backbone.history.start();\n        }\n    });\n\n    return window.App = App;\n});\n","(function(root) {\ndefine(\"modernizr\", [], function() {\n  return (function() {\n/*!\n * Modernizr v2.8.3\n * www.modernizr.com\n *\n * Copyright (c) Faruk Ates, Paul Irish, Alex Sexton\n * Available under the BSD and MIT licenses: www.modernizr.com/license/\n */\n\n/*\n * Modernizr tests which native CSS3 and HTML5 features are available in\n * the current UA and makes the results available to you in two ways:\n * as properties on a global Modernizr object, and as classes on the\n * <html> element. This information allows you to progressively enhance\n * your pages with a granular level of control over the experience.\n *\n * Modernizr has an optional (not included) conditional resource loader\n * called Modernizr.load(), based on Yepnope.js (yepnopejs.com).\n * To get a build that includes Modernizr.load(), as well as choosing\n * which tests to include, go to www.modernizr.com/download/\n *\n * Authors        Faruk Ates, Paul Irish, Alex Sexton\n * Contributors   Ryan Seddon, Ben Alman\n */\n\nwindow.Modernizr = (function( window, document, undefined ) {\n\n    var version = '2.8.3',\n\n    Modernizr = {},\n\n    /*>>cssclasses*/\n    // option for enabling the HTML classes to be added\n    enableClasses = true,\n    /*>>cssclasses*/\n\n    docElement = document.documentElement,\n\n    /**\n     * Create our \"modernizr\" element that we do most feature tests on.\n     */\n    mod = 'modernizr',\n    modElem = document.createElement(mod),\n    mStyle = modElem.style,\n\n    /**\n     * Create the input element for various Web Forms feature tests.\n     */\n    inputElem /*>>inputelem*/ = document.createElement('input') /*>>inputelem*/ ,\n\n    /*>>smile*/\n    smile = ':)',\n    /*>>smile*/\n\n    toString = {}.toString,\n\n    // TODO :: make the prefixes more granular\n    /*>>prefixes*/\n    // List of property values to set for css tests. See ticket #21\n    prefixes = ' -webkit- -moz- -o- -ms- '.split(' '),\n    /*>>prefixes*/\n\n    /*>>domprefixes*/\n    // Following spec is to expose vendor-specific style properties as:\n    //   elem.style.WebkitBorderRadius\n    // and the following would be incorrect:\n    //   elem.style.webkitBorderRadius\n\n    // Webkit ghosts their properties in lowercase but Opera & Moz do not.\n    // Microsoft uses a lowercase `ms` instead of the correct `Ms` in IE8+\n    //   erik.eae.net/archives/2008/03/10/21.48.10/\n\n    // More here: github.com/Modernizr/Modernizr/issues/issue/21\n    omPrefixes = 'Webkit Moz O ms',\n\n    cssomPrefixes = omPrefixes.split(' '),\n\n    domPrefixes = omPrefixes.toLowerCase().split(' '),\n    /*>>domprefixes*/\n\n    /*>>ns*/\n    ns = {'svg': 'http://www.w3.org/2000/svg'},\n    /*>>ns*/\n\n    tests = {},\n    inputs = {},\n    attrs = {},\n\n    classes = [],\n\n    slice = classes.slice,\n\n    featureName, // used in testing loop\n\n\n    /*>>teststyles*/\n    // Inject element with style element and some CSS rules\n    injectElementWithStyles = function( rule, callback, nodes, testnames ) {\n\n      var style, ret, node, docOverflow,\n          div = document.createElement('div'),\n          // After page load injecting a fake body doesn't work so check if body exists\n          body = document.body,\n          // IE6 and 7 won't return offsetWidth or offsetHeight unless it's in the body element, so we fake it.\n          fakeBody = body || document.createElement('body');\n\n      if ( parseInt(nodes, 10) ) {\n          // In order not to give false positives we create a node for each test\n          // This also allows the method to scale for unspecified uses\n          while ( nodes-- ) {\n              node = document.createElement('div');\n              node.id = testnames ? testnames[nodes] : mod + (nodes + 1);\n              div.appendChild(node);\n          }\n      }\n\n      // <style> elements in IE6-9 are considered 'NoScope' elements and therefore will be removed\n      // when injected with innerHTML. To get around this you need to prepend the 'NoScope' element\n      // with a 'scoped' element, in our case the soft-hyphen entity as it won't mess with our measurements.\n      // msdn.microsoft.com/en-us/library/ms533897%28VS.85%29.aspx\n      // Documents served as xml will throw if using &shy; so use xml friendly encoded version. See issue #277\n      style = ['&#173;','<style id=\"s', mod, '\">', rule, '</style>'].join('');\n      div.id = mod;\n      // IE6 will false positive on some tests due to the style element inside the test div somehow interfering offsetHeight, so insert it into body or fakebody.\n      // Opera will act all quirky when injecting elements in documentElement when page is served as xml, needs fakebody too. #270\n      (body ? div : fakeBody).innerHTML += style;\n      fakeBody.appendChild(div);\n      if ( !body ) {\n          //avoid crashing IE8, if background image is used\n          fakeBody.style.background = '';\n          //Safari 5.13/5.1.4 OSX stops loading if ::-webkit-scrollbar is used and scrollbars are visible\n          fakeBody.style.overflow = 'hidden';\n          docOverflow = docElement.style.overflow;\n          docElement.style.overflow = 'hidden';\n          docElement.appendChild(fakeBody);\n      }\n\n      ret = callback(div, rule);\n      // If this is done after page load we don't want to remove the body so check if body exists\n      if ( !body ) {\n          fakeBody.parentNode.removeChild(fakeBody);\n          docElement.style.overflow = docOverflow;\n      } else {\n          div.parentNode.removeChild(div);\n      }\n\n      return !!ret;\n\n    },\n    /*>>teststyles*/\n\n    /*>>mq*/\n    // adapted from matchMedia polyfill\n    // by Scott Jehl and Paul Irish\n    // gist.github.com/786768\n    testMediaQuery = function( mq ) {\n\n      var matchMedia = window.matchMedia || window.msMatchMedia;\n      if ( matchMedia ) {\n        return matchMedia(mq) && matchMedia(mq).matches || false;\n      }\n\n      var bool;\n\n      injectElementWithStyles('@media ' + mq + ' { #' + mod + ' { position: absolute; } }', function( node ) {\n        bool = (window.getComputedStyle ?\n                  getComputedStyle(node, null) :\n                  node.currentStyle)['position'] == 'absolute';\n      });\n\n      return bool;\n\n     },\n     /*>>mq*/\n\n\n    /*>>hasevent*/\n    //\n    // isEventSupported determines if a given element supports the given event\n    // kangax.github.com/iseventsupported/\n    //\n    // The following results are known incorrects:\n    //   Modernizr.hasEvent(\"webkitTransitionEnd\", elem) // false negative\n    //   Modernizr.hasEvent(\"textInput\") // in Webkit. github.com/Modernizr/Modernizr/issues/333\n    //   ...\n    isEventSupported = (function() {\n\n      var TAGNAMES = {\n        'select': 'input', 'change': 'input',\n        'submit': 'form', 'reset': 'form',\n        'error': 'img', 'load': 'img', 'abort': 'img'\n      };\n\n      function isEventSupported( eventName, element ) {\n\n        element = element || document.createElement(TAGNAMES[eventName] || 'div');\n        eventName = 'on' + eventName;\n\n        // When using `setAttribute`, IE skips \"unload\", WebKit skips \"unload\" and \"resize\", whereas `in` \"catches\" those\n        var isSupported = eventName in element;\n\n        if ( !isSupported ) {\n          // If it has no `setAttribute` (i.e. doesn't implement Node interface), try generic element\n          if ( !element.setAttribute ) {\n            element = document.createElement('div');\n          }\n          if ( element.setAttribute && element.removeAttribute ) {\n            element.setAttribute(eventName, '');\n            isSupported = is(element[eventName], 'function');\n\n            // If property was created, \"remove it\" (by setting value to `undefined`)\n            if ( !is(element[eventName], 'undefined') ) {\n              element[eventName] = undefined;\n            }\n            element.removeAttribute(eventName);\n          }\n        }\n\n        element = null;\n        return isSupported;\n      }\n      return isEventSupported;\n    })(),\n    /*>>hasevent*/\n\n    // TODO :: Add flag for hasownprop ? didn't last time\n\n    // hasOwnProperty shim by kangax needed for Safari 2.0 support\n    _hasOwnProperty = ({}).hasOwnProperty, hasOwnProp;\n\n    if ( !is(_hasOwnProperty, 'undefined') && !is(_hasOwnProperty.call, 'undefined') ) {\n      hasOwnProp = function (object, property) {\n        return _hasOwnProperty.call(object, property);\n      };\n    }\n    else {\n      hasOwnProp = function (object, property) { /* yes, this can give false positives/negatives, but most of the time we don't care about those */\n        return ((property in object) && is(object.constructor.prototype[property], 'undefined'));\n      };\n    }\n\n    // Adapted from ES5-shim https://github.com/kriskowal/es5-shim/blob/master/es5-shim.js\n    // es5.github.com/#x15.3.4.5\n\n    if (!Function.prototype.bind) {\n      Function.prototype.bind = function bind(that) {\n\n        var target = this;\n\n        if (typeof target != \"function\") {\n            throw new TypeError();\n        }\n\n        var args = slice.call(arguments, 1),\n            bound = function () {\n\n            if (this instanceof bound) {\n\n              var F = function(){};\n              F.prototype = target.prototype;\n              var self = new F();\n\n              var result = target.apply(\n                  self,\n                  args.concat(slice.call(arguments))\n              );\n              if (Object(result) === result) {\n                  return result;\n              }\n              return self;\n\n            } else {\n\n              return target.apply(\n                  that,\n                  args.concat(slice.call(arguments))\n              );\n\n            }\n\n        };\n\n        return bound;\n      };\n    }\n\n    /**\n     * setCss applies given styles to the Modernizr DOM node.\n     */\n    function setCss( str ) {\n        mStyle.cssText = str;\n    }\n\n    /**\n     * setCssAll extrapolates all vendor-specific css strings.\n     */\n    function setCssAll( str1, str2 ) {\n        return setCss(prefixes.join(str1 + ';') + ( str2 || '' ));\n    }\n\n    /**\n     * is returns a boolean for if typeof obj is exactly type.\n     */\n    function is( obj, type ) {\n        return typeof obj === type;\n    }\n\n    /**\n     * contains returns a boolean for if substr is found within str.\n     */\n    function contains( str, substr ) {\n        return !!~('' + str).indexOf(substr);\n    }\n\n    /*>>testprop*/\n\n    // testProps is a generic CSS / DOM property test.\n\n    // In testing support for a given CSS property, it's legit to test:\n    //    `elem.style[styleName] !== undefined`\n    // If the property is supported it will return an empty string,\n    // if unsupported it will return undefined.\n\n    // We'll take advantage of this quick test and skip setting a style\n    // on our modernizr element, but instead just testing undefined vs\n    // empty string.\n\n    // Because the testing of the CSS property names (with \"-\", as\n    // opposed to the camelCase DOM properties) is non-portable and\n    // non-standard but works in WebKit and IE (but not Gecko or Opera),\n    // we explicitly reject properties with dashes so that authors\n    // developing in WebKit or IE first don't end up with\n    // browser-specific content by accident.\n\n    function testProps( props, prefixed ) {\n        for ( var i in props ) {\n            var prop = props[i];\n            if ( !contains(prop, \"-\") && mStyle[prop] !== undefined ) {\n                return prefixed == 'pfx' ? prop : true;\n            }\n        }\n        return false;\n    }\n    /*>>testprop*/\n\n    // TODO :: add testDOMProps\n    /**\n     * testDOMProps is a generic DOM property test; if a browser supports\n     *   a certain property, it won't return undefined for it.\n     */\n    function testDOMProps( props, obj, elem ) {\n        for ( var i in props ) {\n            var item = obj[props[i]];\n            if ( item !== undefined) {\n\n                // return the property name as a string\n                if (elem === false) return props[i];\n\n                // let's bind a function\n                if (is(item, 'function')){\n                  // default to autobind unless override\n                  return item.bind(elem || obj);\n                }\n\n                // return the unbound function or obj or value\n                return item;\n            }\n        }\n        return false;\n    }\n\n    /*>>testallprops*/\n    /**\n     * testPropsAll tests a list of DOM properties we want to check against.\n     *   We specify literally ALL possible (known and/or likely) properties on\n     *   the element including the non-vendor prefixed one, for forward-\n     *   compatibility.\n     */\n    function testPropsAll( prop, prefixed, elem ) {\n\n        var ucProp  = prop.charAt(0).toUpperCase() + prop.slice(1),\n            props   = (prop + ' ' + cssomPrefixes.join(ucProp + ' ') + ucProp).split(' ');\n\n        // did they call .prefixed('boxSizing') or are we just testing a prop?\n        if(is(prefixed, \"string\") || is(prefixed, \"undefined\")) {\n          return testProps(props, prefixed);\n\n        // otherwise, they called .prefixed('requestAnimationFrame', window[, elem])\n        } else {\n          props = (prop + ' ' + (domPrefixes).join(ucProp + ' ') + ucProp).split(' ');\n          return testDOMProps(props, prefixed, elem);\n        }\n    }\n    /*>>testallprops*/\n\n\n    /**\n     * Tests\n     * -----\n     */\n\n    // The *new* flexbox\n    // dev.w3.org/csswg/css3-flexbox\n\n    tests['flexbox'] = function() {\n      return testPropsAll('flexWrap');\n    };\n\n    // The *old* flexbox\n    // www.w3.org/TR/2009/WD-css3-flexbox-20090723/\n\n    tests['flexboxlegacy'] = function() {\n        return testPropsAll('boxDirection');\n    };\n\n    // On the S60 and BB Storm, getContext exists, but always returns undefined\n    // so we actually have to call getContext() to verify\n    // github.com/Modernizr/Modernizr/issues/issue/97/\n\n    tests['canvas'] = function() {\n        var elem = document.createElement('canvas');\n        return !!(elem.getContext && elem.getContext('2d'));\n    };\n\n    tests['canvastext'] = function() {\n        return !!(Modernizr['canvas'] && is(document.createElement('canvas').getContext('2d').fillText, 'function'));\n    };\n\n    // webk.it/70117 is tracking a legit WebGL feature detect proposal\n\n    // We do a soft detect which may false positive in order to avoid\n    // an expensive context creation: bugzil.la/732441\n\n    tests['webgl'] = function() {\n        return !!window.WebGLRenderingContext;\n    };\n\n    /*\n     * The Modernizr.touch test only indicates if the browser supports\n     *    touch events, which does not necessarily reflect a touchscreen\n     *    device, as evidenced by tablets running Windows 7 or, alas,\n     *    the Palm Pre / WebOS (touch) phones.\n     *\n     * Additionally, Chrome (desktop) used to lie about its support on this,\n     *    but that has since been rectified: crbug.com/36415\n     *\n     * We also test for Firefox 4 Multitouch Support.\n     *\n     * For more info, see: modernizr.github.com/Modernizr/touch.html\n     */\n\n    tests['touch'] = function() {\n        var bool;\n\n        if(('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch) {\n          bool = true;\n        } else {\n          injectElementWithStyles(['@media (',prefixes.join('touch-enabled),('),mod,')','{#modernizr{top:9px;position:absolute}}'].join(''), function( node ) {\n            bool = node.offsetTop === 9;\n          });\n        }\n\n        return bool;\n    };\n\n\n    // geolocation is often considered a trivial feature detect...\n    // Turns out, it's quite tricky to get right:\n    //\n    // Using !!navigator.geolocation does two things we don't want. It:\n    //   1. Leaks memory in IE9: github.com/Modernizr/Modernizr/issues/513\n    //   2. Disables page caching in WebKit: webk.it/43956\n    //\n    // Meanwhile, in Firefox < 8, an about:config setting could expose\n    // a false positive that would throw an exception: bugzil.la/688158\n\n    tests['geolocation'] = function() {\n        return 'geolocation' in navigator;\n    };\n\n\n    tests['postmessage'] = function() {\n      return !!window.postMessage;\n    };\n\n\n    // Chrome incognito mode used to throw an exception when using openDatabase\n    // It doesn't anymore.\n    tests['websqldatabase'] = function() {\n      return !!window.openDatabase;\n    };\n\n    // Vendors had inconsistent prefixing with the experimental Indexed DB:\n    // - Webkit's implementation is accessible through webkitIndexedDB\n    // - Firefox shipped moz_indexedDB before FF4b9, but since then has been mozIndexedDB\n    // For speed, we don't test the legacy (and beta-only) indexedDB\n    tests['indexedDB'] = function() {\n      return !!testPropsAll(\"indexedDB\", window);\n    };\n\n    // documentMode logic from YUI to filter out IE8 Compat Mode\n    //   which false positives.\n    tests['hashchange'] = function() {\n      return isEventSupported('hashchange', window) && (document.documentMode === undefined || document.documentMode > 7);\n    };\n\n    // Per 1.6:\n    // This used to be Modernizr.historymanagement but the longer\n    // name has been deprecated in favor of a shorter and property-matching one.\n    // The old API is still available in 1.6, but as of 2.0 will throw a warning,\n    // and in the first release thereafter disappear entirely.\n    tests['history'] = function() {\n      return !!(window.history && history.pushState);\n    };\n\n    tests['draganddrop'] = function() {\n        var div = document.createElement('div');\n        return ('draggable' in div) || ('ondragstart' in div && 'ondrop' in div);\n    };\n\n    // FF3.6 was EOL'ed on 4/24/12, but the ESR version of FF10\n    // will be supported until FF19 (2/12/13), at which time, ESR becomes FF17.\n    // FF10 still uses prefixes, so check for it until then.\n    // for more ESR info, see: mozilla.org/en-US/firefox/organizations/faq/\n    tests['websockets'] = function() {\n        return 'WebSocket' in window || 'MozWebSocket' in window;\n    };\n\n\n    // css-tricks.com/rgba-browser-support/\n    tests['rgba'] = function() {\n        // Set an rgba() color and check the returned value\n\n        setCss('background-color:rgba(150,255,150,.5)');\n\n        return contains(mStyle.backgroundColor, 'rgba');\n    };\n\n    tests['hsla'] = function() {\n        // Same as rgba(), in fact, browsers re-map hsla() to rgba() internally,\n        //   except IE9 who retains it as hsla\n\n        setCss('background-color:hsla(120,40%,100%,.5)');\n\n        return contains(mStyle.backgroundColor, 'rgba') || contains(mStyle.backgroundColor, 'hsla');\n    };\n\n    tests['multiplebgs'] = function() {\n        // Setting multiple images AND a color on the background shorthand property\n        //  and then querying the style.background property value for the number of\n        //  occurrences of \"url(\" is a reliable method for detecting ACTUAL support for this!\n\n        setCss('background:url(https://),url(https://),red url(https://)');\n\n        // If the UA supports multiple backgrounds, there should be three occurrences\n        //   of the string \"url(\" in the return value for elemStyle.background\n\n        return (/(url\\s*\\(.*?){3}/).test(mStyle.background);\n    };\n\n\n\n    // this will false positive in Opera Mini\n    //   github.com/Modernizr/Modernizr/issues/396\n\n    tests['backgroundsize'] = function() {\n        return testPropsAll('backgroundSize');\n    };\n\n    tests['borderimage'] = function() {\n        return testPropsAll('borderImage');\n    };\n\n\n    // Super comprehensive table about all the unique implementations of\n    // border-radius: muddledramblings.com/table-of-css3-border-radius-compliance\n\n    tests['borderradius'] = function() {\n        return testPropsAll('borderRadius');\n    };\n\n    // WebOS unfortunately false positives on this test.\n    tests['boxshadow'] = function() {\n        return testPropsAll('boxShadow');\n    };\n\n    // FF3.0 will false positive on this test\n    tests['textshadow'] = function() {\n        return document.createElement('div').style.textShadow === '';\n    };\n\n\n    tests['opacity'] = function() {\n        // Browsers that actually have CSS Opacity implemented have done so\n        //  according to spec, which means their return values are within the\n        //  range of [0.0,1.0] - including the leading zero.\n\n        setCssAll('opacity:.55');\n\n        // The non-literal . in this regex is intentional:\n        //   German Chrome returns this value as 0,55\n        // github.com/Modernizr/Modernizr/issues/#issue/59/comment/516632\n        return (/^0.55$/).test(mStyle.opacity);\n    };\n\n\n    // Note, Android < 4 will pass this test, but can only animate\n    //   a single property at a time\n    //   goo.gl/v3V4Gp\n    tests['cssanimations'] = function() {\n        return testPropsAll('animationName');\n    };\n\n\n    tests['csscolumns'] = function() {\n        return testPropsAll('columnCount');\n    };\n\n\n    tests['cssgradients'] = function() {\n        /**\n         * For CSS Gradients syntax, please see:\n         * webkit.org/blog/175/introducing-css-gradients/\n         * developer.mozilla.org/en/CSS/-moz-linear-gradient\n         * developer.mozilla.org/en/CSS/-moz-radial-gradient\n         * dev.w3.org/csswg/css3-images/#gradients-\n         */\n\n        var str1 = 'background-image:',\n            str2 = 'gradient(linear,left top,right bottom,from(#9f9),to(white));',\n            str3 = 'linear-gradient(left top,#9f9, white);';\n\n        setCss(\n             // legacy webkit syntax (FIXME: remove when syntax not in use anymore)\n              (str1 + '-webkit- '.split(' ').join(str2 + str1) +\n             // standard syntax             // trailing 'background-image:'\n              prefixes.join(str3 + str1)).slice(0, -str1.length)\n        );\n\n        return contains(mStyle.backgroundImage, 'gradient');\n    };\n\n\n    tests['cssreflections'] = function() {\n        return testPropsAll('boxReflect');\n    };\n\n\n    tests['csstransforms'] = function() {\n        return !!testPropsAll('transform');\n    };\n\n\n    tests['csstransforms3d'] = function() {\n\n        var ret = !!testPropsAll('perspective');\n\n        // Webkit's 3D transforms are passed off to the browser's own graphics renderer.\n        //   It works fine in Safari on Leopard and Snow Leopard, but not in Chrome in\n        //   some conditions. As a result, Webkit typically recognizes the syntax but\n        //   will sometimes throw a false positive, thus we must do a more thorough check:\n        if ( ret && 'webkitPerspective' in docElement.style ) {\n\n          // Webkit allows this media query to succeed only if the feature is enabled.\n          // `@media (transform-3d),(-webkit-transform-3d){ ... }`\n          injectElementWithStyles('@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px;}}', function( node, rule ) {\n            ret = node.offsetLeft === 9 && node.offsetHeight === 3;\n          });\n        }\n        return ret;\n    };\n\n\n    tests['csstransitions'] = function() {\n        return testPropsAll('transition');\n    };\n\n\n    /*>>fontface*/\n    // @font-face detection routine by Diego Perini\n    // javascript.nwbox.com/CSSSupport/\n\n    // false positives:\n    //   WebOS github.com/Modernizr/Modernizr/issues/342\n    //   WP7   github.com/Modernizr/Modernizr/issues/538\n    tests['fontface'] = function() {\n        var bool;\n\n        injectElementWithStyles('@font-face {font-family:\"font\";src:url(\"https://\")}', function( node, rule ) {\n          var style = document.getElementById('smodernizr'),\n              sheet = style.sheet || style.styleSheet,\n              cssText = sheet ? (sheet.cssRules && sheet.cssRules[0] ? sheet.cssRules[0].cssText : sheet.cssText || '') : '';\n\n          bool = /src/i.test(cssText) && cssText.indexOf(rule.split(' ')[0]) === 0;\n        });\n\n        return bool;\n    };\n    /*>>fontface*/\n\n    // CSS generated content detection\n    tests['generatedcontent'] = function() {\n        var bool;\n\n        injectElementWithStyles(['#',mod,'{font:0/0 a}#',mod,':after{content:\"',smile,'\";visibility:hidden;font:3px/1 a}'].join(''), function( node ) {\n          bool = node.offsetHeight >= 3;\n        });\n\n        return bool;\n    };\n\n\n\n    // These tests evaluate support of the video/audio elements, as well as\n    // testing what types of content they support.\n    //\n    // We're using the Boolean constructor here, so that we can extend the value\n    // e.g.  Modernizr.video     // true\n    //       Modernizr.video.ogg // 'probably'\n    //\n    // Codec values from : github.com/NielsLeenheer/html5test/blob/9106a8/index.html#L845\n    //                     thx to NielsLeenheer and zcorpan\n\n    // Note: in some older browsers, \"no\" was a return value instead of empty string.\n    //   It was live in FF3.5.0 and 3.5.1, but fixed in 3.5.2\n    //   It was also live in Safari 4.0.0 - 4.0.4, but fixed in 4.0.5\n\n    tests['video'] = function() {\n        var elem = document.createElement('video'),\n            bool = false;\n\n        // IE9 Running on Windows Server SKU can cause an exception to be thrown, bug #224\n        try {\n            if ( bool = !!elem.canPlayType ) {\n                bool      = new Boolean(bool);\n                bool.ogg  = elem.canPlayType('video/ogg; codecs=\"theora\"')      .replace(/^no$/,'');\n\n                // Without QuickTime, this value will be `undefined`. github.com/Modernizr/Modernizr/issues/546\n                bool.h264 = elem.canPlayType('video/mp4; codecs=\"avc1.42E01E\"') .replace(/^no$/,'');\n\n                bool.webm = elem.canPlayType('video/webm; codecs=\"vp8, vorbis\"').replace(/^no$/,'');\n            }\n\n        } catch(e) { }\n\n        return bool;\n    };\n\n    tests['audio'] = function() {\n        var elem = document.createElement('audio'),\n            bool = false;\n\n        try {\n            if ( bool = !!elem.canPlayType ) {\n                bool      = new Boolean(bool);\n                bool.ogg  = elem.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/,'');\n                bool.mp3  = elem.canPlayType('audio/mpeg;')               .replace(/^no$/,'');\n\n                // Mimetypes accepted:\n                //   developer.mozilla.org/En/Media_formats_supported_by_the_audio_and_video_elements\n                //   bit.ly/iphoneoscodecs\n                bool.wav  = elem.canPlayType('audio/wav; codecs=\"1\"')     .replace(/^no$/,'');\n                bool.m4a  = ( elem.canPlayType('audio/x-m4a;')            ||\n                              elem.canPlayType('audio/aac;'))             .replace(/^no$/,'');\n            }\n        } catch(e) { }\n\n        return bool;\n    };\n\n\n    // In FF4, if disabled, window.localStorage should === null.\n\n    // Normally, we could not test that directly and need to do a\n    //   `('localStorage' in window) && ` test first because otherwise Firefox will\n    //   throw bugzil.la/365772 if cookies are disabled\n\n    // Also in iOS5 Private Browsing mode, attempting to use localStorage.setItem\n    // will throw the exception:\n    //   QUOTA_EXCEEDED_ERRROR DOM Exception 22.\n    // Peculiarly, getItem and removeItem calls do not throw.\n\n    // Because we are forced to try/catch this, we'll go aggressive.\n\n    // Just FWIW: IE8 Compat mode supports these features completely:\n    //   www.quirksmode.org/dom/html5.html\n    // But IE8 doesn't support either with local files\n\n    tests['localstorage'] = function() {\n        try {\n            localStorage.setItem(mod, mod);\n            localStorage.removeItem(mod);\n            return true;\n        } catch(e) {\n            return false;\n        }\n    };\n\n    tests['sessionstorage'] = function() {\n        try {\n            sessionStorage.setItem(mod, mod);\n            sessionStorage.removeItem(mod);\n            return true;\n        } catch(e) {\n            return false;\n        }\n    };\n\n\n    tests['webworkers'] = function() {\n        return !!window.Worker;\n    };\n\n\n    tests['applicationcache'] = function() {\n        return !!window.applicationCache;\n    };\n\n\n    // Thanks to Erik Dahlstrom\n    tests['svg'] = function() {\n        return !!document.createElementNS && !!document.createElementNS(ns.svg, 'svg').createSVGRect;\n    };\n\n    // specifically for SVG inline in HTML, not within XHTML\n    // test page: paulirish.com/demo/inline-svg\n    tests['inlinesvg'] = function() {\n      var div = document.createElement('div');\n      div.innerHTML = '<svg/>';\n      return (div.firstChild && div.firstChild.namespaceURI) == ns.svg;\n    };\n\n    // SVG SMIL animation\n    tests['smil'] = function() {\n        return !!document.createElementNS && /SVGAnimate/.test(toString.call(document.createElementNS(ns.svg, 'animate')));\n    };\n\n    // This test is only for clip paths in SVG proper, not clip paths on HTML content\n    // demo: srufaculty.sru.edu/david.dailey/svg/newstuff/clipPath4.svg\n\n    // However read the comments to dig into applying SVG clippaths to HTML content here:\n    //   github.com/Modernizr/Modernizr/issues/213#issuecomment-1149491\n    tests['svgclippaths'] = function() {\n        return !!document.createElementNS && /SVGClipPath/.test(toString.call(document.createElementNS(ns.svg, 'clipPath')));\n    };\n\n    /*>>webforms*/\n    // input features and input types go directly onto the ret object, bypassing the tests loop.\n    // Hold this guy to execute in a moment.\n    function webforms() {\n        /*>>input*/\n        // Run through HTML5's new input attributes to see if the UA understands any.\n        // We're using f which is the <input> element created early on\n        // Mike Taylr has created a comprehensive resource for testing these attributes\n        //   when applied to all input types:\n        //   miketaylr.com/code/input-type-attr.html\n        // spec: www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n\n        // Only input placeholder is tested while textarea's placeholder is not.\n        // Currently Safari 4 and Opera 11 have support only for the input placeholder\n        // Both tests are available in feature-detects/forms-placeholder.js\n        Modernizr['input'] = (function( props ) {\n            for ( var i = 0, len = props.length; i < len; i++ ) {\n                attrs[ props[i] ] = !!(props[i] in inputElem);\n            }\n            if (attrs.list){\n              // safari false positive's on datalist: webk.it/74252\n              // see also github.com/Modernizr/Modernizr/issues/146\n              attrs.list = !!(document.createElement('datalist') && window.HTMLDataListElement);\n            }\n            return attrs;\n        })('autocomplete autofocus list placeholder max min multiple pattern required step'.split(' '));\n        /*>>input*/\n\n        /*>>inputtypes*/\n        // Run through HTML5's new input types to see if the UA understands any.\n        //   This is put behind the tests runloop because it doesn't return a\n        //   true/false like all the other tests; instead, it returns an object\n        //   containing each input type with its corresponding true/false value\n\n        // Big thanks to @miketaylr for the html5 forms expertise. miketaylr.com/\n        Modernizr['inputtypes'] = (function(props) {\n\n            for ( var i = 0, bool, inputElemType, defaultView, len = props.length; i < len; i++ ) {\n\n                inputElem.setAttribute('type', inputElemType = props[i]);\n                bool = inputElem.type !== 'text';\n\n                // We first check to see if the type we give it sticks..\n                // If the type does, we feed it a textual value, which shouldn't be valid.\n                // If the value doesn't stick, we know there's input sanitization which infers a custom UI\n                if ( bool ) {\n\n                    inputElem.value         = smile;\n                    inputElem.style.cssText = 'position:absolute;visibility:hidden;';\n\n                    if ( /^range$/.test(inputElemType) && inputElem.style.WebkitAppearance !== undefined ) {\n\n                      docElement.appendChild(inputElem);\n                      defaultView = document.defaultView;\n\n                      // Safari 2-4 allows the smiley as a value, despite making a slider\n                      bool =  defaultView.getComputedStyle &&\n                              defaultView.getComputedStyle(inputElem, null).WebkitAppearance !== 'textfield' &&\n                              // Mobile android web browser has false positive, so must\n                              // check the height to see if the widget is actually there.\n                              (inputElem.offsetHeight !== 0);\n\n                      docElement.removeChild(inputElem);\n\n                    } else if ( /^(search|tel)$/.test(inputElemType) ){\n                      // Spec doesn't define any special parsing or detectable UI\n                      //   behaviors so we pass these through as true\n\n                      // Interestingly, opera fails the earlier test, so it doesn't\n                      //  even make it here.\n\n                    } else if ( /^(url|email)$/.test(inputElemType) ) {\n                      // Real url and email support comes with prebaked validation.\n                      bool = inputElem.checkValidity && inputElem.checkValidity() === false;\n\n                    } else {\n                      // If the upgraded input compontent rejects the :) text, we got a winner\n                      bool = inputElem.value != smile;\n                    }\n                }\n\n                inputs[ props[i] ] = !!bool;\n            }\n            return inputs;\n        })('search tel url email datetime date month week time datetime-local number range color'.split(' '));\n        /*>>inputtypes*/\n    }\n    /*>>webforms*/\n\n\n    // End of test definitions\n    // -----------------------\n\n\n\n    // Run through all tests and detect their support in the current UA.\n    // todo: hypothetically we could be doing an array of tests and use a basic loop here.\n    for ( var feature in tests ) {\n        if ( hasOwnProp(tests, feature) ) {\n            // run the test, throw the return value into the Modernizr,\n            //   then based on that boolean, define an appropriate className\n            //   and push it into an array of classes we'll join later.\n            featureName  = feature.toLowerCase();\n            Modernizr[featureName] = tests[feature]();\n\n            classes.push((Modernizr[featureName] ? '' : 'no-') + featureName);\n        }\n    }\n\n    /*>>webforms*/\n    // input tests need to run.\n    Modernizr.input || webforms();\n    /*>>webforms*/\n\n\n    /**\n     * addTest allows the user to define their own feature tests\n     * the result will be added onto the Modernizr object,\n     * as well as an appropriate className set on the html element\n     *\n     * @param feature - String naming the feature\n     * @param test - Function returning true if feature is supported, false if not\n     */\n     Modernizr.addTest = function ( feature, test ) {\n       if ( typeof feature == 'object' ) {\n         for ( var key in feature ) {\n           if ( hasOwnProp( feature, key ) ) {\n             Modernizr.addTest( key, feature[ key ] );\n           }\n         }\n       } else {\n\n         feature = feature.toLowerCase();\n\n         if ( Modernizr[feature] !== undefined ) {\n           // we're going to quit if you're trying to overwrite an existing test\n           // if we were to allow it, we'd do this:\n           //   var re = new RegExp(\"\\\\b(no-)?\" + feature + \"\\\\b\");\n           //   docElement.className = docElement.className.replace( re, '' );\n           // but, no rly, stuff 'em.\n           return Modernizr;\n         }\n\n         test = typeof test == 'function' ? test() : test;\n\n         if (typeof enableClasses !== \"undefined\" && enableClasses) {\n           docElement.className += ' ' + (test ? '' : 'no-') + feature;\n         }\n         Modernizr[feature] = test;\n\n       }\n\n       return Modernizr; // allow chaining.\n     };\n\n\n    // Reset modElem.cssText to nothing to reduce memory footprint.\n    setCss('');\n    modElem = inputElem = null;\n\n    /*>>shiv*/\n    /**\n     * @preserve HTML5 Shiv prev3.7.1 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed\n     */\n    ;(function(window, document) {\n        /*jshint evil:true */\n        /** version */\n        var version = '3.7.0';\n\n        /** Preset options */\n        var options = window.html5 || {};\n\n        /** Used to skip problem elements */\n        var reSkip = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;\n\n        /** Not all elements can be cloned in IE **/\n        var saveClones = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i;\n\n        /** Detect whether the browser supports default html5 styles */\n        var supportsHtml5Styles;\n\n        /** Name of the expando, to work with multiple documents or to re-shiv one document */\n        var expando = '_html5shiv';\n\n        /** The id for the the documents expando */\n        var expanID = 0;\n\n        /** Cached data for each document */\n        var expandoData = {};\n\n        /** Detect whether the browser supports unknown elements */\n        var supportsUnknownElements;\n\n        (function() {\n          try {\n            var a = document.createElement('a');\n            a.innerHTML = '<xyz></xyz>';\n            //if the hidden property is implemented we can assume, that the browser supports basic HTML5 Styles\n            supportsHtml5Styles = ('hidden' in a);\n\n            supportsUnknownElements = a.childNodes.length == 1 || (function() {\n              // assign a false positive if unable to shiv\n              (document.createElement)('a');\n              var frag = document.createDocumentFragment();\n              return (\n                typeof frag.cloneNode == 'undefined' ||\n                typeof frag.createDocumentFragment == 'undefined' ||\n                typeof frag.createElement == 'undefined'\n              );\n            }());\n          } catch(e) {\n            // assign a false positive if detection fails => unable to shiv\n            supportsHtml5Styles = true;\n            supportsUnknownElements = true;\n          }\n\n        }());\n\n        /*--------------------------------------------------------------------------*/\n\n        /**\n         * Creates a style sheet with the given CSS text and adds it to the document.\n         * @private\n         * @param {Document} ownerDocument The document.\n         * @param {String} cssText The CSS text.\n         * @returns {StyleSheet} The style element.\n         */\n        function addStyleSheet(ownerDocument, cssText) {\n          var p = ownerDocument.createElement('p'),\n          parent = ownerDocument.getElementsByTagName('head')[0] || ownerDocument.documentElement;\n\n          p.innerHTML = 'x<style>' + cssText + '</style>';\n          return parent.insertBefore(p.lastChild, parent.firstChild);\n        }\n\n        /**\n         * Returns the value of `html5.elements` as an array.\n         * @private\n         * @returns {Array} An array of shived element node names.\n         */\n        function getElements() {\n          var elements = html5.elements;\n          return typeof elements == 'string' ? elements.split(' ') : elements;\n        }\n\n        /**\n         * Returns the data associated to the given document\n         * @private\n         * @param {Document} ownerDocument The document.\n         * @returns {Object} An object of data.\n         */\n        function getExpandoData(ownerDocument) {\n          var data = expandoData[ownerDocument[expando]];\n          if (!data) {\n            data = {};\n            expanID++;\n            ownerDocument[expando] = expanID;\n            expandoData[expanID] = data;\n          }\n          return data;\n        }\n\n        /**\n         * returns a shived element for the given nodeName and document\n         * @memberOf html5\n         * @param {String} nodeName name of the element\n         * @param {Document} ownerDocument The context document.\n         * @returns {Object} The shived element.\n         */\n        function createElement(nodeName, ownerDocument, data){\n          if (!ownerDocument) {\n            ownerDocument = document;\n          }\n          if(supportsUnknownElements){\n            return ownerDocument.createElement(nodeName);\n          }\n          if (!data) {\n            data = getExpandoData(ownerDocument);\n          }\n          var node;\n\n          if (data.cache[nodeName]) {\n            node = data.cache[nodeName].cloneNode();\n          } else if (saveClones.test(nodeName)) {\n            node = (data.cache[nodeName] = data.createElem(nodeName)).cloneNode();\n          } else {\n            node = data.createElem(nodeName);\n          }\n\n          // Avoid adding some elements to fragments in IE < 9 because\n          // * Attributes like `name` or `type` cannot be set/changed once an element\n          //   is inserted into a document/fragment\n          // * Link elements with `src` attributes that are inaccessible, as with\n          //   a 403 response, will cause the tab/window to crash\n          // * Script elements appended to fragments will execute when their `src`\n          //   or `text` property is set\n          return node.canHaveChildren && !reSkip.test(nodeName) && !node.tagUrn ? data.frag.appendChild(node) : node;\n        }\n\n        /**\n         * returns a shived DocumentFragment for the given document\n         * @memberOf html5\n         * @param {Document} ownerDocument The context document.\n         * @returns {Object} The shived DocumentFragment.\n         */\n        function createDocumentFragment(ownerDocument, data){\n          if (!ownerDocument) {\n            ownerDocument = document;\n          }\n          if(supportsUnknownElements){\n            return ownerDocument.createDocumentFragment();\n          }\n          data = data || getExpandoData(ownerDocument);\n          var clone = data.frag.cloneNode(),\n          i = 0,\n          elems = getElements(),\n          l = elems.length;\n          for(;i<l;i++){\n            clone.createElement(elems[i]);\n          }\n          return clone;\n        }\n\n        /**\n         * Shivs the `createElement` and `createDocumentFragment` methods of the document.\n         * @private\n         * @param {Document|DocumentFragment} ownerDocument The document.\n         * @param {Object} data of the document.\n         */\n        function shivMethods(ownerDocument, data) {\n          if (!data.cache) {\n            data.cache = {};\n            data.createElem = ownerDocument.createElement;\n            data.createFrag = ownerDocument.createDocumentFragment;\n            data.frag = data.createFrag();\n          }\n\n\n          ownerDocument.createElement = function(nodeName) {\n            //abort shiv\n            if (!html5.shivMethods) {\n              return data.createElem(nodeName);\n            }\n            return createElement(nodeName, ownerDocument, data);\n          };\n\n          ownerDocument.createDocumentFragment = Function('h,f', 'return function(){' +\n                                                          'var n=f.cloneNode(),c=n.createElement;' +\n                                                          'h.shivMethods&&(' +\n                                                          // unroll the `createElement` calls\n                                                          getElements().join().replace(/[\\w\\-]+/g, function(nodeName) {\n            data.createElem(nodeName);\n            data.frag.createElement(nodeName);\n            return 'c(\"' + nodeName + '\")';\n          }) +\n            ');return n}'\n                                                         )(html5, data.frag);\n        }\n\n        /*--------------------------------------------------------------------------*/\n\n        /**\n         * Shivs the given document.\n         * @memberOf html5\n         * @param {Document} ownerDocument The document to shiv.\n         * @returns {Document} The shived document.\n         */\n        function shivDocument(ownerDocument) {\n          if (!ownerDocument) {\n            ownerDocument = document;\n          }\n          var data = getExpandoData(ownerDocument);\n\n          if (html5.shivCSS && !supportsHtml5Styles && !data.hasCSS) {\n            data.hasCSS = !!addStyleSheet(ownerDocument,\n                                          // corrects block display not defined in IE6/7/8/9\n                                          'article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}' +\n                                            // adds styling not present in IE6/7/8/9\n                                            'mark{background:#FF0;color:#000}' +\n                                            // hides non-rendered elements\n                                            'template{display:none}'\n                                         );\n          }\n          if (!supportsUnknownElements) {\n            shivMethods(ownerDocument, data);\n          }\n          return ownerDocument;\n        }\n\n        /*--------------------------------------------------------------------------*/\n\n        /**\n         * The `html5` object is exposed so that more elements can be shived and\n         * existing shiving can be detected on iframes.\n         * @type Object\n         * @example\n         *\n         * // options can be changed before the script is included\n         * html5 = { 'elements': 'mark section', 'shivCSS': false, 'shivMethods': false };\n         */\n        var html5 = {\n\n          /**\n           * An array or space separated string of node names of the elements to shiv.\n           * @memberOf html5\n           * @type Array|String\n           */\n          'elements': options.elements || 'abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output progress section summary template time video',\n\n          /**\n           * current version of html5shiv\n           */\n          'version': version,\n\n          /**\n           * A flag to indicate that the HTML5 style sheet should be inserted.\n           * @memberOf html5\n           * @type Boolean\n           */\n          'shivCSS': (options.shivCSS !== false),\n\n          /**\n           * Is equal to true if a browser supports creating unknown/HTML5 elements\n           * @memberOf html5\n           * @type boolean\n           */\n          'supportsUnknownElements': supportsUnknownElements,\n\n          /**\n           * A flag to indicate that the document's `createElement` and `createDocumentFragment`\n           * methods should be overwritten.\n           * @memberOf html5\n           * @type Boolean\n           */\n          'shivMethods': (options.shivMethods !== false),\n\n          /**\n           * A string to describe the type of `html5` object (\"default\" or \"default print\").\n           * @memberOf html5\n           * @type String\n           */\n          'type': 'default',\n\n          // shivs the document according to the specified `html5` object options\n          'shivDocument': shivDocument,\n\n          //creates a shived element\n          createElement: createElement,\n\n          //creates a shived documentFragment\n          createDocumentFragment: createDocumentFragment\n        };\n\n        /*--------------------------------------------------------------------------*/\n\n        // expose html5\n        window.html5 = html5;\n\n        // shiv the document\n        shivDocument(document);\n\n    }(this, document));\n    /*>>shiv*/\n\n    // Assign private properties to the return object with prefix\n    Modernizr._version      = version;\n\n    // expose these for the plugin API. Look in the source for how to join() them against your input\n    /*>>prefixes*/\n    Modernizr._prefixes     = prefixes;\n    /*>>prefixes*/\n    /*>>domprefixes*/\n    Modernizr._domPrefixes  = domPrefixes;\n    Modernizr._cssomPrefixes  = cssomPrefixes;\n    /*>>domprefixes*/\n\n    /*>>mq*/\n    // Modernizr.mq tests a given media query, live against the current state of the window\n    // A few important notes:\n    //   * If a browser does not support media queries at all (eg. oldIE) the mq() will always return false\n    //   * A max-width or orientation query will be evaluated against the current state, which may change later.\n    //   * You must specify values. Eg. If you are testing support for the min-width media query use:\n    //       Modernizr.mq('(min-width:0)')\n    // usage:\n    // Modernizr.mq('only screen and (max-width:768)')\n    Modernizr.mq            = testMediaQuery;\n    /*>>mq*/\n\n    /*>>hasevent*/\n    // Modernizr.hasEvent() detects support for a given event, with an optional element to test on\n    // Modernizr.hasEvent('gesturestart', elem)\n    Modernizr.hasEvent      = isEventSupported;\n    /*>>hasevent*/\n\n    /*>>testprop*/\n    // Modernizr.testProp() investigates whether a given style property is recognized\n    // Note that the property names must be provided in the camelCase variant.\n    // Modernizr.testProp('pointerEvents')\n    Modernizr.testProp      = function(prop){\n        return testProps([prop]);\n    };\n    /*>>testprop*/\n\n    /*>>testallprops*/\n    // Modernizr.testAllProps() investigates whether a given style property,\n    //   or any of its vendor-prefixed variants, is recognized\n    // Note that the property names must be provided in the camelCase variant.\n    // Modernizr.testAllProps('boxSizing')\n    Modernizr.testAllProps  = testPropsAll;\n    /*>>testallprops*/\n\n\n    /*>>teststyles*/\n    // Modernizr.testStyles() allows you to add custom styles to the document and test an element afterwards\n    // Modernizr.testStyles('#modernizr { position:absolute }', function(elem, rule){ ... })\n    Modernizr.testStyles    = injectElementWithStyles;\n    /*>>teststyles*/\n\n\n    /*>>prefixed*/\n    // Modernizr.prefixed() returns the prefixed or nonprefixed property name variant of your input\n    // Modernizr.prefixed('boxSizing') // 'MozBoxSizing'\n\n    // Properties must be passed as dom-style camelcase, rather than `box-sizing` hypentated style.\n    // Return values will also be the camelCase variant, if you need to translate that to hypenated style use:\n    //\n    //     str.replace(/([A-Z])/g, function(str,m1){ return '-' + m1.toLowerCase(); }).replace(/^ms-/,'-ms-');\n\n    // If you're trying to ascertain which transition end event to bind to, you might do something like...\n    //\n    //     var transEndEventNames = {\n    //       'WebkitTransition' : 'webkitTransitionEnd',\n    //       'MozTransition'    : 'transitionend',\n    //       'OTransition'      : 'oTransitionEnd',\n    //       'msTransition'     : 'MSTransitionEnd',\n    //       'transition'       : 'transitionend'\n    //     },\n    //     transEndEventName = transEndEventNames[ Modernizr.prefixed('transition') ];\n\n    Modernizr.prefixed      = function(prop, obj, elem){\n      if(!obj) {\n        return testPropsAll(prop, 'pfx');\n      } else {\n        // Testing DOM property e.g. Modernizr.prefixed('requestAnimationFrame', window) // 'mozRequestAnimationFrame'\n        return testPropsAll(prop, obj, elem);\n      }\n    };\n    /*>>prefixed*/\n\n\n    /*>>cssclasses*/\n    // Remove \"no-js\" class from <html> element, if it exists:\n    docElement.className = docElement.className.replace(/(^|\\s)no-js(\\s|$)/, '$1$2') +\n\n                            // Add the new classes to the <html> element.\n                            (enableClasses ? ' js ' + classes.join(' ') : '');\n    /*>>cssclasses*/\n\n    return Modernizr;\n\n})(this, this.document);\nreturn root.Modernizr = Modernizr;\n  }).apply(root, arguments);\n});\n}(this));\n\n","define('util/modernizr',['../app', 'modernizr'], function(App, Modernizr) {\n\n\n    Modernizr.addTest('mediaqueries', Modernizr.mq('only all'));\n\n\n    return Modernizr;\n});\n","/*!\n\n handlebars v3.0.0\n\nCopyright (C) 2011-2014 by Yehuda Katz\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n@license\n*/\n/* exported Handlebars */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define('handlebars',[], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.Handlebars = factory();\n  }\n}(this, function () {\n// handlebars/utils.js\nvar __module3__ = (function() {\n  \"use strict\";\n  var __exports__ = {};\n  /*jshint -W004 */\n  var escape = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    '\"': \"&quot;\",\n    \"'\": \"&#x27;\",\n    \"`\": \"&#x60;\"\n  };\n\n  var badChars = /[&<>\"'`]/g;\n  var possible = /[&<>\"'`]/;\n\n  function escapeChar(chr) {\n    return escape[chr];\n  }\n\n  function extend(obj /* , ...source */) {\n    for (var i = 1; i < arguments.length; i++) {\n      for (var key in arguments[i]) {\n        if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {\n          obj[key] = arguments[i][key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  __exports__.extend = extend;var toString = Object.prototype.toString;\n  __exports__.toString = toString;\n  // Sourced from lodash\n  // https://github.com/bestiejs/lodash/blob/master/LICENSE.txt\n  var isFunction = function(value) {\n    return typeof value === 'function';\n  };\n  // fallback for older versions of Chrome and Safari\n  /* istanbul ignore next */\n  if (isFunction(/x/)) {\n    isFunction = function(value) {\n      return typeof value === 'function' && toString.call(value) === '[object Function]';\n    };\n  }\n  var isFunction;\n  __exports__.isFunction = isFunction;\n  /* istanbul ignore next */\n  var isArray = Array.isArray || function(value) {\n    return (value && typeof value === 'object') ? toString.call(value) === '[object Array]' : false;\n  };\n  __exports__.isArray = isArray;\n  // Older IE versions do not directly support indexOf so we must implement our own, sadly.\n  function indexOf(array, value) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  __exports__.indexOf = indexOf;\n  function escapeExpression(string) {\n    // don't escape SafeStrings, since they're already safe\n    if (string && string.toHTML) {\n      return string.toHTML();\n    } else if (string == null) {\n      return \"\";\n    } else if (!string) {\n      return string + '';\n    }\n\n    // Force a string conversion as this will be done by the append regardless and\n    // the regex test will do this transparently behind the scenes, causing issues if\n    // an object's to string has escaped characters in it.\n    string = \"\" + string;\n\n    if(!possible.test(string)) { return string; }\n    return string.replace(badChars, escapeChar);\n  }\n\n  __exports__.escapeExpression = escapeExpression;function isEmpty(value) {\n    if (!value && value !== 0) {\n      return true;\n    } else if (isArray(value) && value.length === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  __exports__.isEmpty = isEmpty;function blockParams(params, ids) {\n    params.path = ids;\n    return params;\n  }\n\n  __exports__.blockParams = blockParams;function appendContextPath(contextPath, id) {\n    return (contextPath ? contextPath + '.' : '') + id;\n  }\n\n  __exports__.appendContextPath = appendContextPath;\n  return __exports__;\n})();\n\n// handlebars/exception.js\nvar __module4__ = (function() {\n  \"use strict\";\n  var __exports__;\n\n  var errorProps = ['description', 'fileName', 'lineNumber', 'message', 'name', 'number', 'stack'];\n\n  function Exception(message, node) {\n    var loc = node && node.loc,\n        line,\n        column;\n    if (loc) {\n      line = loc.start.line;\n      column = loc.start.column;\n\n      message += ' - ' + line + ':' + column;\n    }\n\n    var tmp = Error.prototype.constructor.call(this, message);\n\n    // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.\n    for (var idx = 0; idx < errorProps.length; idx++) {\n      this[errorProps[idx]] = tmp[errorProps[idx]];\n    }\n\n    if (loc) {\n      this.lineNumber = line;\n      this.column = column;\n    }\n  }\n\n  Exception.prototype = new Error();\n\n  __exports__ = Exception;\n  return __exports__;\n})();\n\n// handlebars/base.js\nvar __module2__ = (function(__dependency1__, __dependency2__) {\n  \"use strict\";\n  var __exports__ = {};\n  var Utils = __dependency1__;\n  var Exception = __dependency2__;\n\n  var VERSION = \"3.0.0\";\n  __exports__.VERSION = VERSION;var COMPILER_REVISION = 6;\n  __exports__.COMPILER_REVISION = COMPILER_REVISION;\n  var REVISION_CHANGES = {\n    1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it\n    2: '== 1.0.0-rc.3',\n    3: '== 1.0.0-rc.4',\n    4: '== 1.x.x',\n    5: '== 2.0.0-alpha.x',\n    6: '>= 2.0.0-beta.1'\n  };\n  __exports__.REVISION_CHANGES = REVISION_CHANGES;\n  var isArray = Utils.isArray,\n      isFunction = Utils.isFunction,\n      toString = Utils.toString,\n      objectType = '[object Object]';\n\n  function HandlebarsEnvironment(helpers, partials) {\n    this.helpers = helpers || {};\n    this.partials = partials || {};\n\n    registerDefaultHelpers(this);\n  }\n\n  __exports__.HandlebarsEnvironment = HandlebarsEnvironment;HandlebarsEnvironment.prototype = {\n    constructor: HandlebarsEnvironment,\n\n    logger: logger,\n    log: log,\n\n    registerHelper: function(name, fn) {\n      if (toString.call(name) === objectType) {\n        if (fn) { throw new Exception('Arg not supported with multiple helpers'); }\n        Utils.extend(this.helpers, name);\n      } else {\n        this.helpers[name] = fn;\n      }\n    },\n    unregisterHelper: function(name) {\n      delete this.helpers[name];\n    },\n\n    registerPartial: function(name, partial) {\n      if (toString.call(name) === objectType) {\n        Utils.extend(this.partials,  name);\n      } else {\n        if (typeof partial === 'undefined') {\n          throw new Exception('Attempting to register a partial as undefined');\n        }\n        this.partials[name] = partial;\n      }\n    },\n    unregisterPartial: function(name) {\n      delete this.partials[name];\n    }\n  };\n\n  function registerDefaultHelpers(instance) {\n    instance.registerHelper('helperMissing', function(/* [args, ]options */) {\n      if(arguments.length === 1) {\n        // A missing field in a {{foo}} constuct.\n        return undefined;\n      } else {\n        // Someone is actually trying to call something, blow up.\n        throw new Exception(\"Missing helper: '\" + arguments[arguments.length-1].name + \"'\");\n      }\n    });\n\n    instance.registerHelper('blockHelperMissing', function(context, options) {\n      var inverse = options.inverse,\n          fn = options.fn;\n\n      if(context === true) {\n        return fn(this);\n      } else if(context === false || context == null) {\n        return inverse(this);\n      } else if (isArray(context)) {\n        if(context.length > 0) {\n          if (options.ids) {\n            options.ids = [options.name];\n          }\n\n          return instance.helpers.each(context, options);\n        } else {\n          return inverse(this);\n        }\n      } else {\n        if (options.data && options.ids) {\n          var data = createFrame(options.data);\n          data.contextPath = Utils.appendContextPath(options.data.contextPath, options.name);\n          options = {data: data};\n        }\n\n        return fn(context, options);\n      }\n    });\n\n    instance.registerHelper('each', function(context, options) {\n      if (!options) {\n        throw new Exception('Must pass iterator to #each');\n      }\n\n      var fn = options.fn, inverse = options.inverse;\n      var i = 0, ret = \"\", data;\n\n      var contextPath;\n      if (options.data && options.ids) {\n        contextPath = Utils.appendContextPath(options.data.contextPath, options.ids[0]) + '.';\n      }\n\n      if (isFunction(context)) { context = context.call(this); }\n\n      if (options.data) {\n        data = createFrame(options.data);\n      }\n\n      function execIteration(key, i, last) {\n        if (data) {\n          data.key = key;\n          data.index = i;\n          data.first = i === 0;\n          data.last  = !!last;\n\n          if (contextPath) {\n            data.contextPath = contextPath + key;\n          }\n        }\n\n        ret = ret + fn(context[key], {\n          data: data,\n          blockParams: Utils.blockParams([context[key], key], [contextPath + key, null])\n        });\n      }\n\n      if(context && typeof context === 'object') {\n        if (isArray(context)) {\n          for(var j = context.length; i<j; i++) {\n            execIteration(i, i, i === context.length-1);\n          }\n        } else {\n          var priorKey;\n\n          for(var key in context) {\n            if(context.hasOwnProperty(key)) {\n              // We're running the iterations one step out of sync so we can detect\n              // the last iteration without have to scan the object twice and create\n              // an itermediate keys array. \n              if (priorKey) {\n                execIteration(priorKey, i-1);\n              }\n              priorKey = key;\n              i++;\n            }\n          }\n          if (priorKey) {\n            execIteration(priorKey, i-1, true);\n          }\n        }\n      }\n\n      if(i === 0){\n        ret = inverse(this);\n      }\n\n      return ret;\n    });\n\n    instance.registerHelper('if', function(conditional, options) {\n      if (isFunction(conditional)) { conditional = conditional.call(this); }\n\n      // Default behavior is to render the positive path if the value is truthy and not empty.\n      // The `includeZero` option may be set to treat the condtional as purely not empty based on the\n      // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.\n      if ((!options.hash.includeZero && !conditional) || Utils.isEmpty(conditional)) {\n        return options.inverse(this);\n      } else {\n        return options.fn(this);\n      }\n    });\n\n    instance.registerHelper('unless', function(conditional, options) {\n      return instance.helpers['if'].call(this, conditional, {fn: options.inverse, inverse: options.fn, hash: options.hash});\n    });\n\n    instance.registerHelper('with', function(context, options) {\n      if (isFunction(context)) { context = context.call(this); }\n\n      var fn = options.fn;\n\n      if (!Utils.isEmpty(context)) {\n        if (options.data && options.ids) {\n          var data = createFrame(options.data);\n          data.contextPath = Utils.appendContextPath(options.data.contextPath, options.ids[0]);\n          options = {data:data};\n        }\n\n        return fn(context, options);\n      } else {\n        return options.inverse(this);\n      }\n    });\n\n    instance.registerHelper('log', function(message, options) {\n      var level = options.data && options.data.level != null ? parseInt(options.data.level, 10) : 1;\n      instance.log(level, message);\n    });\n\n    instance.registerHelper('lookup', function(obj, field) {\n      return obj && obj[field];\n    });\n  }\n\n  var logger = {\n    methodMap: { 0: 'debug', 1: 'info', 2: 'warn', 3: 'error' },\n\n    // State enum\n    DEBUG: 0,\n    INFO: 1,\n    WARN: 2,\n    ERROR: 3,\n    level: 1,\n\n    // Can be overridden in the host environment\n    log: function(level, message) {\n      if (typeof console !== 'undefined' && logger.level <= level) {\n        var method = logger.methodMap[level];\n        (console[method] || console.log).call(console, message);\n      }\n    }\n  };\n  __exports__.logger = logger;\n  var log = logger.log;\n  __exports__.log = log;\n  var createFrame = function(object) {\n    var frame = Utils.extend({}, object);\n    frame._parent = object;\n    return frame;\n  };\n  __exports__.createFrame = createFrame;\n  return __exports__;\n})(__module3__, __module4__);\n\n// handlebars/safe-string.js\nvar __module5__ = (function() {\n  \"use strict\";\n  var __exports__;\n  // Build out our basic SafeString type\n  function SafeString(string) {\n    this.string = string;\n  }\n\n  SafeString.prototype.toString = SafeString.prototype.toHTML = function() {\n    return \"\" + this.string;\n  };\n\n  __exports__ = SafeString;\n  return __exports__;\n})();\n\n// handlebars/runtime.js\nvar __module6__ = (function(__dependency1__, __dependency2__, __dependency3__) {\n  \"use strict\";\n  var __exports__ = {};\n  var Utils = __dependency1__;\n  var Exception = __dependency2__;\n  var COMPILER_REVISION = __dependency3__.COMPILER_REVISION;\n  var REVISION_CHANGES = __dependency3__.REVISION_CHANGES;\n  var createFrame = __dependency3__.createFrame;\n\n  function checkRevision(compilerInfo) {\n    var compilerRevision = compilerInfo && compilerInfo[0] || 1,\n        currentRevision = COMPILER_REVISION;\n\n    if (compilerRevision !== currentRevision) {\n      if (compilerRevision < currentRevision) {\n        var runtimeVersions = REVISION_CHANGES[currentRevision],\n            compilerVersions = REVISION_CHANGES[compilerRevision];\n        throw new Exception(\"Template was precompiled with an older version of Handlebars than the current runtime. \"+\n              \"Please update your precompiler to a newer version (\"+runtimeVersions+\") or downgrade your runtime to an older version (\"+compilerVersions+\").\");\n      } else {\n        // Use the embedded version info since the runtime doesn't know about this revision yet\n        throw new Exception(\"Template was precompiled with a newer version of Handlebars than the current runtime. \"+\n              \"Please update your runtime to a newer version (\"+compilerInfo[1]+\").\");\n      }\n    }\n  }\n\n  __exports__.checkRevision = checkRevision;// TODO: Remove this line and break up compilePartial\n\n  function template(templateSpec, env) {\n    /* istanbul ignore next */\n    if (!env) {\n      throw new Exception(\"No environment passed to template\");\n    }\n    if (!templateSpec || !templateSpec.main) {\n      throw new Exception('Unknown template object: ' + typeof templateSpec);\n    }\n\n    // Note: Using env.VM references rather than local var references throughout this section to allow\n    // for external users to override these as psuedo-supported APIs.\n    env.VM.checkRevision(templateSpec.compiler);\n\n    var invokePartialWrapper = function(partial, context, options) {\n      if (options.hash) {\n        context = Utils.extend({}, context, options.hash);\n      }\n\n      partial = env.VM.resolvePartial.call(this, partial, context, options);\n      var result = env.VM.invokePartial.call(this, partial, context, options);\n\n      if (result == null && env.compile) {\n        options.partials[options.name] = env.compile(partial, templateSpec.compilerOptions, env);\n        result = options.partials[options.name](context, options);\n      }\n      if (result != null) {\n        if (options.indent) {\n          var lines = result.split('\\n');\n          for (var i = 0, l = lines.length; i < l; i++) {\n            if (!lines[i] && i + 1 === l) {\n              break;\n            }\n\n            lines[i] = options.indent + lines[i];\n          }\n          result = lines.join('\\n');\n        }\n        return result;\n      } else {\n        throw new Exception(\"The partial \" + options.name + \" could not be compiled when running in runtime-only mode\");\n      }\n    };\n\n    // Just add water\n    var container = {\n      strict: function(obj, name) {\n        if (!(name in obj)) {\n          throw new Exception('\"' + name + '\" not defined in ' + obj);\n        }\n        return obj[name];\n      },\n      lookup: function(depths, name) {\n        var len = depths.length;\n        for (var i = 0; i < len; i++) {\n          if (depths[i] && depths[i][name] != null) {\n            return depths[i][name];\n          }\n        }\n      },\n      lambda: function(current, context) {\n        return typeof current === 'function' ? current.call(context) : current;\n      },\n\n      escapeExpression: Utils.escapeExpression,\n      invokePartial: invokePartialWrapper,\n\n      fn: function(i) {\n        return templateSpec[i];\n      },\n\n      programs: [],\n      program: function(i, data, declaredBlockParams, blockParams, depths) {\n        var programWrapper = this.programs[i],\n            fn = this.fn(i);\n        if (data || depths || blockParams || declaredBlockParams) {\n          programWrapper = program(this, i, fn, data, declaredBlockParams, blockParams, depths);\n        } else if (!programWrapper) {\n          programWrapper = this.programs[i] = program(this, i, fn);\n        }\n        return programWrapper;\n      },\n\n      data: function(data, depth) {\n        while (data && depth--) {\n          data = data._parent;\n        }\n        return data;\n      },\n      merge: function(param, common) {\n        var ret = param || common;\n\n        if (param && common && (param !== common)) {\n          ret = Utils.extend({}, common, param);\n        }\n\n        return ret;\n      },\n\n      noop: env.VM.noop,\n      compilerInfo: templateSpec.compiler\n    };\n\n    var ret = function(context, options) {\n      options = options || {};\n      var data = options.data;\n\n      ret._setup(options);\n      if (!options.partial && templateSpec.useData) {\n        data = initData(context, data);\n      }\n      var depths,\n          blockParams = templateSpec.useBlockParams ? [] : undefined;\n      if (templateSpec.useDepths) {\n        depths = options.depths ? [context].concat(options.depths) : [context];\n      }\n\n      return templateSpec.main.call(container, context, container.helpers, container.partials, data, blockParams, depths);\n    };\n    ret.isTop = true;\n\n    ret._setup = function(options) {\n      if (!options.partial) {\n        container.helpers = container.merge(options.helpers, env.helpers);\n\n        if (templateSpec.usePartial) {\n          container.partials = container.merge(options.partials, env.partials);\n        }\n      } else {\n        container.helpers = options.helpers;\n        container.partials = options.partials;\n      }\n    };\n\n    ret._child = function(i, data, blockParams, depths) {\n      if (templateSpec.useBlockParams && !blockParams) {\n        throw new Exception('must pass block params');\n      }\n      if (templateSpec.useDepths && !depths) {\n        throw new Exception('must pass parent depths');\n      }\n\n      return program(container, i, templateSpec[i], data, 0, blockParams, depths);\n    };\n    return ret;\n  }\n\n  __exports__.template = template;function program(container, i, fn, data, declaredBlockParams, blockParams, depths) {\n    var prog = function(context, options) {\n      options = options || {};\n\n      return fn.call(container,\n          context,\n          container.helpers, container.partials,\n          options.data || data,\n          blockParams && [options.blockParams].concat(blockParams),\n          depths && [context].concat(depths));\n    };\n    prog.program = i;\n    prog.depth = depths ? depths.length : 0;\n    prog.blockParams = declaredBlockParams || 0;\n    return prog;\n  }\n\n  __exports__.program = program;function resolvePartial(partial, context, options) {\n    if (!partial) {\n      partial = options.partials[options.name];\n    } else if (!partial.call && !options.name) {\n      // This is a dynamic partial that returned a string\n      options.name = partial;\n      partial = options.partials[partial];\n    }\n    return partial;\n  }\n\n  __exports__.resolvePartial = resolvePartial;function invokePartial(partial, context, options) {\n    options.partial = true;\n\n    if(partial === undefined) {\n      throw new Exception(\"The partial \" + options.name + \" could not be found\");\n    } else if(partial instanceof Function) {\n      return partial(context, options);\n    }\n  }\n\n  __exports__.invokePartial = invokePartial;function noop() { return \"\"; }\n\n  __exports__.noop = noop;function initData(context, data) {\n    if (!data || !('root' in data)) {\n      data = data ? createFrame(data) : {};\n      data.root = context;\n    }\n    return data;\n  }\n  return __exports__;\n})(__module3__, __module4__, __module2__);\n\n// handlebars.runtime.js\nvar __module1__ = (function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __dependency5__) {\n  \"use strict\";\n  var __exports__;\n  /*globals Handlebars: true */\n  var base = __dependency1__;\n\n  // Each of these augment the Handlebars object. No need to setup here.\n  // (This is done to easily share code between commonjs and browse envs)\n  var SafeString = __dependency2__;\n  var Exception = __dependency3__;\n  var Utils = __dependency4__;\n  var runtime = __dependency5__;\n\n  // For compatibility and usage outside of module systems, make the Handlebars object a namespace\n  var create = function() {\n    var hb = new base.HandlebarsEnvironment();\n\n    Utils.extend(hb, base);\n    hb.SafeString = SafeString;\n    hb.Exception = Exception;\n    hb.Utils = Utils;\n    hb.escapeExpression = Utils.escapeExpression;\n\n    hb.VM = runtime;\n    hb.template = function(spec) {\n      return runtime.template(spec, hb);\n    };\n\n    return hb;\n  };\n\n  var Handlebars = create();\n  Handlebars.create = create;\n\n  /*jshint -W040 */\n  /* istanbul ignore next */\n  var root = typeof global !== 'undefined' ? global : window,\n      $Handlebars = root.Handlebars;\n  /* istanbul ignore next */\n  Handlebars.noConflict = function() {\n    if (root.Handlebars === Handlebars) {\n      root.Handlebars = $Handlebars;\n    }\n  };\n\n  Handlebars['default'] = Handlebars;\n\n  __exports__ = Handlebars;\n  return __exports__;\n})(__module2__, __module5__, __module4__, __module3__, __module6__);\n\n// handlebars/compiler/ast.js\nvar __module7__ = (function() {\n  \"use strict\";\n  var __exports__;\n  var AST = {\n    Program: function(statements, blockParams, strip, locInfo) {\n      this.loc = locInfo;\n      this.type = 'Program';\n      this.body = statements;\n\n      this.blockParams = blockParams;\n      this.strip = strip;\n    },\n\n    MustacheStatement: function(path, params, hash, escaped, strip, locInfo) {\n      this.loc = locInfo;\n      this.type = 'MustacheStatement';\n\n      this.path = path;\n      this.params = params || [];\n      this.hash = hash;\n      this.escaped = escaped;\n\n      this.strip = strip;\n    },\n\n    BlockStatement: function(path, params, hash, program, inverse, openStrip, inverseStrip, closeStrip, locInfo) {\n      this.loc = locInfo;\n      this.type = 'BlockStatement';\n\n      this.path = path;\n      this.params = params || [];\n      this.hash = hash;\n      this.program  = program;\n      this.inverse  = inverse;\n\n      this.openStrip = openStrip;\n      this.inverseStrip = inverseStrip;\n      this.closeStrip = closeStrip;\n    },\n\n    PartialStatement: function(name, params, hash, strip, locInfo) {\n      this.loc = locInfo;\n      this.type = 'PartialStatement';\n\n      this.name = name;\n      this.params = params || [];\n      this.hash = hash;\n\n      this.indent = '';\n      this.strip = strip;\n    },\n\n    ContentStatement: function(string, locInfo) {\n      this.loc = locInfo;\n      this.type = 'ContentStatement';\n      this.original = this.value = string;\n    },\n\n    CommentStatement: function(comment, strip, locInfo) {\n      this.loc = locInfo;\n      this.type = 'CommentStatement';\n      this.value = comment;\n\n      this.strip = strip;\n    },\n\n    SubExpression: function(path, params, hash, locInfo) {\n      this.loc = locInfo;\n\n      this.type = 'SubExpression';\n      this.path = path;\n      this.params = params || [];\n      this.hash = hash;\n    },\n\n    PathExpression: function(data, depth, parts, original, locInfo) {\n      this.loc = locInfo;\n      this.type = 'PathExpression';\n\n      this.data = data;\n      this.original = original;\n      this.parts    = parts;\n      this.depth    = depth;\n    },\n\n    StringLiteral: function(string, locInfo) {\n      this.loc = locInfo;\n      this.type = 'StringLiteral';\n      this.original =\n        this.value = string;\n    },\n\n    NumberLiteral: function(number, locInfo) {\n      this.loc = locInfo;\n      this.type = 'NumberLiteral';\n      this.original =\n        this.value = Number(number);\n    },\n\n    BooleanLiteral: function(bool, locInfo) {\n      this.loc = locInfo;\n      this.type = 'BooleanLiteral';\n      this.original =\n        this.value = bool === 'true';\n    },\n\n    Hash: function(pairs, locInfo) {\n      this.loc = locInfo;\n      this.type = 'Hash';\n      this.pairs = pairs;\n    },\n    HashPair: function(key, value, locInfo) {\n      this.loc = locInfo;\n      this.type = 'HashPair';\n      this.key = key;\n      this.value = value;\n    },\n\n    // Public API used to evaluate derived attributes regarding AST nodes\n    helpers: {\n      // a mustache is definitely a helper if:\n      // * it is an eligible helper, and\n      // * it has at least one parameter or hash segment\n      // TODO: Make these public utility methods\n      helperExpression: function(node) {\n        return !!(node.type === 'SubExpression' || node.params.length || node.hash);\n      },\n\n      scopedId: function(path) {\n        return (/^\\.|this\\b/).test(path.original);\n      },\n\n      // an ID is simple if it only has one part, and that part is not\n      // `..` or `this`.\n      simpleId: function(path) {\n        return path.parts.length === 1 && !AST.helpers.scopedId(path) && !path.depth;\n      }\n    }\n  };\n\n\n  // Must be exported as an object rather than the root of the module as the jison lexer\n  // must modify the object to operate properly.\n  __exports__ = AST;\n  return __exports__;\n})();\n\n// handlebars/compiler/parser.js\nvar __module9__ = (function() {\n  \"use strict\";\n  var __exports__;\n  /* jshint ignore:start */\n  /* istanbul ignore next */\n  /* Jison generated parser */\n  var handlebars = (function(){\n  var parser = {trace: function trace() { },\n  yy: {},\n  symbols_: {\"error\":2,\"root\":3,\"program\":4,\"EOF\":5,\"program_repetition0\":6,\"statement\":7,\"mustache\":8,\"block\":9,\"rawBlock\":10,\"partial\":11,\"content\":12,\"COMMENT\":13,\"CONTENT\":14,\"openRawBlock\":15,\"END_RAW_BLOCK\":16,\"OPEN_RAW_BLOCK\":17,\"helperName\":18,\"openRawBlock_repetition0\":19,\"openRawBlock_option0\":20,\"CLOSE_RAW_BLOCK\":21,\"openBlock\":22,\"block_option0\":23,\"closeBlock\":24,\"openInverse\":25,\"block_option1\":26,\"OPEN_BLOCK\":27,\"openBlock_repetition0\":28,\"openBlock_option0\":29,\"openBlock_option1\":30,\"CLOSE\":31,\"OPEN_INVERSE\":32,\"openInverse_repetition0\":33,\"openInverse_option0\":34,\"openInverse_option1\":35,\"openInverseChain\":36,\"OPEN_INVERSE_CHAIN\":37,\"openInverseChain_repetition0\":38,\"openInverseChain_option0\":39,\"openInverseChain_option1\":40,\"inverseAndProgram\":41,\"INVERSE\":42,\"inverseChain\":43,\"inverseChain_option0\":44,\"OPEN_ENDBLOCK\":45,\"OPEN\":46,\"mustache_repetition0\":47,\"mustache_option0\":48,\"OPEN_UNESCAPED\":49,\"mustache_repetition1\":50,\"mustache_option1\":51,\"CLOSE_UNESCAPED\":52,\"OPEN_PARTIAL\":53,\"partialName\":54,\"partial_repetition0\":55,\"partial_option0\":56,\"param\":57,\"sexpr\":58,\"OPEN_SEXPR\":59,\"sexpr_repetition0\":60,\"sexpr_option0\":61,\"CLOSE_SEXPR\":62,\"hash\":63,\"hash_repetition_plus0\":64,\"hashSegment\":65,\"ID\":66,\"EQUALS\":67,\"blockParams\":68,\"OPEN_BLOCK_PARAMS\":69,\"blockParams_repetition_plus0\":70,\"CLOSE_BLOCK_PARAMS\":71,\"path\":72,\"dataName\":73,\"STRING\":74,\"NUMBER\":75,\"BOOLEAN\":76,\"DATA\":77,\"pathSegments\":78,\"SEP\":79,\"$accept\":0,\"$end\":1},\n  terminals_: {2:\"error\",5:\"EOF\",13:\"COMMENT\",14:\"CONTENT\",16:\"END_RAW_BLOCK\",17:\"OPEN_RAW_BLOCK\",21:\"CLOSE_RAW_BLOCK\",27:\"OPEN_BLOCK\",31:\"CLOSE\",32:\"OPEN_INVERSE\",37:\"OPEN_INVERSE_CHAIN\",42:\"INVERSE\",45:\"OPEN_ENDBLOCK\",46:\"OPEN\",49:\"OPEN_UNESCAPED\",52:\"CLOSE_UNESCAPED\",53:\"OPEN_PARTIAL\",59:\"OPEN_SEXPR\",62:\"CLOSE_SEXPR\",66:\"ID\",67:\"EQUALS\",69:\"OPEN_BLOCK_PARAMS\",71:\"CLOSE_BLOCK_PARAMS\",74:\"STRING\",75:\"NUMBER\",76:\"BOOLEAN\",77:\"DATA\",79:\"SEP\"},\n  productions_: [0,[3,2],[4,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[12,1],[10,3],[15,5],[9,4],[9,4],[22,6],[25,6],[36,6],[41,2],[43,3],[43,1],[24,3],[8,5],[8,5],[11,5],[57,1],[57,1],[58,5],[63,1],[65,3],[68,3],[18,1],[18,1],[18,1],[18,1],[18,1],[54,1],[54,1],[73,2],[72,1],[78,3],[78,1],[6,0],[6,2],[19,0],[19,2],[20,0],[20,1],[23,0],[23,1],[26,0],[26,1],[28,0],[28,2],[29,0],[29,1],[30,0],[30,1],[33,0],[33,2],[34,0],[34,1],[35,0],[35,1],[38,0],[38,2],[39,0],[39,1],[40,0],[40,1],[44,0],[44,1],[47,0],[47,2],[48,0],[48,1],[50,0],[50,2],[51,0],[51,1],[55,0],[55,2],[56,0],[56,1],[60,0],[60,2],[61,0],[61,1],[64,1],[64,2],[70,1],[70,2]],\n  performAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {\n\n  var $0 = $$.length - 1;\n  switch (yystate) {\n  case 1: return $$[$0-1]; \n  break;\n  case 2:this.$ = new yy.Program($$[$0], null, {}, yy.locInfo(this._$));\n  break;\n  case 3:this.$ = $$[$0];\n  break;\n  case 4:this.$ = $$[$0];\n  break;\n  case 5:this.$ = $$[$0];\n  break;\n  case 6:this.$ = $$[$0];\n  break;\n  case 7:this.$ = $$[$0];\n  break;\n  case 8:this.$ = new yy.CommentStatement(yy.stripComment($$[$0]), yy.stripFlags($$[$0], $$[$0]), yy.locInfo(this._$));\n  break;\n  case 9:this.$ = new yy.ContentStatement($$[$0], yy.locInfo(this._$));\n  break;\n  case 10:this.$ = yy.prepareRawBlock($$[$0-2], $$[$0-1], $$[$0], this._$);\n  break;\n  case 11:this.$ = { path: $$[$0-3], params: $$[$0-2], hash: $$[$0-1] };\n  break;\n  case 12:this.$ = yy.prepareBlock($$[$0-3], $$[$0-2], $$[$0-1], $$[$0], false, this._$);\n  break;\n  case 13:this.$ = yy.prepareBlock($$[$0-3], $$[$0-2], $$[$0-1], $$[$0], true, this._$);\n  break;\n  case 14:this.$ = { path: $$[$0-4], params: $$[$0-3], hash: $$[$0-2], blockParams: $$[$0-1], strip: yy.stripFlags($$[$0-5], $$[$0]) };\n  break;\n  case 15:this.$ = { path: $$[$0-4], params: $$[$0-3], hash: $$[$0-2], blockParams: $$[$0-1], strip: yy.stripFlags($$[$0-5], $$[$0]) };\n  break;\n  case 16:this.$ = { path: $$[$0-4], params: $$[$0-3], hash: $$[$0-2], blockParams: $$[$0-1], strip: yy.stripFlags($$[$0-5], $$[$0]) };\n  break;\n  case 17:this.$ = { strip: yy.stripFlags($$[$0-1], $$[$0-1]), program: $$[$0] };\n  break;\n  case 18:\n      var inverse = yy.prepareBlock($$[$0-2], $$[$0-1], $$[$0], $$[$0], false, this._$),\n          program = new yy.Program([inverse], null, {}, yy.locInfo(this._$));\n      program.chained = true;\n\n      this.$ = { strip: $$[$0-2].strip, program: program, chain: true };\n    \n  break;\n  case 19:this.$ = $$[$0];\n  break;\n  case 20:this.$ = {path: $$[$0-1], strip: yy.stripFlags($$[$0-2], $$[$0])};\n  break;\n  case 21:this.$ = yy.prepareMustache($$[$0-3], $$[$0-2], $$[$0-1], $$[$0-4], yy.stripFlags($$[$0-4], $$[$0]), this._$);\n  break;\n  case 22:this.$ = yy.prepareMustache($$[$0-3], $$[$0-2], $$[$0-1], $$[$0-4], yy.stripFlags($$[$0-4], $$[$0]), this._$);\n  break;\n  case 23:this.$ = new yy.PartialStatement($$[$0-3], $$[$0-2], $$[$0-1], yy.stripFlags($$[$0-4], $$[$0]), yy.locInfo(this._$));\n  break;\n  case 24:this.$ = $$[$0];\n  break;\n  case 25:this.$ = $$[$0];\n  break;\n  case 26:this.$ = new yy.SubExpression($$[$0-3], $$[$0-2], $$[$0-1], yy.locInfo(this._$));\n  break;\n  case 27:this.$ = new yy.Hash($$[$0], yy.locInfo(this._$));\n  break;\n  case 28:this.$ = new yy.HashPair($$[$0-2], $$[$0], yy.locInfo(this._$));\n  break;\n  case 29:this.$ = $$[$0-1];\n  break;\n  case 30:this.$ = $$[$0];\n  break;\n  case 31:this.$ = $$[$0];\n  break;\n  case 32:this.$ = new yy.StringLiteral($$[$0], yy.locInfo(this._$));\n  break;\n  case 33:this.$ = new yy.NumberLiteral($$[$0], yy.locInfo(this._$));\n  break;\n  case 34:this.$ = new yy.BooleanLiteral($$[$0], yy.locInfo(this._$));\n  break;\n  case 35:this.$ = $$[$0];\n  break;\n  case 36:this.$ = $$[$0];\n  break;\n  case 37:this.$ = yy.preparePath(true, $$[$0], this._$);\n  break;\n  case 38:this.$ = yy.preparePath(false, $$[$0], this._$);\n  break;\n  case 39: $$[$0-2].push({part: $$[$0], separator: $$[$0-1]}); this.$ = $$[$0-2]; \n  break;\n  case 40:this.$ = [{part: $$[$0]}];\n  break;\n  case 41:this.$ = [];\n  break;\n  case 42:$$[$0-1].push($$[$0]);\n  break;\n  case 43:this.$ = [];\n  break;\n  case 44:$$[$0-1].push($$[$0]);\n  break;\n  case 51:this.$ = [];\n  break;\n  case 52:$$[$0-1].push($$[$0]);\n  break;\n  case 57:this.$ = [];\n  break;\n  case 58:$$[$0-1].push($$[$0]);\n  break;\n  case 63:this.$ = [];\n  break;\n  case 64:$$[$0-1].push($$[$0]);\n  break;\n  case 71:this.$ = [];\n  break;\n  case 72:$$[$0-1].push($$[$0]);\n  break;\n  case 75:this.$ = [];\n  break;\n  case 76:$$[$0-1].push($$[$0]);\n  break;\n  case 79:this.$ = [];\n  break;\n  case 80:$$[$0-1].push($$[$0]);\n  break;\n  case 83:this.$ = [];\n  break;\n  case 84:$$[$0-1].push($$[$0]);\n  break;\n  case 87:this.$ = [$$[$0]];\n  break;\n  case 88:$$[$0-1].push($$[$0]);\n  break;\n  case 89:this.$ = [$$[$0]];\n  break;\n  case 90:$$[$0-1].push($$[$0]);\n  break;\n  }\n  },\n  table: [{3:1,4:2,5:[2,41],6:3,13:[2,41],14:[2,41],17:[2,41],27:[2,41],32:[2,41],46:[2,41],49:[2,41],53:[2,41]},{1:[3]},{5:[1,4]},{5:[2,2],7:5,8:6,9:7,10:8,11:9,12:10,13:[1,11],14:[1,18],15:16,17:[1,21],22:14,25:15,27:[1,19],32:[1,20],37:[2,2],42:[2,2],45:[2,2],46:[1,12],49:[1,13],53:[1,17]},{1:[2,1]},{5:[2,42],13:[2,42],14:[2,42],17:[2,42],27:[2,42],32:[2,42],37:[2,42],42:[2,42],45:[2,42],46:[2,42],49:[2,42],53:[2,42]},{5:[2,3],13:[2,3],14:[2,3],17:[2,3],27:[2,3],32:[2,3],37:[2,3],42:[2,3],45:[2,3],46:[2,3],49:[2,3],53:[2,3]},{5:[2,4],13:[2,4],14:[2,4],17:[2,4],27:[2,4],32:[2,4],37:[2,4],42:[2,4],45:[2,4],46:[2,4],49:[2,4],53:[2,4]},{5:[2,5],13:[2,5],14:[2,5],17:[2,5],27:[2,5],32:[2,5],37:[2,5],42:[2,5],45:[2,5],46:[2,5],49:[2,5],53:[2,5]},{5:[2,6],13:[2,6],14:[2,6],17:[2,6],27:[2,6],32:[2,6],37:[2,6],42:[2,6],45:[2,6],46:[2,6],49:[2,6],53:[2,6]},{5:[2,7],13:[2,7],14:[2,7],17:[2,7],27:[2,7],32:[2,7],37:[2,7],42:[2,7],45:[2,7],46:[2,7],49:[2,7],53:[2,7]},{5:[2,8],13:[2,8],14:[2,8],17:[2,8],27:[2,8],32:[2,8],37:[2,8],42:[2,8],45:[2,8],46:[2,8],49:[2,8],53:[2,8]},{18:22,66:[1,30],72:23,73:24,74:[1,25],75:[1,26],76:[1,27],77:[1,29],78:28},{18:31,66:[1,30],72:23,73:24,74:[1,25],75:[1,26],76:[1,27],77:[1,29],78:28},{4:32,6:3,13:[2,41],14:[2,41],17:[2,41],27:[2,41],32:[2,41],37:[2,41],42:[2,41],45:[2,41],46:[2,41],49:[2,41],53:[2,41]},{4:33,6:3,13:[2,41],14:[2,41],17:[2,41],27:[2,41],32:[2,41],42:[2,41],45:[2,41],46:[2,41],49:[2,41],53:[2,41]},{12:34,14:[1,18]},{18:36,54:35,58:37,59:[1,38],66:[1,30],72:23,73:24,74:[1,25],75:[1,26],76:[1,27],77:[1,29],78:28},{5:[2,9],13:[2,9],14:[2,9],16:[2,9],17:[2,9],27:[2,9],32:[2,9],37:[2,9],42:[2,9],45:[2,9],46:[2,9],49:[2,9],53:[2,9]},{18:39,66:[1,30],72:23,73:24,74:[1,25],75:[1,26],76:[1,27],77:[1,29],78:28},{18:40,66:[1,30],72:23,73:24,74:[1,25],75:[1,26],76:[1,27],77:[1,29],78:28},{18:41,66:[1,30],72:23,73:24,74:[1,25],75:[1,26],76:[1,27],77:[1,29],78:28},{31:[2,71],47:42,59:[2,71],66:[2,71],74:[2,71],75:[2,71],76:[2,71],77:[2,71]},{21:[2,30],31:[2,30],52:[2,30],59:[2,30],62:[2,30],66:[2,30],69:[2,30],74:[2,30],75:[2,30],76:[2,30],77:[2,30]},{21:[2,31],31:[2,31],52:[2,31],59:[2,31],62:[2,31],66:[2,31],69:[2,31],74:[2,31],75:[2,31],76:[2,31],77:[2,31]},{21:[2,32],31:[2,32],52:[2,32],59:[2,32],62:[2,32],66:[2,32],69:[2,32],74:[2,32],75:[2,32],76:[2,32],77:[2,32]},{21:[2,33],31:[2,33],52:[2,33],59:[2,33],62:[2,33],66:[2,33],69:[2,33],74:[2,33],75:[2,33],76:[2,33],77:[2,33]},{21:[2,34],31:[2,34],52:[2,34],59:[2,34],62:[2,34],66:[2,34],69:[2,34],74:[2,34],75:[2,34],76:[2,34],77:[2,34]},{21:[2,38],31:[2,38],52:[2,38],59:[2,38],62:[2,38],66:[2,38],69:[2,38],74:[2,38],75:[2,38],76:[2,38],77:[2,38],79:[1,43]},{66:[1,30],78:44},{21:[2,40],31:[2,40],52:[2,40],59:[2,40],62:[2,40],66:[2,40],69:[2,40],74:[2,40],75:[2,40],76:[2,40],77:[2,40],79:[2,40]},{50:45,52:[2,75],59:[2,75],66:[2,75],74:[2,75],75:[2,75],76:[2,75],77:[2,75]},{23:46,36:48,37:[1,50],41:49,42:[1,51],43:47,45:[2,47]},{26:52,41:53,42:[1,51],45:[2,49]},{16:[1,54]},{31:[2,79],55:55,59:[2,79],66:[2,79],74:[2,79],75:[2,79],76:[2,79],77:[2,79]},{31:[2,35],59:[2,35],66:[2,35],74:[2,35],75:[2,35],76:[2,35],77:[2,35]},{31:[2,36],59:[2,36],66:[2,36],74:[2,36],75:[2,36],76:[2,36],77:[2,36]},{18:56,66:[1,30],72:23,73:24,74:[1,25],75:[1,26],76:[1,27],77:[1,29],78:28},{28:57,31:[2,51],59:[2,51],66:[2,51],69:[2,51],74:[2,51],75:[2,51],76:[2,51],77:[2,51]},{31:[2,57],33:58,59:[2,57],66:[2,57],69:[2,57],74:[2,57],75:[2,57],76:[2,57],77:[2,57]},{19:59,21:[2,43],59:[2,43],66:[2,43],74:[2,43],75:[2,43],76:[2,43],77:[2,43]},{18:63,31:[2,73],48:60,57:61,58:64,59:[1,38],63:62,64:65,65:66,66:[1,67],72:23,73:24,74:[1,25],75:[1,26],76:[1,27],77:[1,29],78:28},{66:[1,68]},{21:[2,37],31:[2,37],52:[2,37],59:[2,37],62:[2,37],66:[2,37],69:[2,37],74:[2,37],75:[2,37],76:[2,37],77:[2,37],79:[1,43]},{18:63,51:69,52:[2,77],57:70,58:64,59:[1,38],63:71,64:65,65:66,66:[1,67],72:23,73:24,74:[1,25],75:[1,26],76:[1,27],77:[1,29],78:28},{24:72,45:[1,73]},{45:[2,48]},{4:74,6:3,13:[2,41],14:[2,41],17:[2,41],27:[2,41],32:[2,41],37:[2,41],42:[2,41],45:[2,41],46:[2,41],49:[2,41],53:[2,41]},{45:[2,19]},{18:75,66:[1,30],72:23,73:24,74:[1,25],75:[1,26],76:[1,27],77:[1,29],78:28},{4:76,6:3,13:[2,41],14:[2,41],17:[2,41],27:[2,41],32:[2,41],45:[2,41],46:[2,41],49:[2,41],53:[2,41]},{24:77,45:[1,73]},{45:[2,50]},{5:[2,10],13:[2,10],14:[2,10],17:[2,10],27:[2,10],32:[2,10],37:[2,10],42:[2,10],45:[2,10],46:[2,10],49:[2,10],53:[2,10]},{18:63,31:[2,81],56:78,57:79,58:64,59:[1,38],63:80,64:65,65:66,66:[1,67],72:23,73:24,74:[1,25],75:[1,26],76:[1,27],77:[1,29],78:28},{59:[2,83],60:81,62:[2,83],66:[2,83],74:[2,83],75:[2,83],76:[2,83],77:[2,83]},{18:63,29:82,31:[2,53],57:83,58:64,59:[1,38],63:84,64:65,65:66,66:[1,67],69:[2,53],72:23,73:24,74:[1,25],75:[1,26],76:[1,27],77:[1,29],78:28},{18:63,31:[2,59],34:85,57:86,58:64,59:[1,38],63:87,64:65,65:66,66:[1,67],69:[2,59],72:23,73:24,74:[1,25],75:[1,26],76:[1,27],77:[1,29],78:28},{18:63,20:88,21:[2,45],57:89,58:64,59:[1,38],63:90,64:65,65:66,66:[1,67],72:23,73:24,74:[1,25],75:[1,26],76:[1,27],77:[1,29],78:28},{31:[1,91]},{31:[2,72],59:[2,72],66:[2,72],74:[2,72],75:[2,72],76:[2,72],77:[2,72]},{31:[2,74]},{21:[2,24],31:[2,24],52:[2,24],59:[2,24],62:[2,24],66:[2,24],69:[2,24],74:[2,24],75:[2,24],76:[2,24],77:[2,24]},{21:[2,25],31:[2,25],52:[2,25],59:[2,25],62:[2,25],66:[2,25],69:[2,25],74:[2,25],75:[2,25],76:[2,25],77:[2,25]},{21:[2,27],31:[2,27],52:[2,27],62:[2,27],65:92,66:[1,93],69:[2,27]},{21:[2,87],31:[2,87],52:[2,87],62:[2,87],66:[2,87],69:[2,87]},{21:[2,40],31:[2,40],52:[2,40],59:[2,40],62:[2,40],66:[2,40],67:[1,94],69:[2,40],74:[2,40],75:[2,40],76:[2,40],77:[2,40],79:[2,40]},{21:[2,39],31:[2,39],52:[2,39],59:[2,39],62:[2,39],66:[2,39],69:[2,39],74:[2,39],75:[2,39],76:[2,39],77:[2,39],79:[2,39]},{52:[1,95]},{52:[2,76],59:[2,76],66:[2,76],74:[2,76],75:[2,76],76:[2,76],77:[2,76]},{52:[2,78]},{5:[2,12],13:[2,12],14:[2,12],17:[2,12],27:[2,12],32:[2,12],37:[2,12],42:[2,12],45:[2,12],46:[2,12],49:[2,12],53:[2,12]},{18:96,66:[1,30],72:23,73:24,74:[1,25],75:[1,26],76:[1,27],77:[1,29],78:28},{36:48,37:[1,50],41:49,42:[1,51],43:98,44:97,45:[2,69]},{31:[2,63],38:99,59:[2,63],66:[2,63],69:[2,63],74:[2,63],75:[2,63],76:[2,63],77:[2,63]},{45:[2,17]},{5:[2,13],13:[2,13],14:[2,13],17:[2,13],27:[2,13],32:[2,13],37:[2,13],42:[2,13],45:[2,13],46:[2,13],49:[2,13],53:[2,13]},{31:[1,100]},{31:[2,80],59:[2,80],66:[2,80],74:[2,80],75:[2,80],76:[2,80],77:[2,80]},{31:[2,82]},{18:63,57:102,58:64,59:[1,38],61:101,62:[2,85],63:103,64:65,65:66,66:[1,67],72:23,73:24,74:[1,25],75:[1,26],76:[1,27],77:[1,29],78:28},{30:104,31:[2,55],68:105,69:[1,106]},{31:[2,52],59:[2,52],66:[2,52],69:[2,52],74:[2,52],75:[2,52],76:[2,52],77:[2,52]},{31:[2,54],69:[2,54]},{31:[2,61],35:107,68:108,69:[1,106]},{31:[2,58],59:[2,58],66:[2,58],69:[2,58],74:[2,58],75:[2,58],76:[2,58],77:[2,58]},{31:[2,60],69:[2,60]},{21:[1,109]},{21:[2,44],59:[2,44],66:[2,44],74:[2,44],75:[2,44],76:[2,44],77:[2,44]},{21:[2,46]},{5:[2,21],13:[2,21],14:[2,21],17:[2,21],27:[2,21],32:[2,21],37:[2,21],42:[2,21],45:[2,21],46:[2,21],49:[2,21],53:[2,21]},{21:[2,88],31:[2,88],52:[2,88],62:[2,88],66:[2,88],69:[2,88]},{67:[1,94]},{18:63,57:110,58:64,59:[1,38],66:[1,30],72:23,73:24,74:[1,25],75:[1,26],76:[1,27],77:[1,29],78:28},{5:[2,22],13:[2,22],14:[2,22],17:[2,22],27:[2,22],32:[2,22],37:[2,22],42:[2,22],45:[2,22],46:[2,22],49:[2,22],53:[2,22]},{31:[1,111]},{45:[2,18]},{45:[2,70]},{18:63,31:[2,65],39:112,57:113,58:64,59:[1,38],63:114,64:65,65:66,66:[1,67],69:[2,65],72:23,73:24,74:[1,25],75:[1,26],76:[1,27],77:[1,29],78:28},{5:[2,23],13:[2,23],14:[2,23],17:[2,23],27:[2,23],32:[2,23],37:[2,23],42:[2,23],45:[2,23],46:[2,23],49:[2,23],53:[2,23]},{62:[1,115]},{59:[2,84],62:[2,84],66:[2,84],74:[2,84],75:[2,84],76:[2,84],77:[2,84]},{62:[2,86]},{31:[1,116]},{31:[2,56]},{66:[1,118],70:117},{31:[1,119]},{31:[2,62]},{14:[2,11]},{21:[2,28],31:[2,28],52:[2,28],62:[2,28],66:[2,28],69:[2,28]},{5:[2,20],13:[2,20],14:[2,20],17:[2,20],27:[2,20],32:[2,20],37:[2,20],42:[2,20],45:[2,20],46:[2,20],49:[2,20],53:[2,20]},{31:[2,67],40:120,68:121,69:[1,106]},{31:[2,64],59:[2,64],66:[2,64],69:[2,64],74:[2,64],75:[2,64],76:[2,64],77:[2,64]},{31:[2,66],69:[2,66]},{21:[2,26],31:[2,26],52:[2,26],59:[2,26],62:[2,26],66:[2,26],69:[2,26],74:[2,26],75:[2,26],76:[2,26],77:[2,26]},{13:[2,14],14:[2,14],17:[2,14],27:[2,14],32:[2,14],37:[2,14],42:[2,14],45:[2,14],46:[2,14],49:[2,14],53:[2,14]},{66:[1,123],71:[1,122]},{66:[2,89],71:[2,89]},{13:[2,15],14:[2,15],17:[2,15],27:[2,15],32:[2,15],42:[2,15],45:[2,15],46:[2,15],49:[2,15],53:[2,15]},{31:[1,124]},{31:[2,68]},{31:[2,29]},{66:[2,90],71:[2,90]},{13:[2,16],14:[2,16],17:[2,16],27:[2,16],32:[2,16],37:[2,16],42:[2,16],45:[2,16],46:[2,16],49:[2,16],53:[2,16]}],\n  defaultActions: {4:[2,1],47:[2,48],49:[2,19],53:[2,50],62:[2,74],71:[2,78],76:[2,17],80:[2,82],90:[2,46],97:[2,18],98:[2,70],103:[2,86],105:[2,56],108:[2,62],109:[2,11],121:[2,68],122:[2,29]},\n  parseError: function parseError(str, hash) {\n      throw new Error(str);\n  },\n  parse: function parse(input) {\n      var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n      this.lexer.setInput(input);\n      this.lexer.yy = this.yy;\n      this.yy.lexer = this.lexer;\n      this.yy.parser = this;\n      if (typeof this.lexer.yylloc == \"undefined\")\n          this.lexer.yylloc = {};\n      var yyloc = this.lexer.yylloc;\n      lstack.push(yyloc);\n      var ranges = this.lexer.options && this.lexer.options.ranges;\n      if (typeof this.yy.parseError === \"function\")\n          this.parseError = this.yy.parseError;\n      function popStack(n) {\n          stack.length = stack.length - 2 * n;\n          vstack.length = vstack.length - n;\n          lstack.length = lstack.length - n;\n      }\n      function lex() {\n          var token;\n          token = self.lexer.lex() || 1;\n          if (typeof token !== \"number\") {\n              token = self.symbols_[token] || token;\n          }\n          return token;\n      }\n      var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n      while (true) {\n          state = stack[stack.length - 1];\n          if (this.defaultActions[state]) {\n              action = this.defaultActions[state];\n          } else {\n              if (symbol === null || typeof symbol == \"undefined\") {\n                  symbol = lex();\n              }\n              action = table[state] && table[state][symbol];\n          }\n          if (typeof action === \"undefined\" || !action.length || !action[0]) {\n              var errStr = \"\";\n              if (!recovering) {\n                  expected = [];\n                  for (p in table[state])\n                      if (this.terminals_[p] && p > 2) {\n                          expected.push(\"'\" + this.terminals_[p] + \"'\");\n                      }\n                  if (this.lexer.showPosition) {\n                      errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + this.lexer.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n                  } else {\n                      errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == 1?\"end of input\":\"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n                  }\n                  this.parseError(errStr, {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});\n              }\n          }\n          if (action[0] instanceof Array && action.length > 1) {\n              throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n          }\n          switch (action[0]) {\n          case 1:\n              stack.push(symbol);\n              vstack.push(this.lexer.yytext);\n              lstack.push(this.lexer.yylloc);\n              stack.push(action[1]);\n              symbol = null;\n              if (!preErrorSymbol) {\n                  yyleng = this.lexer.yyleng;\n                  yytext = this.lexer.yytext;\n                  yylineno = this.lexer.yylineno;\n                  yyloc = this.lexer.yylloc;\n                  if (recovering > 0)\n                      recovering--;\n              } else {\n                  symbol = preErrorSymbol;\n                  preErrorSymbol = null;\n              }\n              break;\n          case 2:\n              len = this.productions_[action[1]][1];\n              yyval.$ = vstack[vstack.length - len];\n              yyval._$ = {first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column};\n              if (ranges) {\n                  yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n              }\n              r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);\n              if (typeof r !== \"undefined\") {\n                  return r;\n              }\n              if (len) {\n                  stack = stack.slice(0, -1 * len * 2);\n                  vstack = vstack.slice(0, -1 * len);\n                  lstack = lstack.slice(0, -1 * len);\n              }\n              stack.push(this.productions_[action[1]][0]);\n              vstack.push(yyval.$);\n              lstack.push(yyval._$);\n              newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n              stack.push(newState);\n              break;\n          case 3:\n              return true;\n          }\n      }\n      return true;\n  }\n  };\n  /* Jison generated lexer */\n  var lexer = (function(){\n  var lexer = ({EOF:1,\n  parseError:function parseError(str, hash) {\n          if (this.yy.parser) {\n              this.yy.parser.parseError(str, hash);\n          } else {\n              throw new Error(str);\n          }\n      },\n  setInput:function (input) {\n          this._input = input;\n          this._more = this._less = this.done = false;\n          this.yylineno = this.yyleng = 0;\n          this.yytext = this.matched = this.match = '';\n          this.conditionStack = ['INITIAL'];\n          this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};\n          if (this.options.ranges) this.yylloc.range = [0,0];\n          this.offset = 0;\n          return this;\n      },\n  input:function () {\n          var ch = this._input[0];\n          this.yytext += ch;\n          this.yyleng++;\n          this.offset++;\n          this.match += ch;\n          this.matched += ch;\n          var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n          if (lines) {\n              this.yylineno++;\n              this.yylloc.last_line++;\n          } else {\n              this.yylloc.last_column++;\n          }\n          if (this.options.ranges) this.yylloc.range[1]++;\n\n          this._input = this._input.slice(1);\n          return ch;\n      },\n  unput:function (ch) {\n          var len = ch.length;\n          var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n          this._input = ch + this._input;\n          this.yytext = this.yytext.substr(0, this.yytext.length-len-1);\n          //this.yyleng -= len;\n          this.offset -= len;\n          var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n          this.match = this.match.substr(0, this.match.length-1);\n          this.matched = this.matched.substr(0, this.matched.length-1);\n\n          if (lines.length-1) this.yylineno -= lines.length-1;\n          var r = this.yylloc.range;\n\n          this.yylloc = {first_line: this.yylloc.first_line,\n            last_line: this.yylineno+1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length:\n                this.yylloc.first_column - len\n            };\n\n          if (this.options.ranges) {\n              this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n          }\n          return this;\n      },\n  more:function () {\n          this._more = true;\n          return this;\n      },\n  less:function (n) {\n          this.unput(this.match.slice(n));\n      },\n  pastInput:function () {\n          var past = this.matched.substr(0, this.matched.length - this.match.length);\n          return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n      },\n  upcomingInput:function () {\n          var next = this.match;\n          if (next.length < 20) {\n              next += this._input.substr(0, 20-next.length);\n          }\n          return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\\n/g, \"\");\n      },\n  showPosition:function () {\n          var pre = this.pastInput();\n          var c = new Array(pre.length + 1).join(\"-\");\n          return pre + this.upcomingInput() + \"\\n\" + c+\"^\";\n      },\n  next:function () {\n          if (this.done) {\n              return this.EOF;\n          }\n          if (!this._input) this.done = true;\n\n          var token,\n              match,\n              tempMatch,\n              index,\n              col,\n              lines;\n          if (!this._more) {\n              this.yytext = '';\n              this.match = '';\n          }\n          var rules = this._currentRules();\n          for (var i=0;i < rules.length; i++) {\n              tempMatch = this._input.match(this.rules[rules[i]]);\n              if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                  match = tempMatch;\n                  index = i;\n                  if (!this.options.flex) break;\n              }\n          }\n          if (match) {\n              lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n              if (lines) this.yylineno += lines.length;\n              this.yylloc = {first_line: this.yylloc.last_line,\n                             last_line: this.yylineno+1,\n                             first_column: this.yylloc.last_column,\n                             last_column: lines ? lines[lines.length-1].length-lines[lines.length-1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length};\n              this.yytext += match[0];\n              this.match += match[0];\n              this.matches = match;\n              this.yyleng = this.yytext.length;\n              if (this.options.ranges) {\n                  this.yylloc.range = [this.offset, this.offset += this.yyleng];\n              }\n              this._more = false;\n              this._input = this._input.slice(match[0].length);\n              this.matched += match[0];\n              token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);\n              if (this.done && this._input) this.done = false;\n              if (token) return token;\n              else return;\n          }\n          if (this._input === \"\") {\n              return this.EOF;\n          } else {\n              return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\\n'+this.showPosition(),\n                      {text: \"\", token: null, line: this.yylineno});\n          }\n      },\n  lex:function lex() {\n          var r = this.next();\n          if (typeof r !== 'undefined') {\n              return r;\n          } else {\n              return this.lex();\n          }\n      },\n  begin:function begin(condition) {\n          this.conditionStack.push(condition);\n      },\n  popState:function popState() {\n          return this.conditionStack.pop();\n      },\n  _currentRules:function _currentRules() {\n          return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;\n      },\n  topState:function () {\n          return this.conditionStack[this.conditionStack.length-2];\n      },\n  pushState:function begin(condition) {\n          this.begin(condition);\n      }});\n  lexer.options = {};\n  lexer.performAction = function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\n\n\n  function strip(start, end) {\n    return yy_.yytext = yy_.yytext.substr(start, yy_.yyleng-end);\n  }\n\n\n  var YYSTATE=YY_START\n  switch($avoiding_name_collisions) {\n  case 0:\n                                     if(yy_.yytext.slice(-2) === \"\\\\\\\\\") {\n                                       strip(0,1);\n                                       this.begin(\"mu\");\n                                     } else if(yy_.yytext.slice(-1) === \"\\\\\") {\n                                       strip(0,1);\n                                       this.begin(\"emu\");\n                                     } else {\n                                       this.begin(\"mu\");\n                                     }\n                                     if(yy_.yytext) return 14;\n                                   \n  break;\n  case 1:return 14;\n  break;\n  case 2:\n                                     this.popState();\n                                     return 14;\n                                   \n  break;\n  case 3:\n                                    yy_.yytext = yy_.yytext.substr(5, yy_.yyleng-9);\n                                    this.popState();\n                                    return 16;\n                                   \n  break;\n  case 4: return 14; \n  break;\n  case 5:\n    this.popState();\n    return 13;\n\n  break;\n  case 6:return 59;\n  break;\n  case 7:return 62;\n  break;\n  case 8: return 17; \n  break;\n  case 9:\n                                    this.popState();\n                                    this.begin('raw');\n                                    return 21;\n                                   \n  break;\n  case 10:return 53;\n  break;\n  case 11:return 27;\n  break;\n  case 12:return 45;\n  break;\n  case 13:this.popState(); return 42;\n  break;\n  case 14:this.popState(); return 42;\n  break;\n  case 15:return 32;\n  break;\n  case 16:return 37;\n  break;\n  case 17:return 49;\n  break;\n  case 18:return 46;\n  break;\n  case 19:\n    this.unput(yy_.yytext);\n    this.popState();\n    this.begin('com');\n\n  break;\n  case 20:\n    this.popState();\n    return 13;\n\n  break;\n  case 21:return 46;\n  break;\n  case 22:return 67;\n  break;\n  case 23:return 66;\n  break;\n  case 24:return 66;\n  break;\n  case 25:return 79;\n  break;\n  case 26:// ignore whitespace\n  break;\n  case 27:this.popState(); return 52;\n  break;\n  case 28:this.popState(); return 31;\n  break;\n  case 29:yy_.yytext = strip(1,2).replace(/\\\\\"/g,'\"'); return 74;\n  break;\n  case 30:yy_.yytext = strip(1,2).replace(/\\\\'/g,\"'\"); return 74;\n  break;\n  case 31:return 77;\n  break;\n  case 32:return 76;\n  break;\n  case 33:return 76;\n  break;\n  case 34:return 75;\n  break;\n  case 35:return 69;\n  break;\n  case 36:return 71;\n  break;\n  case 37:return 66;\n  break;\n  case 38:yy_.yytext = strip(1,2); return 66;\n  break;\n  case 39:return 'INVALID';\n  break;\n  case 40:return 5;\n  break;\n  }\n  };\n  lexer.rules = [/^(?:[^\\x00]*?(?=(\\{\\{)))/,/^(?:[^\\x00]+)/,/^(?:[^\\x00]{2,}?(?=(\\{\\{|\\\\\\{\\{|\\\\\\\\\\{\\{|$)))/,/^(?:\\{\\{\\{\\{\\/[^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=[=}\\s\\/.])\\}\\}\\}\\})/,/^(?:[^\\x00]*?(?=(\\{\\{\\{\\{\\/)))/,/^(?:[\\s\\S]*?--(~)?\\}\\})/,/^(?:\\()/,/^(?:\\))/,/^(?:\\{\\{\\{\\{)/,/^(?:\\}\\}\\}\\})/,/^(?:\\{\\{(~)?>)/,/^(?:\\{\\{(~)?#)/,/^(?:\\{\\{(~)?\\/)/,/^(?:\\{\\{(~)?\\^\\s*(~)?\\}\\})/,/^(?:\\{\\{(~)?\\s*else\\s*(~)?\\}\\})/,/^(?:\\{\\{(~)?\\^)/,/^(?:\\{\\{(~)?\\s*else\\b)/,/^(?:\\{\\{(~)?\\{)/,/^(?:\\{\\{(~)?&)/,/^(?:\\{\\{(~)?!--)/,/^(?:\\{\\{(~)?![\\s\\S]*?\\}\\})/,/^(?:\\{\\{(~)?)/,/^(?:=)/,/^(?:\\.\\.)/,/^(?:\\.(?=([=~}\\s\\/.)|])))/,/^(?:[\\/.])/,/^(?:\\s+)/,/^(?:\\}(~)?\\}\\})/,/^(?:(~)?\\}\\})/,/^(?:\"(\\\\[\"]|[^\"])*\")/,/^(?:'(\\\\[']|[^'])*')/,/^(?:@)/,/^(?:true(?=([~}\\s)])))/,/^(?:false(?=([~}\\s)])))/,/^(?:-?[0-9]+(?:\\.[0-9]+)?(?=([~}\\s)])))/,/^(?:as\\s+\\|)/,/^(?:\\|)/,/^(?:([^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=([=~}\\s\\/.)|]))))/,/^(?:\\[[^\\]]*\\])/,/^(?:.)/,/^(?:$)/];\n  lexer.conditions = {\"mu\":{\"rules\":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],\"inclusive\":false},\"emu\":{\"rules\":[2],\"inclusive\":false},\"com\":{\"rules\":[5],\"inclusive\":false},\"raw\":{\"rules\":[3,4],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,1,40],\"inclusive\":true}};\n  return lexer;})()\n  parser.lexer = lexer;\n  function Parser () { this.yy = {}; }Parser.prototype = parser;parser.Parser = Parser;\n  return new Parser;\n  })();__exports__ = handlebars;\n  /* jshint ignore:end */\n  return __exports__;\n})();\n\n// handlebars/compiler/visitor.js\nvar __module11__ = (function(__dependency1__, __dependency2__) {\n  \"use strict\";\n  var __exports__;\n  var Exception = __dependency1__;\n  var AST = __dependency2__;\n\n  function Visitor() {\n    this.parents = [];\n  }\n\n  Visitor.prototype = {\n    constructor: Visitor,\n    mutating: false,\n\n    // Visits a given value. If mutating, will replace the value if necessary.\n    acceptKey: function(node, name) {\n      var value = this.accept(node[name]);\n      if (this.mutating) {\n        // Hacky sanity check:\n        if (value && (!value.type || !AST[value.type])) {\n          throw new Exception('Unexpected node type \"' + value.type + '\" found when accepting ' + name + ' on ' + node.type);\n        }\n        node[name] = value;\n      }\n    },\n\n    // Performs an accept operation with added sanity check to ensure\n    // required keys are not removed.\n    acceptRequired: function(node, name) {\n      this.acceptKey(node, name);\n\n      if (!node[name]) {\n        throw new Exception(node.type + ' requires ' + name);\n      }\n    },\n\n    // Traverses a given array. If mutating, empty respnses will be removed\n    // for child elements.\n    acceptArray: function(array) {\n      for (var i = 0, l = array.length; i < l; i++) {\n        this.acceptKey(array, i);\n\n        if (!array[i]) {\n          array.splice(i, 1);\n          i--;\n          l--;\n        }\n      }\n    },\n\n    accept: function(object) {\n      if (!object) {\n        return;\n      }\n\n      if (this.current) {\n        this.parents.unshift(this.current);\n      }\n      this.current = object;\n\n      var ret = this[object.type](object);\n\n      this.current = this.parents.shift();\n\n      if (!this.mutating || ret) {\n        return ret;\n      } else if (ret !== false) {\n        return object;\n      }\n    },\n\n    Program: function(program) {\n      this.acceptArray(program.body);\n    },\n\n    MustacheStatement: function(mustache) {\n      this.acceptRequired(mustache, 'path');\n      this.acceptArray(mustache.params);\n      this.acceptKey(mustache, 'hash');\n    },\n\n    BlockStatement: function(block) {\n      this.acceptRequired(block, 'path');\n      this.acceptArray(block.params);\n      this.acceptKey(block, 'hash');\n\n      this.acceptKey(block, 'program');\n      this.acceptKey(block, 'inverse');\n    },\n\n    PartialStatement: function(partial) {\n      this.acceptRequired(partial, 'name');\n      this.acceptArray(partial.params);\n      this.acceptKey(partial, 'hash');\n    },\n\n    ContentStatement: function(/* content */) {},\n    CommentStatement: function(/* comment */) {},\n\n    SubExpression: function(sexpr) {\n      this.acceptRequired(sexpr, 'path');\n      this.acceptArray(sexpr.params);\n      this.acceptKey(sexpr, 'hash');\n    },\n    PartialExpression: function(partial) {\n      this.acceptRequired(partial, 'name');\n      this.acceptArray(partial.params);\n      this.acceptKey(partial, 'hash');\n    },\n\n    PathExpression: function(/* path */) {},\n\n    StringLiteral: function(/* string */) {},\n    NumberLiteral: function(/* number */) {},\n    BooleanLiteral: function(/* bool */) {},\n\n    Hash: function(hash) {\n      this.acceptArray(hash.pairs);\n    },\n    HashPair: function(pair) {\n      this.acceptRequired(pair, 'value');\n    }\n  };\n\n  __exports__ = Visitor;\n  return __exports__;\n})(__module4__, __module7__);\n\n// handlebars/compiler/whitespace-control.js\nvar __module10__ = (function(__dependency1__) {\n  \"use strict\";\n  var __exports__;\n  var Visitor = __dependency1__;\n\n  function WhitespaceControl() {\n  }\n  WhitespaceControl.prototype = new Visitor();\n\n  WhitespaceControl.prototype.Program = function(program) {\n    var isRoot = !this.isRootSeen;\n    this.isRootSeen = true;\n\n    var body = program.body;\n    for (var i = 0, l = body.length; i < l; i++) {\n      var current = body[i],\n          strip = this.accept(current);\n\n      if (!strip) {\n        continue;\n      }\n\n      var _isPrevWhitespace = isPrevWhitespace(body, i, isRoot),\n          _isNextWhitespace = isNextWhitespace(body, i, isRoot),\n\n          openStandalone = strip.openStandalone && _isPrevWhitespace,\n          closeStandalone = strip.closeStandalone && _isNextWhitespace,\n          inlineStandalone = strip.inlineStandalone && _isPrevWhitespace && _isNextWhitespace;\n\n      if (strip.close) {\n        omitRight(body, i, true);\n      }\n      if (strip.open) {\n        omitLeft(body, i, true);\n      }\n\n      if (inlineStandalone) {\n        omitRight(body, i);\n\n        if (omitLeft(body, i)) {\n          // If we are on a standalone node, save the indent info for partials\n          if (current.type === 'PartialStatement') {\n            // Pull out the whitespace from the final line\n            current.indent = (/([ \\t]+$)/).exec(body[i-1].original)[1];\n          }\n        }\n      }\n      if (openStandalone) {\n        omitRight((current.program || current.inverse).body);\n\n        // Strip out the previous content node if it's whitespace only\n        omitLeft(body, i);\n      }\n      if (closeStandalone) {\n        // Always strip the next node\n        omitRight(body, i);\n\n        omitLeft((current.inverse || current.program).body);\n      }\n    }\n\n    return program;\n  };\n  WhitespaceControl.prototype.BlockStatement = function(block) {\n    this.accept(block.program);\n    this.accept(block.inverse);\n\n    // Find the inverse program that is involed with whitespace stripping.\n    var program = block.program || block.inverse,\n        inverse = block.program && block.inverse,\n        firstInverse = inverse,\n        lastInverse = inverse;\n\n    if (inverse && inverse.chained) {\n      firstInverse = inverse.body[0].program;\n\n      // Walk the inverse chain to find the last inverse that is actually in the chain.\n      while (lastInverse.chained) {\n        lastInverse = lastInverse.body[lastInverse.body.length-1].program;\n      }\n    }\n\n    var strip = {\n      open: block.openStrip.open,\n      close: block.closeStrip.close,\n\n      // Determine the standalone candiacy. Basically flag our content as being possibly standalone\n      // so our parent can determine if we actually are standalone\n      openStandalone: isNextWhitespace(program.body),\n      closeStandalone: isPrevWhitespace((firstInverse || program).body)\n    };\n\n    if (block.openStrip.close) {\n      omitRight(program.body, null, true);\n    }\n\n    if (inverse) {\n      var inverseStrip = block.inverseStrip;\n\n      if (inverseStrip.open) {\n        omitLeft(program.body, null, true);\n      }\n\n      if (inverseStrip.close) {\n        omitRight(firstInverse.body, null, true);\n      }\n      if (block.closeStrip.open) {\n        omitLeft(lastInverse.body, null, true);\n      }\n\n      // Find standalone else statments\n      if (isPrevWhitespace(program.body)\n          && isNextWhitespace(firstInverse.body)) {\n\n        omitLeft(program.body);\n        omitRight(firstInverse.body);\n      }\n    } else {\n      if (block.closeStrip.open) {\n        omitLeft(program.body, null, true);\n      }\n    }\n\n    return strip;\n  };\n\n  WhitespaceControl.prototype.MustacheStatement = function(mustache) {\n    return mustache.strip;\n  };\n\n  WhitespaceControl.prototype.PartialStatement = \n      WhitespaceControl.prototype.CommentStatement = function(node) {\n    /* istanbul ignore next */\n    var strip = node.strip || {};\n    return {\n      inlineStandalone: true,\n      open: strip.open,\n      close: strip.close\n    };\n  };\n\n\n  function isPrevWhitespace(body, i, isRoot) {\n    if (i === undefined) {\n      i = body.length;\n    }\n\n    // Nodes that end with newlines are considered whitespace (but are special\n    // cased for strip operations)\n    var prev = body[i-1],\n        sibling = body[i-2];\n    if (!prev) {\n      return isRoot;\n    }\n\n    if (prev.type === 'ContentStatement') {\n      return (sibling || !isRoot ? (/\\r?\\n\\s*?$/) : (/(^|\\r?\\n)\\s*?$/)).test(prev.original);\n    }\n  }\n  function isNextWhitespace(body, i, isRoot) {\n    if (i === undefined) {\n      i = -1;\n    }\n\n    var next = body[i+1],\n        sibling = body[i+2];\n    if (!next) {\n      return isRoot;\n    }\n\n    if (next.type === 'ContentStatement') {\n      return (sibling || !isRoot ? (/^\\s*?\\r?\\n/) : (/^\\s*?(\\r?\\n|$)/)).test(next.original);\n    }\n  }\n\n  // Marks the node to the right of the position as omitted.\n  // I.e. {{foo}}' ' will mark the ' ' node as omitted.\n  //\n  // If i is undefined, then the first child will be marked as such.\n  //\n  // If mulitple is truthy then all whitespace will be stripped out until non-whitespace\n  // content is met.\n  function omitRight(body, i, multiple) {\n    var current = body[i == null ? 0 : i + 1];\n    if (!current || current.type !== 'ContentStatement' || (!multiple && current.rightStripped)) {\n      return;\n    }\n\n    var original = current.value;\n    current.value = current.value.replace(multiple ? (/^\\s+/) : (/^[ \\t]*\\r?\\n?/), '');\n    current.rightStripped = current.value !== original;\n  }\n\n  // Marks the node to the left of the position as omitted.\n  // I.e. ' '{{foo}} will mark the ' ' node as omitted.\n  //\n  // If i is undefined then the last child will be marked as such.\n  //\n  // If mulitple is truthy then all whitespace will be stripped out until non-whitespace\n  // content is met.\n  function omitLeft(body, i, multiple) {\n    var current = body[i == null ? body.length - 1 : i - 1];\n    if (!current || current.type !== 'ContentStatement' || (!multiple && current.leftStripped)) {\n      return;\n    }\n\n    // We omit the last node if it's whitespace only and not preceeded by a non-content node.\n    var original = current.value;\n    current.value = current.value.replace(multiple ? (/\\s+$/) : (/[ \\t]+$/), '');\n    current.leftStripped = current.value !== original;\n    return current.leftStripped;\n  }\n\n  __exports__ = WhitespaceControl;\n  return __exports__;\n})(__module11__);\n\n// handlebars/compiler/helpers.js\nvar __module12__ = (function(__dependency1__) {\n  \"use strict\";\n  var __exports__ = {};\n  var Exception = __dependency1__;\n\n  function SourceLocation(source, locInfo) {\n    this.source = source;\n    this.start = {\n      line: locInfo.first_line,\n      column: locInfo.first_column\n    };\n    this.end = {\n      line: locInfo.last_line,\n      column: locInfo.last_column\n    };\n  }\n\n  __exports__.SourceLocation = SourceLocation;function stripFlags(open, close) {\n    return {\n      open: open.charAt(2) === '~',\n      close: close.charAt(close.length-3) === '~'\n    };\n  }\n\n  __exports__.stripFlags = stripFlags;function stripComment(comment) {\n    return comment.replace(/^\\{\\{~?\\!-?-?/, '')\n                  .replace(/-?-?~?\\}\\}$/, '');\n  }\n\n  __exports__.stripComment = stripComment;function preparePath(data, parts, locInfo) {\n    /*jshint -W040 */\n    locInfo = this.locInfo(locInfo);\n\n    var original = data ? '@' : '',\n        dig = [],\n        depth = 0,\n        depthString = '';\n\n    for(var i=0,l=parts.length; i<l; i++) {\n      var part = parts[i].part;\n      original += (parts[i].separator || '') + part;\n\n      if (part === '..' || part === '.' || part === 'this') {\n        if (dig.length > 0) {\n          throw new Exception('Invalid path: ' + original, {loc: locInfo});\n        } else if (part === '..') {\n          depth++;\n          depthString += '../';\n        }\n      } else {\n        dig.push(part);\n      }\n    }\n\n    return new this.PathExpression(data, depth, dig, original, locInfo);\n  }\n\n  __exports__.preparePath = preparePath;function prepareMustache(path, params, hash, open, strip, locInfo) {\n    /*jshint -W040 */\n    // Must use charAt to support IE pre-10\n    var escapeFlag = open.charAt(3) || open.charAt(2),\n        escaped = escapeFlag !== '{' && escapeFlag !== '&';\n\n    return new this.MustacheStatement(path, params, hash, escaped, strip, this.locInfo(locInfo));\n  }\n\n  __exports__.prepareMustache = prepareMustache;function prepareRawBlock(openRawBlock, content, close, locInfo) {\n    /*jshint -W040 */\n    if (openRawBlock.path.original !== close) {\n      var errorNode = {loc: openRawBlock.path.loc};\n\n      throw new Exception(openRawBlock.path.original + \" doesn't match \" + close, errorNode);\n    }\n\n    locInfo = this.locInfo(locInfo);\n    var program = new this.Program([content], null, {}, locInfo);\n\n    return new this.BlockStatement(\n        openRawBlock.path, openRawBlock.params, openRawBlock.hash,\n        program, undefined,\n        {}, {}, {},\n        locInfo);\n  }\n\n  __exports__.prepareRawBlock = prepareRawBlock;function prepareBlock(openBlock, program, inverseAndProgram, close, inverted, locInfo) {\n    /*jshint -W040 */\n    // When we are chaining inverse calls, we will not have a close path\n    if (close && close.path && openBlock.path.original !== close.path.original) {\n      var errorNode = {loc: openBlock.path.loc};\n\n      throw new Exception(openBlock.path.original + ' doesn\\'t match ' + close.path.original, errorNode);\n    }\n\n    program.blockParams = openBlock.blockParams;\n\n    var inverse,\n        inverseStrip;\n\n    if (inverseAndProgram) {\n      if (inverseAndProgram.chain) {\n        inverseAndProgram.program.body[0].closeStrip = close.strip;\n      }\n\n      inverseStrip = inverseAndProgram.strip;\n      inverse = inverseAndProgram.program;\n    }\n\n    if (inverted) {\n      inverted = inverse;\n      inverse = program;\n      program = inverted;\n    }\n\n    return new this.BlockStatement(\n        openBlock.path, openBlock.params, openBlock.hash,\n        program, inverse,\n        openBlock.strip, inverseStrip, close && close.strip,\n        this.locInfo(locInfo));\n  }\n\n  __exports__.prepareBlock = prepareBlock;\n  return __exports__;\n})(__module4__);\n\n// handlebars/compiler/base.js\nvar __module8__ = (function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __dependency5__) {\n  \"use strict\";\n  var __exports__ = {};\n  var parser = __dependency1__;\n  var AST = __dependency2__;\n  var WhitespaceControl = __dependency3__;\n  var Helpers = __dependency4__;\n  var extend = __dependency5__.extend;\n\n  __exports__.parser = parser;\n\n  var yy = {};\n  extend(yy, Helpers, AST);\n\n  function parse(input, options) {\n    // Just return if an already-compiled AST was passed in.\n    if (input.type === 'Program') { return input; }\n\n    parser.yy = yy;\n\n    // Altering the shared object here, but this is ok as parser is a sync operation\n    yy.locInfo = function(locInfo) {\n      return new yy.SourceLocation(options && options.srcName, locInfo);\n    };\n\n    var strip = new WhitespaceControl();\n    return strip.accept(parser.parse(input));\n  }\n\n  __exports__.parse = parse;\n  return __exports__;\n})(__module9__, __module7__, __module10__, __module12__, __module3__);\n\n// handlebars/compiler/compiler.js\nvar __module13__ = (function(__dependency1__, __dependency2__, __dependency3__) {\n  \"use strict\";\n  var __exports__ = {};\n  var Exception = __dependency1__;\n  var isArray = __dependency2__.isArray;\n  var indexOf = __dependency2__.indexOf;\n  var AST = __dependency3__;\n\n  var slice = [].slice;\n\n\n  function Compiler() {}\n\n  __exports__.Compiler = Compiler;// the foundHelper register will disambiguate helper lookup from finding a\n  // function in a context. This is necessary for mustache compatibility, which\n  // requires that context functions in blocks are evaluated by blockHelperMissing,\n  // and then proceed as if the resulting value was provided to blockHelperMissing.\n\n  Compiler.prototype = {\n    compiler: Compiler,\n\n    equals: function(other) {\n      var len = this.opcodes.length;\n      if (other.opcodes.length !== len) {\n        return false;\n      }\n\n      for (var i = 0; i < len; i++) {\n        var opcode = this.opcodes[i],\n            otherOpcode = other.opcodes[i];\n        if (opcode.opcode !== otherOpcode.opcode || !argEquals(opcode.args, otherOpcode.args)) {\n          return false;\n        }\n      }\n\n      // We know that length is the same between the two arrays because they are directly tied\n      // to the opcode behavior above.\n      len = this.children.length;\n      for (i = 0; i < len; i++) {\n        if (!this.children[i].equals(other.children[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    guid: 0,\n\n    compile: function(program, options) {\n      this.sourceNode = [];\n      this.opcodes = [];\n      this.children = [];\n      this.options = options;\n      this.stringParams = options.stringParams;\n      this.trackIds = options.trackIds;\n\n      options.blockParams = options.blockParams || [];\n\n      // These changes will propagate to the other compiler components\n      var knownHelpers = options.knownHelpers;\n      options.knownHelpers = {\n        'helperMissing': true,\n        'blockHelperMissing': true,\n        'each': true,\n        'if': true,\n        'unless': true,\n        'with': true,\n        'log': true,\n        'lookup': true\n      };\n      if (knownHelpers) {\n        for (var name in knownHelpers) {\n          options.knownHelpers[name] = knownHelpers[name];\n        }\n      }\n\n      return this.accept(program);\n    },\n\n    compileProgram: function(program) {\n      var result = new this.compiler().compile(program, this.options);\n      var guid = this.guid++;\n\n      this.usePartial = this.usePartial || result.usePartial;\n\n      this.children[guid] = result;\n      this.useDepths = this.useDepths || result.useDepths;\n\n      return guid;\n    },\n\n    accept: function(node) {\n      this.sourceNode.unshift(node);\n      var ret = this[node.type](node);\n      this.sourceNode.shift();\n      return ret;\n    },\n\n    Program: function(program) {\n      this.options.blockParams.unshift(program.blockParams);\n\n      var body = program.body;\n      for(var i=0, l=body.length; i<l; i++) {\n        this.accept(body[i]);\n      }\n\n      this.options.blockParams.shift();\n\n      this.isSimple = l === 1;\n      this.blockParams = program.blockParams ? program.blockParams.length : 0;\n\n      return this;\n    },\n\n    BlockStatement: function(block) {\n      transformLiteralToPath(block);\n\n      var program = block.program,\n          inverse = block.inverse;\n\n      program = program && this.compileProgram(program);\n      inverse = inverse && this.compileProgram(inverse);\n\n      var type = this.classifySexpr(block);\n\n      if (type === 'helper') {\n        this.helperSexpr(block, program, inverse);\n      } else if (type === 'simple') {\n        this.simpleSexpr(block);\n\n        // now that the simple mustache is resolved, we need to\n        // evaluate it by executing `blockHelperMissing`\n        this.opcode('pushProgram', program);\n        this.opcode('pushProgram', inverse);\n        this.opcode('emptyHash');\n        this.opcode('blockValue', block.path.original);\n      } else {\n        this.ambiguousSexpr(block, program, inverse);\n\n        // now that the simple mustache is resolved, we need to\n        // evaluate it by executing `blockHelperMissing`\n        this.opcode('pushProgram', program);\n        this.opcode('pushProgram', inverse);\n        this.opcode('emptyHash');\n        this.opcode('ambiguousBlockValue');\n      }\n\n      this.opcode('append');\n    },\n\n    PartialStatement: function(partial) {\n      this.usePartial = true;\n\n      var params = partial.params;\n      if (params.length > 1) {\n        throw new Exception('Unsupported number of partial arguments: ' + params.length, partial);\n      } else if (!params.length) {\n        params.push({type: 'PathExpression', parts: [], depth: 0});\n      }\n\n      var partialName = partial.name.original,\n          isDynamic = partial.name.type === 'SubExpression';\n      if (isDynamic) {\n        this.accept(partial.name);\n      }\n\n      this.setupFullMustacheParams(partial, undefined, undefined, true);\n\n      var indent = partial.indent || '';\n      if (this.options.preventIndent && indent) {\n        this.opcode('appendContent', indent);\n        indent = '';\n      }\n\n      this.opcode('invokePartial', isDynamic, partialName, indent);\n      this.opcode('append');\n    },\n\n    MustacheStatement: function(mustache) {\n      this.SubExpression(mustache);\n\n      if(mustache.escaped && !this.options.noEscape) {\n        this.opcode('appendEscaped');\n      } else {\n        this.opcode('append');\n      }\n    },\n\n    ContentStatement: function(content) {\n      if (content.value) {\n        this.opcode('appendContent', content.value);\n      }\n    },\n\n    CommentStatement: function() {},\n\n    SubExpression: function(sexpr) {\n      transformLiteralToPath(sexpr);\n      var type = this.classifySexpr(sexpr);\n\n      if (type === 'simple') {\n        this.simpleSexpr(sexpr);\n      } else if (type === 'helper') {\n        this.helperSexpr(sexpr);\n      } else {\n        this.ambiguousSexpr(sexpr);\n      }\n    },\n    ambiguousSexpr: function(sexpr, program, inverse) {\n      var path = sexpr.path,\n          name = path.parts[0],\n          isBlock = program != null || inverse != null;\n\n      this.opcode('getContext', path.depth);\n\n      this.opcode('pushProgram', program);\n      this.opcode('pushProgram', inverse);\n\n      this.accept(path);\n\n      this.opcode('invokeAmbiguous', name, isBlock);\n    },\n\n    simpleSexpr: function(sexpr) {\n      this.accept(sexpr.path);\n      this.opcode('resolvePossibleLambda');\n    },\n\n    helperSexpr: function(sexpr, program, inverse) {\n      var params = this.setupFullMustacheParams(sexpr, program, inverse),\n          path = sexpr.path,\n          name = path.parts[0];\n\n      if (this.options.knownHelpers[name]) {\n        this.opcode('invokeKnownHelper', params.length, name);\n      } else if (this.options.knownHelpersOnly) {\n        throw new Exception(\"You specified knownHelpersOnly, but used the unknown helper \" + name, sexpr);\n      } else {\n        path.falsy = true;\n\n        this.accept(path);\n        this.opcode('invokeHelper', params.length, path.original, AST.helpers.simpleId(path));\n      }\n    },\n\n    PathExpression: function(path) {\n      this.addDepth(path.depth);\n      this.opcode('getContext', path.depth);\n\n      var name = path.parts[0],\n          scoped = AST.helpers.scopedId(path),\n          blockParamId = !path.depth && !scoped && this.blockParamIndex(name);\n\n      if (blockParamId) {\n        this.opcode('lookupBlockParam', blockParamId, path.parts);\n      } else  if (!name) {\n        // Context reference, i.e. `{{foo .}}` or `{{foo ..}}`\n        this.opcode('pushContext');\n      } else if (path.data) {\n        this.options.data = true;\n        this.opcode('lookupData', path.depth, path.parts);\n      } else {\n        this.opcode('lookupOnContext', path.parts, path.falsy, scoped);\n      }\n    },\n\n    StringLiteral: function(string) {\n      this.opcode('pushString', string.value);\n    },\n\n    NumberLiteral: function(number) {\n      this.opcode('pushLiteral', number.value);\n    },\n\n    BooleanLiteral: function(bool) {\n      this.opcode('pushLiteral', bool.value);\n    },\n\n    Hash: function(hash) {\n      var pairs = hash.pairs, i, l;\n\n      this.opcode('pushHash');\n\n      for (i=0, l=pairs.length; i<l; i++) {\n        this.pushParam(pairs[i].value);\n      }\n      while (i--) {\n        this.opcode('assignToHash', pairs[i].key);\n      }\n      this.opcode('popHash');\n    },\n\n    // HELPERS\n    opcode: function(name) {\n      this.opcodes.push({ opcode: name, args: slice.call(arguments, 1), loc: this.sourceNode[0].loc });\n    },\n\n    addDepth: function(depth) {\n      if (!depth) {\n        return;\n      }\n\n      this.useDepths = true;\n    },\n\n    classifySexpr: function(sexpr) {\n      var isSimple = AST.helpers.simpleId(sexpr.path);\n\n      var isBlockParam = isSimple && !!this.blockParamIndex(sexpr.path.parts[0]);\n\n      // a mustache is an eligible helper if:\n      // * its id is simple (a single part, not `this` or `..`)\n      var isHelper = !isBlockParam && AST.helpers.helperExpression(sexpr);\n\n      // if a mustache is an eligible helper but not a definite\n      // helper, it is ambiguous, and will be resolved in a later\n      // pass or at runtime.\n      var isEligible = !isBlockParam && (isHelper || isSimple);\n\n      var options = this.options;\n\n      // if ambiguous, we can possibly resolve the ambiguity now\n      // An eligible helper is one that does not have a complex path, i.e. `this.foo`, `../foo` etc.\n      if (isEligible && !isHelper) {\n        var name = sexpr.path.parts[0];\n\n        if (options.knownHelpers[name]) {\n          isHelper = true;\n        } else if (options.knownHelpersOnly) {\n          isEligible = false;\n        }\n      }\n\n      if (isHelper) { return 'helper'; }\n      else if (isEligible) { return 'ambiguous'; }\n      else { return 'simple'; }\n    },\n\n    pushParams: function(params) {\n      for(var i=0, l=params.length; i<l; i++) {\n        this.pushParam(params[i]);\n      }\n    },\n\n    pushParam: function(val) {\n      var value = val.value != null ? val.value : val.original || '';\n\n      if (this.stringParams) {\n        if (value.replace) {\n          value = value\n              .replace(/^(\\.?\\.\\/)*/g, '')\n              .replace(/\\//g, '.');\n        }\n\n        if(val.depth) {\n          this.addDepth(val.depth);\n        }\n        this.opcode('getContext', val.depth || 0);\n        this.opcode('pushStringParam', value, val.type);\n\n        if (val.type === 'SubExpression') {\n          // SubExpressions get evaluated and passed in\n          // in string params mode.\n          this.accept(val);\n        }\n      } else {\n        if (this.trackIds) {\n          var blockParamIndex;\n          if (val.parts && !AST.helpers.scopedId(val) && !val.depth) {\n             blockParamIndex = this.blockParamIndex(val.parts[0]);\n          }\n          if (blockParamIndex) {\n            var blockParamChild = val.parts.slice(1).join('.');\n            this.opcode('pushId', 'BlockParam', blockParamIndex, blockParamChild);\n          } else {\n            value = val.original || value;\n            if (value.replace) {\n              value = value\n                  .replace(/^\\.\\//g, '')\n                  .replace(/^\\.$/g, '');\n            }\n\n            this.opcode('pushId', val.type, value);\n          }\n        }\n        this.accept(val);\n      }\n    },\n\n    setupFullMustacheParams: function(sexpr, program, inverse, omitEmpty) {\n      var params = sexpr.params;\n      this.pushParams(params);\n\n      this.opcode('pushProgram', program);\n      this.opcode('pushProgram', inverse);\n\n      if (sexpr.hash) {\n        this.accept(sexpr.hash);\n      } else {\n        this.opcode('emptyHash', omitEmpty);\n      }\n\n      return params;\n    },\n\n    blockParamIndex: function(name) {\n      for (var depth = 0, len = this.options.blockParams.length; depth < len; depth++) {\n        var blockParams = this.options.blockParams[depth],\n            param = blockParams && indexOf(blockParams, name);\n        if (blockParams && param >= 0) {\n          return [depth, param];\n        }\n      }\n    }\n  };\n\n  function precompile(input, options, env) {\n    if (input == null || (typeof input !== 'string' && input.type !== 'Program')) {\n      throw new Exception(\"You must pass a string or Handlebars AST to Handlebars.precompile. You passed \" + input);\n    }\n\n    options = options || {};\n    if (!('data' in options)) {\n      options.data = true;\n    }\n    if (options.compat) {\n      options.useDepths = true;\n    }\n\n    var ast = env.parse(input, options);\n    var environment = new env.Compiler().compile(ast, options);\n    return new env.JavaScriptCompiler().compile(environment, options);\n  }\n\n  __exports__.precompile = precompile;function compile(input, options, env) {\n    if (input == null || (typeof input !== 'string' && input.type !== 'Program')) {\n      throw new Exception(\"You must pass a string or Handlebars AST to Handlebars.compile. You passed \" + input);\n    }\n\n    options = options || {};\n\n    if (!('data' in options)) {\n      options.data = true;\n    }\n    if (options.compat) {\n      options.useDepths = true;\n    }\n\n    var compiled;\n\n    function compileInput() {\n      var ast = env.parse(input, options);\n      var environment = new env.Compiler().compile(ast, options);\n      var templateSpec = new env.JavaScriptCompiler().compile(environment, options, undefined, true);\n      return env.template(templateSpec);\n    }\n\n    // Template is only compiled on first use and cached after that point.\n    var ret = function(context, options) {\n      if (!compiled) {\n        compiled = compileInput();\n      }\n      return compiled.call(this, context, options);\n    };\n    ret._setup = function(options) {\n      if (!compiled) {\n        compiled = compileInput();\n      }\n      return compiled._setup(options);\n    };\n    ret._child = function(i, data, blockParams, depths) {\n      if (!compiled) {\n        compiled = compileInput();\n      }\n      return compiled._child(i, data, blockParams, depths);\n    };\n    return ret;\n  }\n\n  __exports__.compile = compile;function argEquals(a, b) {\n    if (a === b) {\n      return true;\n    }\n\n    if (isArray(a) && isArray(b) && a.length === b.length) {\n      for (var i = 0; i < a.length; i++) {\n        if (!argEquals(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  function transformLiteralToPath(sexpr) {\n    if (!sexpr.path.parts) {\n      var literal = sexpr.path;\n      // Casting to string here to make false and 0 literal values play nicely with the rest\n      // of the system.\n      sexpr.path = new AST.PathExpression(false, 0, [literal.original+''], literal.original+'', literal.log);\n    }\n  }\n  return __exports__;\n})(__module4__, __module3__, __module7__);\n\n// handlebars/compiler/code-gen.js\nvar __module15__ = (function(__dependency1__) {\n  \"use strict\";\n  var __exports__;\n  var isArray = __dependency1__.isArray;\n\n  try {\n    var SourceMap = require('source-map'),\n          SourceNode = SourceMap.SourceNode;\n  } catch (err) {\n    /* istanbul ignore next: tested but not covered in istanbul due to dist build  */\n    SourceNode = function(line, column, srcFile, chunks) {\n      this.src = '';\n      if (chunks) {\n        this.add(chunks);\n      }\n    };\n    /* istanbul ignore next */\n    SourceNode.prototype = {\n      add: function(chunks) {\n        if (isArray(chunks)) {\n          chunks = chunks.join('');\n        }\n        this.src += chunks;\n      },\n      prepend: function(chunks) {\n        if (isArray(chunks)) {\n          chunks = chunks.join('');\n        }\n        this.src = chunks + this.src;\n      },\n      toStringWithSourceMap: function() {\n        return {code: this.toString()};\n      },\n      toString: function() {\n        return this.src;\n      }\n    };\n  }\n\n\n  function castChunk(chunk, codeGen, loc) {\n    if (isArray(chunk)) {\n      var ret = [];\n\n      for (var i = 0, len = chunk.length; i < len; i++) {\n        ret.push(codeGen.wrap(chunk[i], loc));\n      }\n      return ret;\n    } else if (typeof chunk === 'boolean' || typeof chunk === 'number') {\n      // Handle primitives that the SourceNode will throw up on\n      return chunk+'';\n    }\n    return chunk;\n  }\n\n\n  function CodeGen(srcFile) {\n    this.srcFile = srcFile;\n    this.source = [];\n  }\n\n  CodeGen.prototype = {\n    prepend: function(source, loc) {\n      this.source.unshift(this.wrap(source, loc));\n    },\n    push: function(source, loc) {\n      this.source.push(this.wrap(source, loc));\n    },\n\n    merge: function() {\n      var source = this.empty();\n      this.each(function(line) {\n        source.add(['  ', line, '\\n']);\n      });\n      return source;\n    },\n\n    each: function(iter) {\n      for (var i = 0, len = this.source.length; i < len; i++) {\n        iter(this.source[i]);\n      }\n    },\n\n    empty: function(loc) {\n      loc = loc || this.currentLocation || {start:{}};\n      return new SourceNode(loc.start.line, loc.start.column, this.srcFile);\n    },\n    wrap: function(chunk, loc) {\n      if (chunk instanceof SourceNode) {\n        return chunk;\n      }\n\n      loc = loc || this.currentLocation || {start:{}};\n      chunk = castChunk(chunk, this, loc);\n\n      return new SourceNode(loc.start.line, loc.start.column, this.srcFile, chunk);\n    },\n\n    functionCall: function(fn, type, params) {\n      params = this.generateList(params);\n      return this.wrap([fn, type ? '.' + type + '(' : '(', params, ')']);\n    },\n\n    quotedString: function(str) {\n      return '\"' + (str + '')\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\"/g, '\\\\\"')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r')\n        .replace(/\\u2028/g, '\\\\u2028')   // Per Ecma-262 7.3 + 7.8.4\n        .replace(/\\u2029/g, '\\\\u2029') + '\"';\n    },\n\n    objectLiteral: function(obj) {\n      var pairs = [];\n\n      for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          var value = castChunk(obj[key], this);\n          if (value !== 'undefined') {\n            pairs.push([this.quotedString(key), ':', value]);\n          }\n        }\n      }\n\n      var ret = this.generateList(pairs);\n      ret.prepend('{');\n      ret.add('}');\n      return ret;\n    },\n\n\n    generateList: function(entries, loc) {\n      var ret = this.empty(loc);\n\n      for (var i = 0, len = entries.length; i < len; i++) {\n        if (i) {\n          ret.add(',');\n        }\n\n        ret.add(castChunk(entries[i], this, loc));\n      }\n\n      return ret;\n    },\n\n    generateArray: function(entries, loc) {\n      var ret = this.generateList(entries, loc);\n      ret.prepend('[');\n      ret.add(']');\n\n      return ret;\n    }\n  };\n\n  __exports__ = CodeGen;\n  return __exports__;\n})(__module3__);\n\n// handlebars/compiler/javascript-compiler.js\nvar __module14__ = (function(__dependency1__, __dependency2__, __dependency3__, __dependency4__) {\n  \"use strict\";\n  var __exports__;\n  var COMPILER_REVISION = __dependency1__.COMPILER_REVISION;\n  var REVISION_CHANGES = __dependency1__.REVISION_CHANGES;\n  var Exception = __dependency2__;\n  var isArray = __dependency3__.isArray;\n  var CodeGen = __dependency4__;\n\n  function Literal(value) {\n    this.value = value;\n  }\n\n  function JavaScriptCompiler() {}\n\n  JavaScriptCompiler.prototype = {\n    // PUBLIC API: You can override these methods in a subclass to provide\n    // alternative compiled forms for name lookup and buffering semantics\n    nameLookup: function(parent, name /* , type*/) {\n      if (JavaScriptCompiler.isValidJavaScriptVariableName(name)) {\n        return [parent, \".\", name];\n      } else {\n        return [parent, \"['\", name, \"']\"];\n      }\n    },\n    depthedLookup: function(name) {\n      return [this.aliasable('this.lookup'), '(depths, \"', name, '\")'];\n    },\n\n    compilerInfo: function() {\n      var revision = COMPILER_REVISION,\n          versions = REVISION_CHANGES[revision];\n      return [revision, versions];\n    },\n\n    appendToBuffer: function(source, location, explicit) {\n      // Force a source as this simplifies the merge logic.\n      if (!isArray(source)) {\n        source = [source];\n      }\n      source = this.source.wrap(source, location);\n\n      if (this.environment.isSimple) {\n        return ['return ', source, ';'];\n      } else if (explicit) {\n        // This is a case where the buffer operation occurs as a child of another\n        // construct, generally braces. We have to explicitly output these buffer\n        // operations to ensure that the emitted code goes in the correct location.\n        return ['buffer += ', source, ';'];\n      } else {\n        source.appendToBuffer = true;\n        return source;\n      }\n    },\n\n    initializeBuffer: function() {\n      return this.quotedString(\"\");\n    },\n    // END PUBLIC API\n\n    compile: function(environment, options, context, asObject) {\n      this.environment = environment;\n      this.options = options;\n      this.stringParams = this.options.stringParams;\n      this.trackIds = this.options.trackIds;\n      this.precompile = !asObject;\n\n      this.name = this.environment.name;\n      this.isChild = !!context;\n      this.context = context || {\n        programs: [],\n        environments: []\n      };\n\n      this.preamble();\n\n      this.stackSlot = 0;\n      this.stackVars = [];\n      this.aliases = {};\n      this.registers = { list: [] };\n      this.hashes = [];\n      this.compileStack = [];\n      this.inlineStack = [];\n      this.blockParams = [];\n\n      this.compileChildren(environment, options);\n\n      this.useDepths = this.useDepths || environment.useDepths || this.options.compat;\n      this.useBlockParams = this.useBlockParams || environment.useBlockParams;\n\n      var opcodes = environment.opcodes,\n          opcode,\n          firstLoc,\n          i,\n          l;\n\n      for (i = 0, l = opcodes.length; i < l; i++) {\n        opcode = opcodes[i];\n\n        this.source.currentLocation = opcode.loc;\n        firstLoc = firstLoc || opcode.loc;\n        this[opcode.opcode].apply(this, opcode.args);\n      }\n\n      // Flush any trailing content that might be pending.\n      this.source.currentLocation = firstLoc;\n      this.pushSource('');\n\n      /* istanbul ignore next */\n      if (this.stackSlot || this.inlineStack.length || this.compileStack.length) {\n        throw new Exception('Compile completed with content left on stack');\n      }\n\n      var fn = this.createFunctionContext(asObject);\n      if (!this.isChild) {\n        var ret = {\n          compiler: this.compilerInfo(),\n          main: fn\n        };\n        var programs = this.context.programs;\n        for (i = 0, l = programs.length; i < l; i++) {\n          if (programs[i]) {\n            ret[i] = programs[i];\n          }\n        }\n\n        if (this.environment.usePartial) {\n          ret.usePartial = true;\n        }\n        if (this.options.data) {\n          ret.useData = true;\n        }\n        if (this.useDepths) {\n          ret.useDepths = true;\n        }\n        if (this.useBlockParams) {\n          ret.useBlockParams = true;\n        }\n        if (this.options.compat) {\n          ret.compat = true;\n        }\n\n        if (!asObject) {\n          ret.compiler = JSON.stringify(ret.compiler);\n\n          this.source.currentLocation = {start: {line: 1, column: 0}};\n          ret = this.objectLiteral(ret);\n\n          if (options.srcName) {\n            ret = ret.toStringWithSourceMap({file: options.destName});\n            ret.map = ret.map && ret.map.toString();\n          } else {\n            ret = ret.toString();\n          }\n        } else {\n          ret.compilerOptions = this.options;\n        }\n\n        return ret;\n      } else {\n        return fn;\n      }\n    },\n\n    preamble: function() {\n      // track the last context pushed into place to allow skipping the\n      // getContext opcode when it would be a noop\n      this.lastContext = 0;\n      this.source = new CodeGen(this.options.srcName);\n    },\n\n    createFunctionContext: function(asObject) {\n      var varDeclarations = '';\n\n      var locals = this.stackVars.concat(this.registers.list);\n      if(locals.length > 0) {\n        varDeclarations += \", \" + locals.join(\", \");\n      }\n\n      // Generate minimizer alias mappings\n      //\n      // When using true SourceNodes, this will update all references to the given alias\n      // as the source nodes are reused in situ. For the non-source node compilation mode,\n      // aliases will not be used, but this case is already being run on the client and\n      // we aren't concern about minimizing the template size.\n      var aliasCount = 0;\n      for (var alias in this.aliases) {\n        var node = this.aliases[alias];\n\n        if (this.aliases.hasOwnProperty(alias) && node.children && node.referenceCount > 1) {\n          varDeclarations += ', alias' + (++aliasCount) + '=' + alias;\n          node.children[0] = 'alias' + aliasCount;\n        }\n      }\n\n      var params = [\"depth0\", \"helpers\", \"partials\", \"data\"];\n\n      if (this.useBlockParams || this.useDepths) {\n        params.push('blockParams');\n      }\n      if (this.useDepths) {\n        params.push('depths');\n      }\n\n      // Perform a second pass over the output to merge content when possible\n      var source = this.mergeSource(varDeclarations);\n\n      if (asObject) {\n        params.push(source);\n\n        return Function.apply(this, params);\n      } else {\n        return this.source.wrap(['function(', params.join(','), ') {\\n  ', source, '}']);\n      }\n    },\n    mergeSource: function(varDeclarations) {\n      var isSimple = this.environment.isSimple,\n          appendOnly = !this.forceBuffer,\n          appendFirst,\n\n          sourceSeen,\n          bufferStart,\n          bufferEnd;\n      this.source.each(function(line) {\n        if (line.appendToBuffer) {\n          if (bufferStart) {\n            line.prepend('  + ');\n          } else {\n            bufferStart = line;\n          }\n          bufferEnd = line;\n        } else {\n          if (bufferStart) {\n            if (!sourceSeen) {\n              appendFirst = true;\n            } else {\n              bufferStart.prepend('buffer += ');\n            }\n            bufferEnd.add(';');\n            bufferStart = bufferEnd = undefined;\n          }\n\n          sourceSeen = true;\n          if (!isSimple) {\n            appendOnly = false;\n          }\n        }\n      });\n\n\n      if (appendOnly) {\n        if (bufferStart) {\n          bufferStart.prepend('return ');\n          bufferEnd.add(';');\n        } else if (!sourceSeen) {\n          this.source.push('return \"\";');\n        }\n      } else {\n        varDeclarations += \", buffer = \" + (appendFirst ? '' : this.initializeBuffer());\n\n        if (bufferStart) {\n          bufferStart.prepend('return buffer + ');\n          bufferEnd.add(';');\n        } else {\n          this.source.push('return buffer;');\n        }\n      }\n\n      if (varDeclarations) {\n        this.source.prepend('var ' + varDeclarations.substring(2) + (appendFirst ? '' : ';\\n'));\n      }\n\n      return this.source.merge();\n    },\n\n    // [blockValue]\n    //\n    // On stack, before: hash, inverse, program, value\n    // On stack, after: return value of blockHelperMissing\n    //\n    // The purpose of this opcode is to take a block of the form\n    // `{{#this.foo}}...{{/this.foo}}`, resolve the value of `foo`, and\n    // replace it on the stack with the result of properly\n    // invoking blockHelperMissing.\n    blockValue: function(name) {\n      var blockHelperMissing = this.aliasable('helpers.blockHelperMissing'),\n          params = [this.contextName(0)];\n      this.setupHelperArgs(name, 0, params);\n\n      var blockName = this.popStack();\n      params.splice(1, 0, blockName);\n\n      this.push(this.source.functionCall(blockHelperMissing, 'call', params));\n    },\n\n    // [ambiguousBlockValue]\n    //\n    // On stack, before: hash, inverse, program, value\n    // Compiler value, before: lastHelper=value of last found helper, if any\n    // On stack, after, if no lastHelper: same as [blockValue]\n    // On stack, after, if lastHelper: value\n    ambiguousBlockValue: function() {\n      // We're being a bit cheeky and reusing the options value from the prior exec\n      var blockHelperMissing = this.aliasable('helpers.blockHelperMissing'),\n          params = [this.contextName(0)];\n      this.setupHelperArgs('', 0, params, true);\n\n      this.flushInline();\n\n      var current = this.topStack();\n      params.splice(1, 0, current);\n\n      this.pushSource([\n          'if (!', this.lastHelper, ') { ',\n            current, ' = ', this.source.functionCall(blockHelperMissing, 'call', params),\n          '}']);\n    },\n\n    // [appendContent]\n    //\n    // On stack, before: ...\n    // On stack, after: ...\n    //\n    // Appends the string value of `content` to the current buffer\n    appendContent: function(content) {\n      if (this.pendingContent) {\n        content = this.pendingContent + content;\n      } else {\n        this.pendingLocation = this.source.currentLocation;\n      }\n\n      this.pendingContent = content;\n    },\n\n    // [append]\n    //\n    // On stack, before: value, ...\n    // On stack, after: ...\n    //\n    // Coerces `value` to a String and appends it to the current buffer.\n    //\n    // If `value` is truthy, or 0, it is coerced into a string and appended\n    // Otherwise, the empty string is appended\n    append: function() {\n      if (this.isInline()) {\n        this.replaceStack(function(current) {\n          return [' != null ? ', current, ' : \"\"'];\n        });\n\n        this.pushSource(this.appendToBuffer(this.popStack()));\n      } else {\n        var local = this.popStack();\n        this.pushSource(['if (', local, ' != null) { ', this.appendToBuffer(local, undefined, true), ' }']);\n        if (this.environment.isSimple) {\n          this.pushSource(['else { ', this.appendToBuffer(\"''\", undefined, true), ' }']);\n        }\n      }\n    },\n\n    // [appendEscaped]\n    //\n    // On stack, before: value, ...\n    // On stack, after: ...\n    //\n    // Escape `value` and append it to the buffer\n    appendEscaped: function() {\n      this.pushSource(this.appendToBuffer(\n          [this.aliasable('this.escapeExpression'), '(', this.popStack(), ')']));\n    },\n\n    // [getContext]\n    //\n    // On stack, before: ...\n    // On stack, after: ...\n    // Compiler value, after: lastContext=depth\n    //\n    // Set the value of the `lastContext` compiler value to the depth\n    getContext: function(depth) {\n      this.lastContext = depth;\n    },\n\n    // [pushContext]\n    //\n    // On stack, before: ...\n    // On stack, after: currentContext, ...\n    //\n    // Pushes the value of the current context onto the stack.\n    pushContext: function() {\n      this.pushStackLiteral(this.contextName(this.lastContext));\n    },\n\n    // [lookupOnContext]\n    //\n    // On stack, before: ...\n    // On stack, after: currentContext[name], ...\n    //\n    // Looks up the value of `name` on the current context and pushes\n    // it onto the stack.\n    lookupOnContext: function(parts, falsy, scoped) {\n      var i = 0;\n\n      if (!scoped && this.options.compat && !this.lastContext) {\n        // The depthed query is expected to handle the undefined logic for the root level that\n        // is implemented below, so we evaluate that directly in compat mode\n        this.push(this.depthedLookup(parts[i++]));\n      } else {\n        this.pushContext();\n      }\n\n      this.resolvePath('context', parts, i, falsy);\n    },\n\n    // [lookupBlockParam]\n    //\n    // On stack, before: ...\n    // On stack, after: blockParam[name], ...\n    //\n    // Looks up the value of `parts` on the given block param and pushes\n    // it onto the stack.\n    lookupBlockParam: function(blockParamId, parts) {\n      this.useBlockParams = true;\n\n      this.push(['blockParams[', blockParamId[0], '][', blockParamId[1], ']']);\n      this.resolvePath('context', parts, 1);\n    },\n\n    // [lookupData]\n    //\n    // On stack, before: ...\n    // On stack, after: data, ...\n    //\n    // Push the data lookup operator\n    lookupData: function(depth, parts) {\n      /*jshint -W083 */\n      if (!depth) {\n        this.pushStackLiteral('data');\n      } else {\n        this.pushStackLiteral('this.data(data, ' + depth + ')');\n      }\n\n      this.resolvePath('data', parts, 0, true);\n    },\n\n    resolvePath: function(type, parts, i, falsy) {\n      /*jshint -W083 */\n      if (this.options.strict || this.options.assumeObjects) {\n        this.push(strictLookup(this.options.strict, this, parts, type));\n        return;\n      }\n\n      var len = parts.length;\n      for (; i < len; i++) {\n        this.replaceStack(function(current) {\n          var lookup = this.nameLookup(current, parts[i], type);\n          // We want to ensure that zero and false are handled properly if the context (falsy flag)\n          // needs to have the special handling for these values.\n          if (!falsy) {\n            return [' != null ? ', lookup, ' : ', current];\n          } else {\n            // Otherwise we can use generic falsy handling\n            return [' && ', lookup];\n          }\n        });\n      }\n    },\n\n    // [resolvePossibleLambda]\n    //\n    // On stack, before: value, ...\n    // On stack, after: resolved value, ...\n    //\n    // If the `value` is a lambda, replace it on the stack by\n    // the return value of the lambda\n    resolvePossibleLambda: function() {\n      this.push([this.aliasable('this.lambda'), '(', this.popStack(), ', ', this.contextName(0), ')']);\n    },\n\n    // [pushStringParam]\n    //\n    // On stack, before: ...\n    // On stack, after: string, currentContext, ...\n    //\n    // This opcode is designed for use in string mode, which\n    // provides the string value of a parameter along with its\n    // depth rather than resolving it immediately.\n    pushStringParam: function(string, type) {\n      this.pushContext();\n      this.pushString(type);\n\n      // If it's a subexpression, the string result\n      // will be pushed after this opcode.\n      if (type !== 'SubExpression') {\n        if (typeof string === 'string') {\n          this.pushString(string);\n        } else {\n          this.pushStackLiteral(string);\n        }\n      }\n    },\n\n    emptyHash: function(omitEmpty) {\n      if (this.trackIds) {\n        this.push('{}'); // hashIds\n      }\n      if (this.stringParams) {\n        this.push('{}'); // hashContexts\n        this.push('{}'); // hashTypes\n      }\n      this.pushStackLiteral(omitEmpty ? 'undefined' : '{}');\n    },\n    pushHash: function() {\n      if (this.hash) {\n        this.hashes.push(this.hash);\n      }\n      this.hash = {values: [], types: [], contexts: [], ids: []};\n    },\n    popHash: function() {\n      var hash = this.hash;\n      this.hash = this.hashes.pop();\n\n      if (this.trackIds) {\n        this.push(this.objectLiteral(hash.ids));\n      }\n      if (this.stringParams) {\n        this.push(this.objectLiteral(hash.contexts));\n        this.push(this.objectLiteral(hash.types));\n      }\n\n      this.push(this.objectLiteral(hash.values));\n    },\n\n    // [pushString]\n    //\n    // On stack, before: ...\n    // On stack, after: quotedString(string), ...\n    //\n    // Push a quoted version of `string` onto the stack\n    pushString: function(string) {\n      this.pushStackLiteral(this.quotedString(string));\n    },\n\n    // [pushLiteral]\n    //\n    // On stack, before: ...\n    // On stack, after: value, ...\n    //\n    // Pushes a value onto the stack. This operation prevents\n    // the compiler from creating a temporary variable to hold\n    // it.\n    pushLiteral: function(value) {\n      this.pushStackLiteral(value);\n    },\n\n    // [pushProgram]\n    //\n    // On stack, before: ...\n    // On stack, after: program(guid), ...\n    //\n    // Push a program expression onto the stack. This takes\n    // a compile-time guid and converts it into a runtime-accessible\n    // expression.\n    pushProgram: function(guid) {\n      if (guid != null) {\n        this.pushStackLiteral(this.programExpression(guid));\n      } else {\n        this.pushStackLiteral(null);\n      }\n    },\n\n    // [invokeHelper]\n    //\n    // On stack, before: hash, inverse, program, params..., ...\n    // On stack, after: result of helper invocation\n    //\n    // Pops off the helper's parameters, invokes the helper,\n    // and pushes the helper's return value onto the stack.\n    //\n    // If the helper is not found, `helperMissing` is called.\n    invokeHelper: function(paramSize, name, isSimple) {\n      var nonHelper = this.popStack();\n      var helper = this.setupHelper(paramSize, name);\n      var simple = isSimple ? [helper.name, ' || '] : '';\n\n      var lookup = ['('].concat(simple, nonHelper);\n      if (!this.options.strict) {\n        lookup.push(' || ', this.aliasable('helpers.helperMissing'));\n      }\n      lookup.push(')');\n\n      this.push(this.source.functionCall(lookup, 'call', helper.callParams));\n    },\n\n    // [invokeKnownHelper]\n    //\n    // On stack, before: hash, inverse, program, params..., ...\n    // On stack, after: result of helper invocation\n    //\n    // This operation is used when the helper is known to exist,\n    // so a `helperMissing` fallback is not required.\n    invokeKnownHelper: function(paramSize, name) {\n      var helper = this.setupHelper(paramSize, name);\n      this.push(this.source.functionCall(helper.name, 'call', helper.callParams));\n    },\n\n    // [invokeAmbiguous]\n    //\n    // On stack, before: hash, inverse, program, params..., ...\n    // On stack, after: result of disambiguation\n    //\n    // This operation is used when an expression like `{{foo}}`\n    // is provided, but we don't know at compile-time whether it\n    // is a helper or a path.\n    //\n    // This operation emits more code than the other options,\n    // and can be avoided by passing the `knownHelpers` and\n    // `knownHelpersOnly` flags at compile-time.\n    invokeAmbiguous: function(name, helperCall) {\n      this.useRegister('helper');\n\n      var nonHelper = this.popStack();\n\n      this.emptyHash();\n      var helper = this.setupHelper(0, name, helperCall);\n\n      var helperName = this.lastHelper = this.nameLookup('helpers', name, 'helper');\n\n      var lookup = ['(', '(helper = ', helperName, ' || ', nonHelper, ')'];\n      if (!this.options.strict) {\n        lookup[0] = '(helper = ';\n        lookup.push(\n          ' != null ? helper : ',\n          this.aliasable('helpers.helperMissing')\n        );\n      }\n\n      this.push([\n          '(', lookup,\n          (helper.paramsInit ? ['),(', helper.paramsInit] : []), '),',\n          '(typeof helper === ', this.aliasable('\"function\"'), ' ? ',\n          this.source.functionCall('helper','call', helper.callParams), ' : helper))'\n      ]);\n    },\n\n    // [invokePartial]\n    //\n    // On stack, before: context, ...\n    // On stack after: result of partial invocation\n    //\n    // This operation pops off a context, invokes a partial with that context,\n    // and pushes the result of the invocation back.\n    invokePartial: function(isDynamic, name, indent) {\n      var params = [],\n          options = this.setupParams(name, 1, params, false);\n\n      if (isDynamic) {\n        name = this.popStack();\n        delete options.name;\n      }\n\n      if (indent) {\n        options.indent = JSON.stringify(indent);\n      }\n      options.helpers = 'helpers';\n      options.partials = 'partials';\n\n      if (!isDynamic) {\n        params.unshift(this.nameLookup('partials', name, 'partial'));\n      } else {\n        params.unshift(name);\n      }\n\n      if (this.options.compat) {\n        options.depths = 'depths';\n      }\n      options = this.objectLiteral(options);\n      params.push(options);\n\n      this.push(this.source.functionCall('this.invokePartial', '', params));\n    },\n\n    // [assignToHash]\n    //\n    // On stack, before: value, ..., hash, ...\n    // On stack, after: ..., hash, ...\n    //\n    // Pops a value off the stack and assigns it to the current hash\n    assignToHash: function(key) {\n      var value = this.popStack(),\n          context,\n          type,\n          id;\n\n      if (this.trackIds) {\n        id = this.popStack();\n      }\n      if (this.stringParams) {\n        type = this.popStack();\n        context = this.popStack();\n      }\n\n      var hash = this.hash;\n      if (context) {\n        hash.contexts[key] = context;\n      }\n      if (type) {\n        hash.types[key] = type;\n      }\n      if (id) {\n        hash.ids[key] = id;\n      }\n      hash.values[key] = value;\n    },\n\n    pushId: function(type, name, child) {\n      if (type === 'BlockParam') {\n        this.pushStackLiteral(\n            'blockParams[' + name[0] + '].path[' + name[1] + ']'\n            + (child ? ' + ' + JSON.stringify('.' + child) : ''));\n      } else if (type === 'PathExpression') {\n        this.pushString(name);\n      } else if (type === 'SubExpression') {\n        this.pushStackLiteral('true');\n      } else {\n        this.pushStackLiteral('null');\n      }\n    },\n\n    // HELPERS\n\n    compiler: JavaScriptCompiler,\n\n    compileChildren: function(environment, options) {\n      var children = environment.children, child, compiler;\n\n      for(var i=0, l=children.length; i<l; i++) {\n        child = children[i];\n        compiler = new this.compiler();\n\n        var index = this.matchExistingProgram(child);\n\n        if (index == null) {\n          this.context.programs.push('');     // Placeholder to prevent name conflicts for nested children\n          index = this.context.programs.length;\n          child.index = index;\n          child.name = 'program' + index;\n          this.context.programs[index] = compiler.compile(child, options, this.context, !this.precompile);\n          this.context.environments[index] = child;\n\n          this.useDepths = this.useDepths || compiler.useDepths;\n          this.useBlockParams = this.useBlockParams || compiler.useBlockParams;\n        } else {\n          child.index = index;\n          child.name = 'program' + index;\n\n          this.useDepths = this.useDepths || child.useDepths;\n          this.useBlockParams = this.useBlockParams || child.useBlockParams;\n        }\n      }\n    },\n    matchExistingProgram: function(child) {\n      for (var i = 0, len = this.context.environments.length; i < len; i++) {\n        var environment = this.context.environments[i];\n        if (environment && environment.equals(child)) {\n          return i;\n        }\n      }\n    },\n\n    programExpression: function(guid) {\n      var child = this.environment.children[guid],\n          programParams = [child.index, 'data', child.blockParams];\n\n      if (this.useBlockParams || this.useDepths) {\n        programParams.push('blockParams');\n      }\n      if (this.useDepths) {\n        programParams.push('depths');\n      }\n\n      return 'this.program(' + programParams.join(', ') + ')';\n    },\n\n    useRegister: function(name) {\n      if(!this.registers[name]) {\n        this.registers[name] = true;\n        this.registers.list.push(name);\n      }\n    },\n\n    push: function(expr) {\n      if (!(expr instanceof Literal)) {\n        expr = this.source.wrap(expr);\n      }\n\n      this.inlineStack.push(expr);\n      return expr;\n    },\n\n    pushStackLiteral: function(item) {\n      this.push(new Literal(item));\n    },\n\n    pushSource: function(source) {\n      if (this.pendingContent) {\n        this.source.push(\n            this.appendToBuffer(this.source.quotedString(this.pendingContent), this.pendingLocation));\n        this.pendingContent = undefined;\n      }\n\n      if (source) {\n        this.source.push(source);\n      }\n    },\n\n    replaceStack: function(callback) {\n      var prefix = ['('],\n          stack,\n          createdStack,\n          usedLiteral;\n\n      /* istanbul ignore next */\n      if (!this.isInline()) {\n        throw new Exception('replaceStack on non-inline');\n      }\n\n      // We want to merge the inline statement into the replacement statement via ','\n      var top = this.popStack(true);\n\n      if (top instanceof Literal) {\n        // Literals do not need to be inlined\n        stack = [top.value];\n        prefix = ['(', stack];\n        usedLiteral = true;\n      } else {\n        // Get or create the current stack name for use by the inline\n        createdStack = true;\n        var name = this.incrStack();\n\n        prefix = ['((', this.push(name), ' = ', top, ')'];\n        stack = this.topStack();\n      }\n\n      var item = callback.call(this, stack);\n\n      if (!usedLiteral) {\n        this.popStack();\n      }\n      if (createdStack) {\n        this.stackSlot--;\n      }\n      this.push(prefix.concat(item, ')'));\n    },\n\n    incrStack: function() {\n      this.stackSlot++;\n      if(this.stackSlot > this.stackVars.length) { this.stackVars.push(\"stack\" + this.stackSlot); }\n      return this.topStackName();\n    },\n    topStackName: function() {\n      return \"stack\" + this.stackSlot;\n    },\n    flushInline: function() {\n      var inlineStack = this.inlineStack;\n      this.inlineStack = [];\n      for (var i = 0, len = inlineStack.length; i < len; i++) {\n        var entry = inlineStack[i];\n        /* istanbul ignore if */\n        if (entry instanceof Literal) {\n          this.compileStack.push(entry);\n        } else {\n          var stack = this.incrStack();\n          this.pushSource([stack, ' = ', entry, ';']);\n          this.compileStack.push(stack);\n        }\n      }\n    },\n    isInline: function() {\n      return this.inlineStack.length;\n    },\n\n    popStack: function(wrapped) {\n      var inline = this.isInline(),\n          item = (inline ? this.inlineStack : this.compileStack).pop();\n\n      if (!wrapped && (item instanceof Literal)) {\n        return item.value;\n      } else {\n        if (!inline) {\n          /* istanbul ignore next */\n          if (!this.stackSlot) {\n            throw new Exception('Invalid stack pop');\n          }\n          this.stackSlot--;\n        }\n        return item;\n      }\n    },\n\n    topStack: function() {\n      var stack = (this.isInline() ? this.inlineStack : this.compileStack),\n          item = stack[stack.length - 1];\n\n      /* istanbul ignore if */\n      if (item instanceof Literal) {\n        return item.value;\n      } else {\n        return item;\n      }\n    },\n\n    contextName: function(context) {\n      if (this.useDepths && context) {\n        return 'depths[' + context + ']';\n      } else {\n        return 'depth' + context;\n      }\n    },\n\n    quotedString: function(str) {\n      return this.source.quotedString(str);\n    },\n\n    objectLiteral: function(obj) {\n      return this.source.objectLiteral(obj);\n    },\n\n    aliasable: function(name) {\n      var ret = this.aliases[name];\n      if (ret) {\n        ret.referenceCount++;\n        return ret;\n      }\n\n      ret = this.aliases[name] = this.source.wrap(name);\n      ret.aliasable = true;\n      ret.referenceCount = 1;\n\n      return ret;\n    },\n\n    setupHelper: function(paramSize, name, blockHelper) {\n      var params = [],\n          paramsInit = this.setupHelperArgs(name, paramSize, params, blockHelper);\n      var foundHelper = this.nameLookup('helpers', name, 'helper');\n\n      return {\n        params: params,\n        paramsInit: paramsInit,\n        name: foundHelper,\n        callParams: [this.contextName(0)].concat(params)\n      };\n    },\n\n    setupParams: function(helper, paramSize, params) {\n      var options = {}, contexts = [], types = [], ids = [], param;\n\n      options.name = this.quotedString(helper);\n      options.hash = this.popStack();\n\n      if (this.trackIds) {\n        options.hashIds = this.popStack();\n      }\n      if (this.stringParams) {\n        options.hashTypes = this.popStack();\n        options.hashContexts = this.popStack();\n      }\n\n      var inverse = this.popStack(),\n          program = this.popStack();\n\n      // Avoid setting fn and inverse if neither are set. This allows\n      // helpers to do a check for `if (options.fn)`\n      if (program || inverse) {\n        options.fn = program || 'this.noop';\n        options.inverse = inverse || 'this.noop';\n      }\n\n      // The parameters go on to the stack in order (making sure that they are evaluated in order)\n      // so we need to pop them off the stack in reverse order\n      var i = paramSize;\n      while (i--) {\n        param = this.popStack();\n        params[i] = param;\n\n        if (this.trackIds) {\n          ids[i] = this.popStack();\n        }\n        if (this.stringParams) {\n          types[i] = this.popStack();\n          contexts[i] = this.popStack();\n        }\n      }\n\n      if (this.trackIds) {\n        options.ids = this.source.generateArray(ids);\n      }\n      if (this.stringParams) {\n        options.types = this.source.generateArray(types);\n        options.contexts = this.source.generateArray(contexts);\n      }\n\n      if (this.options.data) {\n        options.data = 'data';\n      }\n      if (this.useBlockParams) {\n        options.blockParams = 'blockParams';\n      }\n      return options;\n    },\n\n    setupHelperArgs: function(helper, paramSize, params, useRegister) {\n      var options = this.setupParams(helper, paramSize, params, true);\n      options = this.objectLiteral(options);\n      if (useRegister) {\n        this.useRegister('options');\n        params.push('options');\n        return ['options=', options];\n      } else {\n        params.push(options);\n        return '';\n      }\n    }\n  };\n\n\n  var reservedWords = (\n    \"break else new var\" +\n    \" case finally return void\" +\n    \" catch for switch while\" +\n    \" continue function this with\" +\n    \" default if throw\" +\n    \" delete in try\" +\n    \" do instanceof typeof\" +\n    \" abstract enum int short\" +\n    \" boolean export interface static\" +\n    \" byte extends long super\" +\n    \" char final native synchronized\" +\n    \" class float package throws\" +\n    \" const goto private transient\" +\n    \" debugger implements protected volatile\" +\n    \" double import public let yield await\" +\n    \" null true false\"\n  ).split(\" \");\n\n  var compilerWords = JavaScriptCompiler.RESERVED_WORDS = {};\n\n  for(var i=0, l=reservedWords.length; i<l; i++) {\n    compilerWords[reservedWords[i]] = true;\n  }\n\n  JavaScriptCompiler.isValidJavaScriptVariableName = function(name) {\n    return !JavaScriptCompiler.RESERVED_WORDS[name] && /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(name);\n  };\n\n  function strictLookup(requireTerminal, compiler, parts, type) {\n    var stack = compiler.popStack();\n\n    var i = 0,\n        len = parts.length;\n    if (requireTerminal) {\n      len--;\n    }\n\n    for (; i < len; i++) {\n      stack = compiler.nameLookup(stack, parts[i], type);\n    }\n\n    if (requireTerminal) {\n      return [compiler.aliasable('this.strict'), '(', stack, ', ', compiler.quotedString(parts[i]), ')'];\n    } else {\n      return stack;\n    }\n  }\n\n  __exports__ = JavaScriptCompiler;\n  return __exports__;\n})(__module2__, __module4__, __module3__, __module15__);\n\n// handlebars.js\nvar __module0__ = (function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __dependency5__) {\n  \"use strict\";\n  var __exports__;\n  /*globals Handlebars: true */\n  var Handlebars = __dependency1__;\n\n  // Compiler imports\n  var AST = __dependency2__;\n  var Parser = __dependency3__.parser;\n  var parse = __dependency3__.parse;\n  var Compiler = __dependency4__.Compiler;\n  var compile = __dependency4__.compile;\n  var precompile = __dependency4__.precompile;\n  var JavaScriptCompiler = __dependency5__;\n\n  var _create = Handlebars.create;\n  var create = function() {\n    var hb = _create();\n\n    hb.compile = function(input, options) {\n      return compile(input, options, hb);\n    };\n    hb.precompile = function (input, options) {\n      return precompile(input, options, hb);\n    };\n\n    hb.AST = AST;\n    hb.Compiler = Compiler;\n    hb.JavaScriptCompiler = JavaScriptCompiler;\n    hb.Parser = Parser;\n    hb.parse = parse;\n\n    return hb;\n  };\n\n  Handlebars = create();\n  Handlebars.create = create;\n\n  /*jshint -W040 */\n  /* istanbul ignore next */\n  var root = typeof global !== 'undefined' ? global : window,\n      $Handlebars = root.Handlebars;\n  /* istanbul ignore next */\n  Handlebars.noConflict = function() {\n    if (root.Handlebars === Handlebars) {\n      root.Handlebars = $Handlebars;\n    }\n  };\n\n  Handlebars['default'] = Handlebars;\n\n  __exports__ = Handlebars;\n  return __exports__;\n})(__module1__, __module7__, __module8__, __module13__, __module14__);\n\n  return __module0__;\n}));\n\n","/**\n * @license RequireJS text 2.0.14 Copyright (c) 2010-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/requirejs/text for details\n */\n/*jslint regexp: true */\n/*global require, XMLHttpRequest, ActiveXObject,\n  define, window, process, Packages,\n  java, location, Components, FileUtils */\n\ndefine('text',['module'], function (module) {\n    'use strict';\n\n    var text, fs, Cc, Ci, xpcIsWindows,\n        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],\n        xmlRegExp = /^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>/im,\n        bodyRegExp = /<body[^>]*>\\s*([\\s\\S]+)\\s*<\\/body>/im,\n        hasLocation = typeof location !== 'undefined' && location.href,\n        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\\:/, ''),\n        defaultHostName = hasLocation && location.hostname,\n        defaultPort = hasLocation && (location.port || undefined),\n        buildMap = {},\n        masterConfig = (module.config && module.config()) || {};\n\n    text = {\n        version: '2.0.14',\n\n        strip: function (content) {\n            //Strips <?xml ...?> declarations so that external SVG and XML\n            //documents can be added to a document without worry. Also, if the string\n            //is an HTML document, only the part inside the body tag is returned.\n            if (content) {\n                content = content.replace(xmlRegExp, \"\");\n                var matches = content.match(bodyRegExp);\n                if (matches) {\n                    content = matches[1];\n                }\n            } else {\n                content = \"\";\n            }\n            return content;\n        },\n\n        jsEscape: function (content) {\n            return content.replace(/(['\\\\])/g, '\\\\$1')\n                .replace(/[\\f]/g, \"\\\\f\")\n                .replace(/[\\b]/g, \"\\\\b\")\n                .replace(/[\\n]/g, \"\\\\n\")\n                .replace(/[\\t]/g, \"\\\\t\")\n                .replace(/[\\r]/g, \"\\\\r\")\n                .replace(/[\\u2028]/g, \"\\\\u2028\")\n                .replace(/[\\u2029]/g, \"\\\\u2029\");\n        },\n\n        createXhr: masterConfig.createXhr || function () {\n            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.\n            var xhr, i, progId;\n            if (typeof XMLHttpRequest !== \"undefined\") {\n                return new XMLHttpRequest();\n            } else if (typeof ActiveXObject !== \"undefined\") {\n                for (i = 0; i < 3; i += 1) {\n                    progId = progIds[i];\n                    try {\n                        xhr = new ActiveXObject(progId);\n                    } catch (e) {}\n\n                    if (xhr) {\n                        progIds = [progId];  // so faster next time\n                        break;\n                    }\n                }\n            }\n\n            return xhr;\n        },\n\n        /**\n         * Parses a resource name into its component parts. Resource names\n         * look like: module/name.ext!strip, where the !strip part is\n         * optional.\n         * @param {String} name the resource name\n         * @returns {Object} with properties \"moduleName\", \"ext\" and \"strip\"\n         * where strip is a boolean.\n         */\n        parseName: function (name) {\n            var modName, ext, temp,\n                strip = false,\n                index = name.lastIndexOf(\".\"),\n                isRelative = name.indexOf('./') === 0 ||\n                             name.indexOf('../') === 0;\n\n            if (index !== -1 && (!isRelative || index > 1)) {\n                modName = name.substring(0, index);\n                ext = name.substring(index + 1);\n            } else {\n                modName = name;\n            }\n\n            temp = ext || modName;\n            index = temp.indexOf(\"!\");\n            if (index !== -1) {\n                //Pull off the strip arg.\n                strip = temp.substring(index + 1) === \"strip\";\n                temp = temp.substring(0, index);\n                if (ext) {\n                    ext = temp;\n                } else {\n                    modName = temp;\n                }\n            }\n\n            return {\n                moduleName: modName,\n                ext: ext,\n                strip: strip\n            };\n        },\n\n        xdRegExp: /^((\\w+)\\:)?\\/\\/([^\\/\\\\]+)/,\n\n        /**\n         * Is an URL on another domain. Only works for browser use, returns\n         * false in non-browser environments. Only used to know if an\n         * optimized .js version of a text resource should be loaded\n         * instead.\n         * @param {String} url\n         * @returns Boolean\n         */\n        useXhr: function (url, protocol, hostname, port) {\n            var uProtocol, uHostName, uPort,\n                match = text.xdRegExp.exec(url);\n            if (!match) {\n                return true;\n            }\n            uProtocol = match[2];\n            uHostName = match[3];\n\n            uHostName = uHostName.split(':');\n            uPort = uHostName[1];\n            uHostName = uHostName[0];\n\n            return (!uProtocol || uProtocol === protocol) &&\n                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&\n                   ((!uPort && !uHostName) || uPort === port);\n        },\n\n        finishLoad: function (name, strip, content, onLoad) {\n            content = strip ? text.strip(content) : content;\n            if (masterConfig.isBuild) {\n                buildMap[name] = content;\n            }\n            onLoad(content);\n        },\n\n        load: function (name, req, onLoad, config) {\n            //Name has format: some.module.filext!strip\n            //The strip part is optional.\n            //if strip is present, then that means only get the string contents\n            //inside a body tag in an HTML string. For XML/SVG content it means\n            //removing the <?xml ...?> declarations so the content can be inserted\n            //into the current doc without problems.\n\n            // Do not bother with the work if a build and text will\n            // not be inlined.\n            if (config && config.isBuild && !config.inlineText) {\n                onLoad();\n                return;\n            }\n\n            masterConfig.isBuild = config && config.isBuild;\n\n            var parsed = text.parseName(name),\n                nonStripName = parsed.moduleName +\n                    (parsed.ext ? '.' + parsed.ext : ''),\n                url = req.toUrl(nonStripName),\n                useXhr = (masterConfig.useXhr) ||\n                         text.useXhr;\n\n            // Do not load if it is an empty: url\n            if (url.indexOf('empty:') === 0) {\n                onLoad();\n                return;\n            }\n\n            //Load the text. Use XHR if possible and in a browser.\n            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {\n                text.get(url, function (content) {\n                    text.finishLoad(name, parsed.strip, content, onLoad);\n                }, function (err) {\n                    if (onLoad.error) {\n                        onLoad.error(err);\n                    }\n                });\n            } else {\n                //Need to fetch the resource across domains. Assume\n                //the resource has been optimized into a JS module. Fetch\n                //by the module name + extension, but do not include the\n                //!strip part to avoid file system issues.\n                req([nonStripName], function (content) {\n                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,\n                                    parsed.strip, content, onLoad);\n                });\n            }\n        },\n\n        write: function (pluginName, moduleName, write, config) {\n            if (buildMap.hasOwnProperty(moduleName)) {\n                var content = text.jsEscape(buildMap[moduleName]);\n                write.asModule(pluginName + \"!\" + moduleName,\n                               \"define(function () { return '\" +\n                                   content +\n                               \"';});\\n\");\n            }\n        },\n\n        writeFile: function (pluginName, moduleName, req, write, config) {\n            var parsed = text.parseName(moduleName),\n                extPart = parsed.ext ? '.' + parsed.ext : '',\n                nonStripName = parsed.moduleName + extPart,\n                //Use a '.js' file name so that it indicates it is a\n                //script that can be loaded across domains.\n                fileName = req.toUrl(parsed.moduleName + extPart) + '.js';\n\n            //Leverage own load() method to load plugin value, but only\n            //write out values that do not have the strip argument,\n            //to avoid any potential issues with ! in file names.\n            text.load(nonStripName, req, function (value) {\n                //Use own write() method to construct full module value.\n                //But need to create shell that translates writeFile's\n                //write() to the right interface.\n                var textWrite = function (contents) {\n                    return write(fileName, contents);\n                };\n                textWrite.asModule = function (moduleName, contents) {\n                    return write.asModule(moduleName, fileName, contents);\n                };\n\n                text.write(pluginName, nonStripName, textWrite, config);\n            }, config);\n        }\n    };\n\n    if (masterConfig.env === 'node' || (!masterConfig.env &&\n            typeof process !== \"undefined\" &&\n            process.versions &&\n            !!process.versions.node &&\n            !process.versions['node-webkit'] &&\n            !process.versions['atom-shell'])) {\n        //Using special require.nodeRequire, something added by r.js.\n        fs = require.nodeRequire('fs');\n\n        text.get = function (url, callback, errback) {\n            try {\n                var file = fs.readFileSync(url, 'utf8');\n                //Remove BOM (Byte Mark Order) from utf8 files if it is there.\n                if (file[0] === '\\uFEFF') {\n                    file = file.substring(1);\n                }\n                callback(file);\n            } catch (e) {\n                if (errback) {\n                    errback(e);\n                }\n            }\n        };\n    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&\n            text.createXhr())) {\n        text.get = function (url, callback, errback, headers) {\n            var xhr = text.createXhr(), header;\n            xhr.open('GET', url, true);\n\n            //Allow plugins direct access to xhr headers\n            if (headers) {\n                for (header in headers) {\n                    if (headers.hasOwnProperty(header)) {\n                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);\n                    }\n                }\n            }\n\n            //Allow overrides specified in config\n            if (masterConfig.onXhr) {\n                masterConfig.onXhr(xhr, url);\n            }\n\n            xhr.onreadystatechange = function (evt) {\n                var status, err;\n                //Do not explicitly handle errors, those should be\n                //visible via console output in the browser.\n                if (xhr.readyState === 4) {\n                    status = xhr.status || 0;\n                    if (status > 399 && status < 600) {\n                        //An http 4xx or 5xx error. Signal an error.\n                        err = new Error(url + ' HTTP status: ' + status);\n                        err.xhr = xhr;\n                        if (errback) {\n                            errback(err);\n                        }\n                    } else {\n                        callback(xhr.responseText);\n                    }\n\n                    if (masterConfig.onXhrComplete) {\n                        masterConfig.onXhrComplete(xhr, url);\n                    }\n                }\n            };\n            xhr.send(null);\n        };\n    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&\n            typeof Packages !== 'undefined' && typeof java !== 'undefined')) {\n        //Why Java, why is this so awkward?\n        text.get = function (url, callback) {\n            var stringBuffer, line,\n                encoding = \"utf-8\",\n                file = new java.io.File(url),\n                lineSeparator = java.lang.System.getProperty(\"line.separator\"),\n                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),\n                content = '';\n            try {\n                stringBuffer = new java.lang.StringBuffer();\n                line = input.readLine();\n\n                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324\n                // http://www.unicode.org/faq/utf_bom.html\n\n                // Note that when we use utf-8, the BOM should appear as \"EF BB BF\", but it doesn't due to this bug in the JDK:\n                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058\n                if (line && line.length() && line.charAt(0) === 0xfeff) {\n                    // Eat the BOM, since we've already found the encoding on this file,\n                    // and we plan to concatenating this buffer with others; the BOM should\n                    // only appear at the top of a file.\n                    line = line.substring(1);\n                }\n\n                if (line !== null) {\n                    stringBuffer.append(line);\n                }\n\n                while ((line = input.readLine()) !== null) {\n                    stringBuffer.append(lineSeparator);\n                    stringBuffer.append(line);\n                }\n                //Make sure we return a JavaScript string and not a Java string.\n                content = String(stringBuffer.toString()); //String\n            } finally {\n                input.close();\n            }\n            callback(content);\n        };\n    } else if (masterConfig.env === 'xpconnect' || (!masterConfig.env &&\n            typeof Components !== 'undefined' && Components.classes &&\n            Components.interfaces)) {\n        //Avert your gaze!\n        Cc = Components.classes;\n        Ci = Components.interfaces;\n        Components.utils['import']('resource://gre/modules/FileUtils.jsm');\n        xpcIsWindows = ('@mozilla.org/windows-registry-key;1' in Cc);\n\n        text.get = function (url, callback) {\n            var inStream, convertStream, fileObj,\n                readData = {};\n\n            if (xpcIsWindows) {\n                url = url.replace(/\\//g, '\\\\');\n            }\n\n            fileObj = new FileUtils.File(url);\n\n            //XPCOM, you so crazy\n            try {\n                inStream = Cc['@mozilla.org/network/file-input-stream;1']\n                           .createInstance(Ci.nsIFileInputStream);\n                inStream.init(fileObj, 1, 0, false);\n\n                convertStream = Cc['@mozilla.org/intl/converter-input-stream;1']\n                                .createInstance(Ci.nsIConverterInputStream);\n                convertStream.init(inStream, \"utf-8\", inStream.available(),\n                Ci.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER);\n\n                convertStream.readString(inStream.available(), readData);\n                convertStream.close();\n                inStream.close();\n                callback(readData.value);\n            } catch (e) {\n                throw new Error((fileObj && fileObj.path || '') + ': ' + e);\n            }\n        };\n    }\n    return text;\n});\n","\ndefine('text!templates/appMain.html',[],function () { return '<header class=\"app-header\" data-app-view-region=\"header\">\\n    <div class=\"app-header-brand\">Shut The Box</div>\\n    <button type=\"button\" class=\"btn app-header-btn\" data-app-view-action=\"newGame\">New Game</button>\\n</header>\\n<div data-app-view-region=\"game\">\\n</div>';});\n\n","\ndefine('text!templates/game.html',[],function () { return '<section class=\"app-players\" data-game-view-region=\"player\">\\n    <!-- players -->\\n</section>\\n<section class=\"app-box\" data-game-view-region=\"box\">\\n    <!-- box -->\\n</section>\\n<section class=\"app-dice\" data-game-view-region=\"dice\">\\n    <!-- dice -->\\n</section>\\n<section class=\"app-game-controls\" data-game-view-region=\"game\">\\n    <div class=\"btn-actions\">\\n        <button class=\"btn btb-game\" data-game-view-action=\"gameEnd\">\\n            End Game\\n        </button>\\n    </div>\\n</section>';});\n\n","\ndefine('text!templates/boxSection.html',[],function () { return '<div class=\"box-number-list\">\\n    <!-- boxNumber -->\\n</div>\\n<div class=\"btn-actions\">\\n    <button class=\"btn btn-box\" data-view-action=\"endTurn\">End Turn</button>\\n</div>';});\n\n","\ndefine('text!templates/diceSection.html',[],function () { return '<div class=\"dice-result\" data-view-subregion=\"results\">\\n    <div class=\"dice-summary\">\\n        <!-- dice -->\\n    </div>\\n    <dl class=\"dice-sum\">\\n        <dt>Total =</dt>\\n        <dd class=\"dice-total\" data-view-subregion=\"sum\">0</dd>\\n    </dl>\\n</div>\\n<div class=\"dice-controls\" data-view-subregion=\"controls\">\\n    <span class=\"dice-action-label\">throw:</span>\\n    <span class=\"dice-button\" title=\"Throw Single Die\" data-view-action=\"throwSingle\">\\n        <span class=\"dice-indicator\"><i class=\"icon icon-die\" data-die-amt=\"1\"></i></span>\\n    </span>\\n    <span class=\"dice-separator\">or</span>\\n    <span class=\"dice-button\" title=\"Throw Both Dice\" data-view-action=\"throwBoth\">\\n        <span class=\"dice-indicator\"><i class=\"icon icon-die\" data-die-amt=\"6\"></i></span>\\n        <span class=\"dice-indicator\"><i class=\"icon icon-die\" data-die-amt=\"4\"></i></span>\\n    </span>\\n</div>';});\n\n","\ndefine('text!templates/playerSection.html',[],function () { return '<h1 class=\"player-title\">Players</h1>\\n<div class=\"player-scoreboard\">\\n    <!-- player -->\\n</div>';});\n\n","\ndefine('text!templates/boxItem.html',[],function () { return '<div class=\"box-number-indicator\">\\n    <div class=\"number-tile\">\\n        <div class=\"number-tile-top\">{{name}}</div>\\n        <div class=\"number-tile-front\">{{name}}</div>\\n    </div>\\n</div>';});\n\n","\ndefine('text!templates/player.html',[],function () { return '<h2>{{name}}</h2>\\n<p>Score: <span data-view-region=\"score\">{{score}}</span></p>';});\n\n","\ndefine('text!templates/die.html',[],function () { return '<i class=\"icon icon-die\" data-die-amt=\"{{value}}\"></i>';});\n\n","define(\n    'modules/templateManager',[\n        'app', 'handlebars',\n        'text!templates/appMain.html',\n        'text!templates/game.html',\n        'text!templates/boxSection.html',\n        'text!templates/diceSection.html',\n        'text!templates/playerSection.html',\n        'text!templates/boxItem.html',\n        'text!templates/player.html',\n        'text!templates/die.html'\n    ],\n    function(App, hbs, tmplAppMain, tmplGame, tmplBoxSection, tmplDiceSection, tmplPlayerSection, tmplBoxItem, tmplPlayer, tmplDie) {\n\n\n        var TemplateManagerModule = App.module('templateManager', {\n            startWithParent: false,\n            define: function(TemplateManager, MyApp, Backbone, Marionette, $, _) {\n\n                var templates = {\n                    //'view': {\n                    //    raw: '',\n                    //    template: function() {}\n                    //},\n                    appMain: {\n                        raw: tmplAppMain\n                    },\n                    game: {\n                        raw: tmplGame\n                    },\n                    boxSection: {\n                        raw: tmplBoxSection\n                    },\n                    boxItem: {\n                        raw: tmplBoxItem\n                    },\n                    diceSection: {\n                        raw: tmplDiceSection\n                    },\n                    die: {\n                        raw: tmplDie\n                    },\n                    playerSection: {\n                        raw: tmplPlayerSection\n                    },\n                    player: {\n                        raw: tmplPlayer\n                    }\n                };\n\n                TemplateManager.compile = function (template) {\n                    return hbs.compile(template);\n                };\n                TemplateManager.define = function (name, template) {\n                    if (!name || !template || templates[name]) {\n                        return;\n                    }\n                    templates[name] = {\n                        raw: template\n                    };\n                };\n                TemplateManager.get = function (name, callback) {\n                    if (!name || !templates[name]) {\n                        return;\n                    }\n                    var tpl = templates[name];\n\n                    if (!tpl.template) {\n                        tpl.template = this.compile(tpl.raw);\n                    }\n\n                    if (_.isFunction(callback)) {\n                        callback(tpl.template);\n                    }\n\n                    return tpl.template;\n                };\n            }\n        });\n\n        return TemplateManagerModule;\n    }\n);\n","define('models/player',['app','backbone'], function(App, Backbone) {\n    var PlayerModel = Backbone.Model.extend({\n        defaults: function() {\n            return {\n                score: 0,\n                active: false,\n                done: false\n            };\n        }\n    });\n\n    return PlayerModel;\n});\n","define('collections/players',['app','backbone', 'models/player'], function(App, Backbone, PlayerModel) {\n    var Players = Backbone.Collection.extend({\n        model: PlayerModel,\n        initialize: function() {\n            this.listenTo(App.vent, 'game:player:done', this.onPlayerDone);\n            this.listenTo(App.vent, 'game:force:end', this.onForceEnd);\n        },\n        onPlayerDone: function(data) {\n            var activePlayerModel = this.getActivePlayer();\n            activePlayerModel.set({\n                score: data.score,\n                active: false,\n                done: true\n            });\n            if (!data.brokeBox) {\n                var nextPlayer = this.getNextPlayer();\n                if (nextPlayer) {\n                    nextPlayer.set('active', true);\n                    App.vent.trigger('game:player:change', {\n                        previousPlayer: activePlayerModel,\n                        player: nextPlayer\n                    });\n                } else {\n                    var leadersByScore = this.getLeadersByScore();\n                    App.vent.trigger('game:over', {\n                        winners: leadersByScore.leaders,\n                        score: leadersByScore.score,\n                        brokeBox: false\n                    });\n                }\n            } else {\n                App.vent.trigger('game:over', {\n                    winners: [activePlayerModel],\n                    score: activePlayerModel.get('score'),\n                    brokeBox: true\n                });\n            }\n        },\n        onForceEnd: function() {\n            var leadersByScore = this.getLeadersByScore();\n            App.vent.trigger('game:over', {\n                winners: leadersByScore.leaders,\n                score: leadersByScore.score,\n                brokeBox: false\n            });\n        },\n        getActivePlayer: function() {\n            return this.findWhere({ active: true });\n        },\n        getNextPlayer: function() {\n            return this.findWhere({ active: false, done: false });\n        },\n        getLeadersByScore: function() {\n            var lowestScore = _.min(_.map(this.models, function(model) { return model.get('score'); }));\n\n            var leaders = _.reject(this.models, function(model) { return model.get('score') !== lowestScore; });\n\n            return {\n                leaders: leaders,\n                score: lowestScore\n            }\n        }\n    });\n\n    return Players;\n});\n","define('views/playerView',['app','marionette', 'models/player'], function(App, Marionette, PlayerModel) {\n    var BoxItemView = Marionette.ItemView.extend({\n        model: PlayerModel,\n        template: App.templateManager.get('player'),\n        className: 'player-profile',\n        tagName: 'li',\n\n        modelEvents: {\n            'change': 'onChange'\n        },\n\n        initialize: function() {\n            //this.listenTo(this.model, 'change', this.onChange);\n        },\n        onChange: function(e) {\n            this.updatePlayerView();\n        },\n        onRender: function(e) {\n            this.updatePlayerView();\n        },\n        updatePlayerView: function() {\n            this.$el.find('[data-view-region=\"score\"]').html(this.model.get('score'));\n            this.$el.toggleClass('is-active', this.model.get('active'));\n            this.$el.toggleClass('is-done', this.model.get('done'));\n        }\n    });\n\n    return BoxItemView;\n});\n","define('views/playerListView',['app','marionette', 'views/playerView'], function(App, Marionette, PlayerView) {\n    var PlayerListView = Marionette.CollectionView.extend({\n        childView: PlayerView,\n        className: 'player-list',\n        tagName: 'ul'\n    });\n\n    return PlayerListView;\n});\n","define('views/playerSectionView',['app','marionette','collections/players','views/playerListView'], function(App, Marionette, Players, PlayerListView) {\n    var PlayerSectionView = Marionette.LayoutView.extend({\n        template: App.templateManager.get('playerSection'),\n        regions: {\n            scoreboardRegion: '.player-scoreboard'\n        },\n        initialize: function() {\n\n            var playerListData = [];\n            for (var i=1, l=2; i<=l; i++) {\n                playerListData.push({\n                    name: 'Player ' + i,\n                    active: i === 1\n                });\n            }\n            this.playersCollection = new Players(playerListData.slice());\n            this.playerListView = new PlayerListView({\n                collection: this.playersCollection\n            });\n        },\n        onBeforeShow: function() {\n            this.getRegion('scoreboardRegion').show(this.playerListView);\n        },\n        onBeforeDestroy: function() {\n            this.playerListView.destroy();\n            this.playerListView = null;\n            this.playersCollection.unbind();\n            this.playersCollection.stopListening();\n            this.playersCollection.reset();\n        }\n    });\n\n    return PlayerSectionView;\n});\n","define('models/boxItem',['app','backbone'], function(App, Backbone) {\n    var BoxItemModel = Backbone.Model.extend({\n        defaults: function() {\n            return {\n                selected: false,\n                mode: 'default'  // 'default', 'selectable', 'pending', 'selected'\n            };\n        }\n    });\n\n    return BoxItemModel;\n});\n","define('collections/boxItems',['underscore','app','backbone', 'models/boxItem'], function(_, App, Backbone, BoxItemModel) {\n    var statics = {\n        getValues: function(models) {\n            var values = _.map(models, function(model) {\n                return model.get('value');\n            });\n            return values;\n        },\n        addAll: function(arr) {\n            return (_.reduce(arr, function(sum, n) {\n                return sum + n;\n            })) || 0;\n        },\n        getNumberData: function(models) {\n            var numbers = this.getValues(models);\n            var total = this.addAll(numbers);\n            return {\n                numbers: numbers,\n                total: total\n            };\n        },\n        filterNumbersThatSum: function(list, sum) {\n            var results = [];\n\n            var me = this;\n            var listRecurse = function (numList, partial) {\n                partial || (partial = []);\n\n                if (partial.length) {\n                    var total = me.addAll(partial);\n\n                    if (total === sum) {\n                        results = _.union(results, partial);\n                    } else if (total > sum) {\n                        return;\n                    }\n                }\n\n                var numLen = numList.length;\n                for (var i = 0; i < numLen; i++) {\n                    var num = numList[i];\n\n                    var remaining = numList.slice(i + 1);\n\n                    var partialCopy = partial.slice();\n                    partialCopy.push(num);\n                    listRecurse(remaining, partialCopy);\n                }\n            };\n\n            listRecurse(list);\n\n            return results;\n        }\n    };\n    var BoxItems = Backbone.Collection.extend({\n        model: BoxItemModel,\n        initialize: function() {\n\n            this.scoreToMatch = 0;\n            this.diceRolled = false;\n\n            this.listenTo(App.vent, 'game:dice:rolled', this.onDiceRolled);\n            this.listenTo(this, 'change:mode', this.onNumberModeChanged);\n            this.listenTo(App.vent, 'game:turn:end', this.onTurnEnd);\n        },\n        onDiceRolled: function(data) {\n            this.scoreToMatch = data.total;\n            this.updateNumberState();\n            this.diceRolled = true;\n\n            var selectedNumbers = this.getSelectedNumbers();\n            var selectedTotal = selectedNumbers.total;\n            var validNumbers = this.filterChoosableNumbers(this.scoreToMatch);\n            if (!validNumbers.length) {\n                var remainingNumbers = this.getRemainingNumbers();\n                App.vent.trigger('game:player:done', {\n                    score: remainingNumbers.total,\n                    brokeBox: !remainingNumbers.numbers.length\n                });\n            }\n        },\n        onNumberModeChanged: function() {\n            if (!this.diceRolled) {\n                return;\n            }\n            var pendingNumbers = this.getPendingNumbers();\n            var pendingTotal = pendingNumbers.total;\n\n            var matchDiff = this.scoreToMatch - pendingTotal;\n\n            var validNumbers = this.filterChoosableNumbers(matchDiff);\n\n            this.updateNumberState(validNumbers);\n\n            var remainingNumbers = this.getRemainingNumbers();\n            var data = {\n                validNumbers: validNumbers,\n                remainingNumbers: remainingNumbers.numbers,\n                remainingTotal: remainingNumbers.total,\n                scoreToMatch: this.scoreToMatch,\n                matchDiff: matchDiff,\n                isMatched: (matchDiff === 0)\n            };\n            App.vent.trigger('game:turn:state:changed', data);\n\n            if (!remainingNumbers.numbers.length || (!data.isMatched && remainingNumbers.numbers.length && !validNumbers.length)) {\n                App.vent.trigger('game:player:done', {\n                    score: remainingNumbers.total,\n                    brokeBox: !remainingNumbers.numbers.length\n                });\n            }\n        },\n        onTurnEnd: function() {\n            this.diceRolled = false;\n            this.commitSelections();\n        },\n\n        commitSelections: function() {\n            _.each(this.models, function(model) {\n                var mode = model.get('mode');\n                if (mode === 'selected') {\n                    return;\n                }\n                if (mode === 'pending') {\n                    model.set({\n                        mode: 'selected'\n                    });\n                } else {\n                    model.set('mode', 'default');\n                }\n            });\n        },\n        updateNumberState: function(validNumbers) {\n            validNumbers || (validNumbers = this.filterChoosableNumbers());\n\n            _.each(this.models, function(model) {\n                var mode = model.get('mode');\n                if (mode === 'selected' || mode === 'pending') {\n                    return;\n                }\n                var value = model.get('value');\n                if (_.contains(validNumbers, value)) {\n                    model.set('mode', 'selectable');\n                } else {\n                    model.set('mode', 'default');\n                }\n            });\n\n        },\n        getSelectedNumbers: function() {\n            var models = this.where({ mode: 'selected' });\n\n            return statics.getNumberData(models);\n        },\n        getPendingNumbers: function() {\n            var models = this.where({ mode: 'pending' });\n\n            return statics.getNumberData(models);\n        },\n        getUnselectedNumbers: function() {\n            var models = this.reject({ mode: 'selected' });\n\n            return statics.getNumberData(models);\n        },\n        getRemainingNumbers: function() {\n            var models = this.filter(function(model) {\n                var mode = model.get('mode');\n                return mode === 'selectable' || mode === 'default';\n            });\n\n            return statics.getNumberData(models);\n        },\n        filterChoosableNumbers: function(toMatch) {\n            if (toMatch === undefined) {\n                toMatch = this.scoreToMatch;\n            }\n\n            var numbers = this.getRemainingNumbers().numbers;\n            return statics.filterNumbersThatSum(numbers, toMatch);\n        }\n    });\n\n    return BoxItems;\n});\n","define('views/boxItemView',['app','marionette', 'models/boxItem'], function(App, Marionette, BoxItem) {\n    var BoxItemView = Marionette.ItemView.extend({\n        model: BoxItem,\n        template: App.templateManager.get('boxItem'),\n        className: 'box-number-item',\n        events: {\n            'click': 'onToggleNumber'\n        },\n        initialize: function() {\n            var me = this;\n            this.listenTo(this.model, 'change:mode', function() {\n                var mode = me.model.get('mode');\n                me.$el\n                    .attr('data-number-state', mode)\n                    .data('number-state', mode);\n            });\n\n        },\n        onToggleNumber: function() {\n            this.toggleMode();\n        },\n        toggleMode: function() {\n            var mode = this.model.get('mode');\n            if (mode === 'selected' || mode === 'default') {\n                return;\n            }\n            var modeVal = (mode === 'pending') ? 'selectable' : 'pending';\n            this.model.set('mode', modeVal);\n\n            return modeVal;\n        }\n    });\n\n    return BoxItemView;\n});\n","define('views/boxItemListView',['app','marionette', 'views/boxItemView'], function(App, Marionette, BoxItemView) {\n    var BoxItemListView = Marionette.CollectionView.extend({\n        childView: BoxItemView\n    });\n\n    return BoxItemListView;\n});\n","define('views/boxSectionView',['underscore','app','marionette','collections/boxItems','views/boxItemListView'], function(_, App, Marionette, BoxItems, BoxItemListView) {\n    var BoxSectionView = Marionette.LayoutView.extend({\n        template: App.templateManager.get('boxSection'),\n        regions: {\n            boxListRegion: '.box-number-list'\n        },\n        events: {\n            'click [data-view-action=\"endTurn\"]': 'onEndTurn'\n        },\n        initialize: function() {\n            this.blockTurn();\n            var boxItemsData = [];\n            for (var i=1, l=9; i<=l; i++) {\n                boxItemsData.push({ name: i, value: i });\n            }\n            this.boxItemsCollection = new BoxItems(boxItemsData.slice());\n            this.boxItemListView = new BoxItemListView({\n                collection: this.boxItemsCollection\n            });\n\n            this.scoreToMatch = 0;\n            this.turnCount = 1;\n\n            var me = this;\n            this.listenTo(App.vent, 'game:dice:rolled', function(data) {\n                me.scoreToMatch = data.total;\n                this.blockTurn();\n            });\n            this.listenTo(App.vent, 'game:turn:state:changed', function(data) {\n                if (data.isMatched) {\n                    me.unblockTurn();\n                } else {\n                    me.blockTurn();\n                }\n            });\n\n            //this.listenTo(App.vent, 'game:player:change', function(data) {\n            //    this.scoreToMatch = 0;\n            //    this.turnCount = 1;\n            //    this.blockTurn();\n            //    boxItems.reset(boxItemsData.slice());\n            //});\n        },\n        onBeforeShow: function() {\n            this.getRegion('boxListRegion').show(this.boxItemListView);\n            this.blockTurn();\n        },\n        onBeforeDestroy: function() {\n            this.boxItemListView.destroy();\n            this.boxItemsCollection.unbind();\n            this.boxItemsCollection.stopListening();\n            this.boxItemsCollection.reset();\n        },\n        onEndTurn: function(e) {\n            e.preventDefault();\n            this.endTurn();\n        },\n        endTurn: function() {\n            if (!this.canChangeTurn) {\n                return;\n            }\n            this.blockTurn();\n\n            this.turnCount++;\n            this.getTurnBtn().html('End Turn ' + this.turnCount);\n\n            var data = {};\n            App.vent.trigger('game:turn:end', data);\n        },\n        getTurnBtn: function() {\n            if (!this.$turnBtnEl || !this.$turnBtnEl.length) {\n                this.$turnBtnEl = this.$el.find('[data-view-action=\"endTurn\"]');\n            }\n            return this.$turnBtnEl;\n        },\n        blockTurn: function() {\n            this.canChangeTurn = false;\n            this.getTurnBtn().addClass('is-blocked');\n        },\n        unblockTurn: function() {\n            this.canChangeTurn = true;\n            this.getTurnBtn().removeClass('is-blocked');\n        }\n    });\n\n    return BoxSectionView;\n});\n","define('models/die',['underscore','app','backbone'], function(_, App, Backbone) {\n\n    var DieModel = Backbone.Model.extend({\n        defaults: function() {\n            return {\n                value: 0,\n                rolled: false\n            };\n        },\n        roll: function() {\n            var val = _.random(1, 6);\n            this.set({\n                value: val,\n                rolled: true\n            });\n            return this.get('value');\n        }\n    });\n\n    return DieModel;\n});\n","define('collections/dice',['underscore','app','backbone', 'models/die'], function(_, App, Backbone, DieModel) {\n    var DiceList = Backbone.Collection.extend({\n        model: DieModel,\n        initialize: function() {\n            this.listenTo(App.vent, 'game:turn:end', this.onTurnEnd);\n        },\n        onTurnEnd: function() {\n            _.each(this.models, function(model) {\n                model.set({\n                    value: 0,\n                    rolled: false\n                });\n            });\n        },\n        roll: function(limit) {\n            var dataLength = this.length;\n            if (!limit || limit > dataLength) {\n                limit = dataLength;\n            }\n            var results = [];\n            _.each(this.models, function(model, i) {\n                if (i < limit) {\n                    var val = model.roll();\n                    results.push(val);\n                } else {\n                    model.set({\n                        value: 0,\n                        rolled: false\n                    });\n                }\n            });\n\n            return results;\n        },\n        getTotal: function() {\n            var modelValues = _(this).map(function(model) {\n                return model.get('value');\n            });\n\n            return (_.reduce(modelValues, function(sum, n) {\n                    return sum + n;\n                })) || 0;\n        }\n    });\n\n    return DiceList;\n});\n","define('views/dieView',['app','marionette', 'models/die'], function(App, Marionette, DieModel) {\n    var BoxItemView = Marionette.ItemView.extend({\n        model: DieModel,\n        template: App.templateManager.get('die'),\n        tagName: 'li',\n        className: 'dice-indicator',\n        initialize: function() {\n            var me = this;\n            this.listenTo(this.model, 'change', function(){\n                me.render();\n            });\n        },\n        onRender: function() {\n            var hasRolled = this.model.get('rolled');\n            this.$el.toggleClass('dice-not-rolled', !hasRolled);\n        }\n    });\n\n    return BoxItemView;\n});\n","define('views/diceListView',['app','marionette', 'views/dieView'], function(App, Marionette, DieView) {\n    var DiceListView = Marionette.CollectionView.extend({\n        childView: DieView,\n        tagName: 'ul',\n        className: 'dice-list',\n        initialize: function() {\n\n        },\n        roll: function(limit) {\n            var diceVals = this.collection.roll(limit);\n            var total = 0;\n            _.each(diceVals, function(val) {\n                total += val;\n            });\n\n            var result = { values: diceVals, total: total };\n\n            App.vent.trigger('game:dice:rolled', result);\n        }\n    });\n\n    return DiceListView;\n});\n","define('views/diceSectionView',['underscore','app','marionette','collections/dice', 'views/diceListView'], function(_, App, Marionette, DiceItems, DiceListView) {\n    var DiceSectionView = Marionette.LayoutView.extend({\n        template: App.templateManager.get('diceSection'),\n        regions: {\n            diceListRegion: '.dice-summary'\n        },\n        events: {\n            'click [data-view-action=\"throwSingle\"]': 'onRollSingle',\n            'click [data-view-action=\"throwBoth\"]': 'onRollBoth'\n        },\n        initialize: function() {\n            var diceItemData = [];\n            for (var i=1, l=2; i<=l; i++) {\n                diceItemData.push({ value: 0 });\n            }\n            this.diceItemsCollection = new DiceItems(diceItemData.slice());\n            this.diceListView = new DiceListView({\n                collection: this.diceItemsCollection\n            });\n\n            this.diceRolled = false;\n            var me = this;\n            this.listenTo(App.vent, 'game:dice:rolled', function(data) {\n                this.diceRolled = true;\n                me.displaySum(data);\n                me.blockView();\n            });\n\n            this.listenTo(App.vent, 'game:turn:end', function() {\n                this.diceRolled = false;\n                me.displaySum({ total: 0 });\n                me.unblockView();\n            });\n\n            this.listenTo(App.vent, 'game:turn:state:changed', function(data) {\n                var bigNumbers = _.reject(data.remainingNumbers, function(num) {\n                    return num < 7;\n                });\n                if (bigNumbers.length) {\n                    me.blockSingle();\n                } else {\n                    me.unblockSingle();\n                }\n            });\n\n            //this.listenTo(App.vent, 'game:player:change', function(data) {\n            //    diceItems.reset(diceItemData.slice());\n            //    this.diceRolled = false;\n            //    me.displaySum({ total: 0 });\n            //    me.blockSingle();\n            //    me.unblockView();\n            //});\n        },\n        onBeforeShow: function() {\n            this.getRegion('diceListRegion').show(this.diceListView);\n            this.blockSingle();\n        },\n        onBeforeDestroy: function() {\n            this.diceListView.destroy();\n            this.diceItemsCollection.unbind();\n            this.diceItemsCollection.stopListening();\n            this.diceItemsCollection.reset();\n        },\n        onRollSingle: function() {\n            if (this.diceRolled) {\n                return;\n            }\n            this.diceListView.roll(1);\n        },\n        onRollBoth: function() {\n            if (this.diceRolled) {\n                return;\n            }\n            this.diceListView.roll();\n        },\n        displaySum: function(data) {\n            data || (data = this.diceListView.collection.getTotal());\n            this.$el.find('[data-view-subregion=\"sum\"]').html(data.total);\n        },\n        blockView: function() {\n            this.$el.find('[data-view-subregion=\"controls\"]').addClass('is-blocked');\n        },\n        unblockView: function() {\n            this.$el.find('[data-view-subregion=\"controls\"]').removeClass('is-blocked');\n        },\n        blockSingle: function() {\n            this.$el.find('[data-view-action=\"throwSingle\"], .dice-separator').addClass('hide');\n        },\n        unblockSingle: function() {\n            this.$el.find('[data-view-action=\"throwSingle\"], .dice-separator').removeClass('hide');\n        }\n    });\n\n    return DiceSectionView;\n});\n","define(\n    'views/gameView',[\n        'marionette','app',\n        'views/playerSectionView', 'views/boxSectionView', 'views/diceSectionView'\n    ],\n    function(Marionette, App, PlayerSectionView, BoxSectionView, DiceSectionView) {\n        // FIXME: this should have a GameView that you pass the game config to\n        var GameView = Backbone.Marionette.LayoutView.extend({\n            template: App.templateManager.get('game'),\n            className: 'app-game',\n\n            regions: {\n                boxRegion:    '[data-game-view-region=\"box\"]',\n                diceRegion:   '[data-game-view-region=\"dice\"]',\n                playerRegion: '[data-game-view-region=\"player\"]'\n            },\n\n            events: {\n                'click [data-game-view-action=\"gameEnd\"]': 'onForceEnd'\n            },\n\n            initialize: function(options) {\n                this.playerSection = new PlayerSectionView({\n                    players: 2\n                });\n                this.boxSection = new BoxSectionView();\n                this.diceSection = new DiceSectionView();\n\n                //this.listenTo(App.vent, 'game:turn:state:changed', function(data) {\n                //    if (!data.remainingNumbers.length || (!data.isMatched && data.remainingNumbers.length && !data.validNumbers.length)) {\n                //        App.vent.trigger('game:player:done', {\n                //            score: data.remainingTotal,\n                //            brokeBox: !data.remainingNumbers.length\n                //        });\n                //    }\n                //});\n\n                this.listenTo(App.vent, 'game:over', this.onGameOver);\n\n                this.listenTo(App.vent, 'game:player:change', this.onGameChange);\n            },\n            onBeforeShow: function() {\n                this.getRegion('playerRegion').show(this.playerSection);\n                this.createGameControls();\n            },\n            onBeforeDestroy: function() {\n                this.playerSection.destroy();\n                this.playerSection = null;\n                this.destroyGameControls();\n            },\n            onForceEnd: function() {\n                App.vent.trigger('game:force:end');\n            },\n            onGameChange: function(data) {\n                console.log('changing players', data);\n                var messageList = [];\n                messageList.push(data.previousPlayer.get('name')+' is finished');\n                messageList.push('With a score of ' + data.previousPlayer.get('score'));\n                window.alert(messageList.join('\\n'));\n                this.resetGameControls();\n\n            },\n            onGameOver: function(data) {\n                console.log('game over', data);\n                this.destroyGameControls();\n\n                App.vent.trigger('game:completed', data);\n            },\n            createGameControls: function() {\n                if(!this.boxSection) {\n                    this.boxSection = new BoxSectionView();\n                }\n                this.getRegion('boxRegion').show(this.boxSection);\n\n                if (!this.diceSection) {\n                    this.diceSection = new DiceSectionView();\n                }\n                this.getRegion('diceRegion').show(this.diceSection);\n            },\n            destroyGameControls: function() {\n                if (this.boxSection) {\n                    this.boxSection.destroy();\n                    this.boxSection = null;\n                }\n                if (this.diceSection) {\n                    this.diceSection.destroy();\n                    this.diceSection = null;\n                }\n            },\n            resetGameControls: function() {\n                this.destroyGameControls();\n                this.createGameControls();\n            }\n\n        });\n\n        return GameView;\n    }\n);\n","define(\n    'views/appView',[\n        'marionette','app','views/gameView'\n    ],\n    function(Marionette, App, GameView) {\n        var AppView = Backbone.Marionette.LayoutView.extend({\n            template: App.templateManager.get('appMain'),\n            className: 'app-main',\n\n            regions: {\n                gameRegion: '[data-app-view-region=\"game\"]'\n            },\n            events: {\n                'click [data-app-view-action=\"newGame\"]': 'onNewGame'\n            },\n\n            initialize: function() {\n                this.listenTo(App.vent, 'game:completed', function(data) {\n                    var messageList = ['--GAME OVER--'];\n                    var winners = _.map(data.winners, function(model) { return model.get('name'); });\n\n                    var winnersNamed = 'The winner is ';\n                    if (winners.length > 1) {\n                        messageList.push('We have a tie!');\n                        winnersNamed = 'The winners are ';\n                    }\n                    messageList.push(winnersNamed + winners.join(' and '));\n\n                    if (data.brokeBox) {\n                        messageList.push('The Box has been Shut!');\n                    } else {\n                        messageList.push('With a score of: ' + data.score);\n                    }\n                    window.alert(messageList.join('\\n'));\n                    this.endGame();\n                });\n            },\n            onBeforeDestroy: function() {\n                this.endGame();\n            },\n            onNewGame: function() {\n                if (this.gameSection && !window.confirm('Are you want to end this game?')) {\n                    return;\n                }\n                this.endGame();\n                this.startGame();\n            },\n            startGame: function() {\n                this.gameSection = new GameView({\n                    players: 2\n                });\n                this.getRegion('gameRegion').show(this.gameSection);\n            },\n            endGame: function() {\n                if (this.gameSection) {\n                    this.gameSection.destroy();\n                    this.gameSection = null;\n                }\n            }\n\n        });\n\n        return AppView;\n    }\n);\n","define(\n    'modules/main',[\n        'underscore','app', 'views/appView'\n    ],\n    function(_, App, AppView) {\n\n        var MainModule = App.module('main', function(Main, MyApp, Backbone, Marionette, $, _) {\n            this.listenTo(MyApp, 'start', function() {\n                Main.start();\n            });\n\n            var appView = new AppView();\n            App.getRegion('mainRegion').show(appView);\n\n        });\n\n        return MainModule;\n    }\n);\n","require.config({\n    baseUrl: '/scripts/app',\n    paths: {\n        'backbone':   '../libs/backbone/backbone-1.1.2',\n        'handlebars': '../libs/handlebars/handlebars-v3.0.0',\n        'jquery':     ['//ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min', '../libs/jQuery/jquery-1.11.2'],\n        'marionette': '../libs/marionette/marionette-2.3.2',\n        'modernizr':  '../libs/modernizr/modernizr-2.8.3',\n        'text':       '../libs/require/text',\n        'underscore': '../libs/lodash/lodash.custom'\n    },\n    shim: {\n        'backbone': {\n            deps: ['underscore', 'jquery'],\n            exports: 'Backbone'\n        },\n        handlebars: {\n            exports: 'Handlebars'\n        },\n        marionette: {\n            deps: ['backbone'],\n            exports: 'Marionette'\n        },\n        'modernizr': {\n            exports: 'Modernizr'\n        },\n        underscore: {\n            exports: '_'\n        }\n    }\n});\n\nrequire(['util/modernizr','app', 'modules/templateManager', 'modules/main'], function (Mzr, App) {\n    App.start();\n});\n\n\ndefine(\"main\", function(){});\n\n"]}